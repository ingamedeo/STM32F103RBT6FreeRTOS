ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"crt.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150529 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), GMP vers
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./Libraries/CMSIS/CM3/CoreSupport
  18              	@ -I ./Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  19              	@ -I ./Libraries/STM32F10x_StdPeriph_Driver/inc -I ./Libraries/Drivers/Leds
  20              	@ -I ./Libraries/Drivers/Buttons -I ./Libraries/Drivers/Usart
  21              	@ -I ./Libraries/Drivers/i2c -I ./Libraries/Drivers/BH1750
  22              	@ -I ./Libraries/Drivers/Utilities -I ./FreeRTOS/Source/include
  23              	@ -I ./FreeRTOS/Source/portable/GCC/ARM_CM3 -imultilib armv7-m
  24              	@ -iprefix /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../lib/gcc/arm-none-eabi/4.9.3/
  25              	@ -isysroot /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../arm-none-eabi
  26              	@ -MD Device/startup/crt.d -MF .dep/crt.o.d -MP -MQ Device/startup/crt.o
  27              	@ -D__USES_INITFINI__ -D STM32F10X_MD -D USE_STDPERIPH_DRIVER -D GCC_ARMCM3
  28              	@ -D RUN_FROM_FLASH=1 Device/startup/crt.c -mcpu=cortex-m3 -mthumb
  29              	@ -auxbase-strip Device/startup/crt.o -gdwarf-2 -Os -Wall
  30              	@ -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  31              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  32              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  33              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  34              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
  35              	@ -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
  36              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  37              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  38              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  39              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  40              	@ -finline-atomics -finline-functions -finline-functions-called-once
  41              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  42              	@ -fipa-reference -fipa-sra -fira-hoist-pressure -fira-share-save-slots
  43              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  44              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -fmath-errno
  45              	@ -fmerge-constants -fmerge-debug-strings -fomit-frame-pointer
  46              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  47              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  48              	@ -freorder-functions -frerun-cse-after-loop
  49              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  50              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  51              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  52              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  53              	@ -fsection-anchors -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller
  54              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  55              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  56              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  57              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 2


  58              	@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  59              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  60              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  61              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  62              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  63              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  64              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  65              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  66              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  67              	@ -mvectorize-with-neon-quad
  68              	
  69              		.text
  70              	.Ltext0:
  71              		.cfi_sections	.debug_frame
  72              		.align	1
  73              		.weak	SystemInit
  74              		.thumb
  75              		.thumb_func
  76              		.type	SystemInit, %function
  77              	SystemInit:
  78              	.LFB0:
  79              		.file 1 "Device/startup/crt.c"
   1:Device/startup/crt.c **** /****************************************************************************
   2:Device/startup/crt.c **** *  Copyright (c) 2011 by Michael Fischer. All rights reserved.
   3:Device/startup/crt.c **** *
   4:Device/startup/crt.c **** *  Redistribution and use in source and binary forms, with or without 
   5:Device/startup/crt.c **** *  modification, are permitted provided that the following conditions 
   6:Device/startup/crt.c **** *  are met:
   7:Device/startup/crt.c **** *  
   8:Device/startup/crt.c **** *  1. Redistributions of source code must retain the above copyright 
   9:Device/startup/crt.c **** *     notice, this list of conditions and the following disclaimer.
  10:Device/startup/crt.c **** *  2. Redistributions in binary form must reproduce the above copyright
  11:Device/startup/crt.c **** *     notice, this list of conditions and the following disclaimer in the 
  12:Device/startup/crt.c **** *     documentation and/or other materials provided with the distribution.
  13:Device/startup/crt.c **** *  3. Neither the name of the author nor the names of its contributors may 
  14:Device/startup/crt.c **** *     be used to endorse or promote products derived from this software 
  15:Device/startup/crt.c **** *     without specific prior written permission.
  16:Device/startup/crt.c **** *
  17:Device/startup/crt.c **** *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
  18:Device/startup/crt.c **** *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
  19:Device/startup/crt.c **** *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
  20:Device/startup/crt.c **** *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
  21:Device/startup/crt.c **** *  THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
  22:Device/startup/crt.c **** *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
  23:Device/startup/crt.c **** *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
  24:Device/startup/crt.c **** *  OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
  25:Device/startup/crt.c **** *  AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
  26:Device/startup/crt.c **** *  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF 
  27:Device/startup/crt.c **** *  THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
  28:Device/startup/crt.c **** *  SUCH DAMAGE.
  29:Device/startup/crt.c **** *
  30:Device/startup/crt.c **** ****************************************************************************
  31:Device/startup/crt.c **** *  History:
  32:Device/startup/crt.c **** *
  33:Device/startup/crt.c **** *  09.04.2011  mifi  First Version
  34:Device/startup/crt.c **** *  29.04.2011  mifi  Call SystemInit, and set the Vector Table Offset
  35:Device/startup/crt.c **** *                    before copy of data and bss segment.
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 3


  36:Device/startup/crt.c **** ****************************************************************************/
  37:Device/startup/crt.c **** #define __CRT_C__
  38:Device/startup/crt.c **** 
  39:Device/startup/crt.c **** #include <stdint.h>
  40:Device/startup/crt.c **** 
  41:Device/startup/crt.c **** /*=========================================================================*/
  42:Device/startup/crt.c **** /*  DEFINE: All extern Data                                                */
  43:Device/startup/crt.c **** /*=========================================================================*/
  44:Device/startup/crt.c **** /*
  45:Device/startup/crt.c ****  * The next data are defined by the linker script.
  46:Device/startup/crt.c ****  */
  47:Device/startup/crt.c **** extern unsigned long _stext;
  48:Device/startup/crt.c **** extern unsigned long _etext;
  49:Device/startup/crt.c **** extern unsigned long _sdata;
  50:Device/startup/crt.c **** extern unsigned long _edata;
  51:Device/startup/crt.c **** extern unsigned long _sbss;
  52:Device/startup/crt.c **** extern unsigned long _ebss;
  53:Device/startup/crt.c **** extern unsigned long _estack;
  54:Device/startup/crt.c **** 
  55:Device/startup/crt.c **** /* This is the main */
  56:Device/startup/crt.c **** extern int main (void);
  57:Device/startup/crt.c **** 
  58:Device/startup/crt.c **** /*=========================================================================*/
  59:Device/startup/crt.c **** /*  DEFINE: Prototypes                                                     */
  60:Device/startup/crt.c **** /*=========================================================================*/
  61:Device/startup/crt.c **** void SystemInit (void) __attribute__((weak));
  62:Device/startup/crt.c **** 
  63:Device/startup/crt.c **** /*=========================================================================*/
  64:Device/startup/crt.c **** /*  DEFINE: All code exported                                              */
  65:Device/startup/crt.c **** /*=========================================================================*/
  66:Device/startup/crt.c **** 
  67:Device/startup/crt.c **** /***************************************************************************/
  68:Device/startup/crt.c **** /*  SystemInit                                                             */
  69:Device/startup/crt.c **** /*                                                                         */
  70:Device/startup/crt.c **** /*  SystemInit is a function which is provided by the CMSIS interface.     */
  71:Device/startup/crt.c **** /*  If this function is not available, we need a function here to prevent  */
  72:Device/startup/crt.c **** /*  an error of the linker. Therefore this function is declared as weak.   */
  73:Device/startup/crt.c **** /***************************************************************************/
  74:Device/startup/crt.c **** void SystemInit (void)
  75:Device/startup/crt.c **** {
  80              		.loc 1 75 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85 0000 7047     		bx	lr	@
  86              		.cfi_endproc
  87              	.LFE0:
  88              		.size	SystemInit, .-SystemInit
  89              		.align	1
  90              		.global	ResetHandler
  91              		.thumb
  92              		.thumb_func
  93              		.type	ResetHandler, %function
  94              	ResetHandler:
  95              	.LFB1:
  76:Device/startup/crt.c **** } /* SystemInit */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 4


  77:Device/startup/crt.c **** 
  78:Device/startup/crt.c **** /***************************************************************************/
  79:Device/startup/crt.c **** /*  ResetHandler                                                           */
  80:Device/startup/crt.c **** /*                                                                         */
  81:Device/startup/crt.c **** /*  This function is used for the C runtime initialisation,                */
  82:Device/startup/crt.c **** /*  for handling the .data and .bss segments.                              */
  83:Device/startup/crt.c **** /***************************************************************************/
  84:Device/startup/crt.c **** void ResetHandler (void)
  85:Device/startup/crt.c **** {
  96              		.loc 1 85 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		.loc 1 85 0
 101 0002 08B5     		push	{r3, lr}	@
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
  86:Device/startup/crt.c ****    uint32_t *pSrc;
  87:Device/startup/crt.c ****    uint32_t *pDest;
  88:Device/startup/crt.c ****    
  89:Device/startup/crt.c ****    /*
  90:Device/startup/crt.c ****     * Call the SystemInit code from CMSIS interface if available.
  91:Device/startup/crt.c ****     * SystemInit is a week function which can be override
  92:Device/startup/crt.c ****     * by an external function.
  93:Device/startup/crt.c ****     */
  94:Device/startup/crt.c ****    SystemInit();    
 106              		.loc 1 94 0
 107 0004 FFF7FEFF 		bl	SystemInit	@
 108              	.LVL0:
  95:Device/startup/crt.c ****    
  96:Device/startup/crt.c ****    /*
  97:Device/startup/crt.c ****     * Set the "Vector Table Offset Register". From the ARM
  98:Device/startup/crt.c ****     * documentation, we got the following information:
  99:Device/startup/crt.c ****     *
 100:Device/startup/crt.c ****     * Use the Vector Table Offset Register to determine:
 101:Device/startup/crt.c ****     *  - if the vector table is in RAM or code memory
 102:Device/startup/crt.c ****     *  - the vector table offset.    
 103:Device/startup/crt.c ****     */
 104:Device/startup/crt.c ****    *((uint32_t*)0xE000ED08) = (uint32_t)&_stext;
 109              		.loc 1 104 0
 110 0008 0B4A     		ldr	r2, .L11	@ tmp148,
 111 000a 0C4B     		ldr	r3, .L11+4	@ tmp147,
 112 000c 1A60     		str	r2, [r3]	@ tmp148, MEM[(uint32_t *)3758157064B]
 113              	.LVL1:
 114 000e 0C4A     		ldr	r2, .L11+8	@ ivtmp.35,
 115 0010 0C4B     		ldr	r3, .L11+12	@ ivtmp.40,
 116              	.LVL2:
 117              	.L3:
 105:Device/startup/crt.c ****    
 106:Device/startup/crt.c ****    /*
 107:Device/startup/crt.c ****     * Copy the initialized data of the ".data" segment
 108:Device/startup/crt.c ****     * from the flash to the are in the ram.
 109:Device/startup/crt.c ****     */
 110:Device/startup/crt.c ****    pSrc  = &_etext;
 111:Device/startup/crt.c ****    pDest = &_sdata;
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 5


 112:Device/startup/crt.c ****    while(pDest < &_edata)
 118              		.loc 1 112 0
 119 0012 0D49     		ldr	r1, .L11+16	@ tmp149,
 120 0014 8B42     		cmp	r3, r1	@ ivtmp.40, tmp149
 121 0016 04D2     		bcs	.L9	@,
 122              	.LVL3:
 113:Device/startup/crt.c ****    {
 114:Device/startup/crt.c ****       *pDest++ = *pSrc++;
 123              		.loc 1 114 0
 124 0018 52F8041F 		ldr	r1, [r2, #4]!	@ D.4197, MEM[base: _24, offset: 0B]
 125 001c 43F8041B 		str	r1, [r3], #4	@ D.4197, MEM[base: pDest_23, offset: 0B]
 126              	.LVL4:
 127 0020 F7E7     		b	.L3	@
 128              	.L9:
 129 0022 0A4B     		ldr	r3, .L11+20	@ pDest,
 130              	.LVL5:
 131              	.L5:
 115:Device/startup/crt.c ****    }
 116:Device/startup/crt.c ****    
 117:Device/startup/crt.c ****    /*
 118:Device/startup/crt.c ****     * Clear the ".bss" segment.
 119:Device/startup/crt.c ****     */
 120:Device/startup/crt.c ****    pDest = &_sbss;
 121:Device/startup/crt.c ****    while(pDest < &_ebss)
 132              		.loc 1 121 0
 133 0024 0A4A     		ldr	r2, .L11+24	@ tmp151,
 134 0026 9342     		cmp	r3, r2	@ pDest, tmp151
 135 0028 03D2     		bcs	.L10	@,
 122:Device/startup/crt.c ****    {
 123:Device/startup/crt.c ****       *pDest++ = 0;
 136              		.loc 1 123 0
 137 002a 0022     		movs	r2, #0	@ tmp150,
 138 002c 43F8042B 		str	r2, [r3], #4	@ tmp150, MEM[base: pDest_15, offset: 4294967292B]
 139              	.LVL6:
 140 0030 F8E7     		b	.L5	@
 141              	.LVL7:
 142              	.L10:
 124:Device/startup/crt.c ****    }
 125:Device/startup/crt.c ****    
 126:Device/startup/crt.c ****    /*
 127:Device/startup/crt.c ****     * And now the main function can be called.
 128:Device/startup/crt.c ****     * Scotty, energie...
 129:Device/startup/crt.c ****     */       
 130:Device/startup/crt.c ****    main();    
 143              		.loc 1 130 0
 144 0032 FFF7FEFF 		bl	main	@
 145              	.LVL8:
 146              	.L7:
 131:Device/startup/crt.c ****    
 132:Device/startup/crt.c ****    /*
 133:Device/startup/crt.c ****     * In case there are problems with the
 134:Device/startup/crt.c ****     * "warp drive", stop here.
 135:Device/startup/crt.c ****     */
 136:Device/startup/crt.c ****    while(1) {};    
 147              		.loc 1 136 0 discriminator 1
 148 0036 FEE7     		b	.L7	@
 149              	.L12:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 6


 150              		.align	2
 151              	.L11:
 152 0038 00000000 		.word	_stext
 153 003c 08ED00E0 		.word	-536810232
 154 0040 FCFFFFFF 		.word	_etext-4
 155 0044 00000000 		.word	_sdata
 156 0048 00000000 		.word	_edata
 157 004c 00000000 		.word	_sbss
 158 0050 00000000 		.word	_ebss
 159              		.cfi_endproc
 160              	.LFE1:
 161              		.size	ResetHandler, .-ResetHandler
 162              	.Letext0:
 163              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 164              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 165              		.section	.debug_info,"",%progbits
 166              	.Ldebug_info0:
 167 0000 3C010000 		.4byte	0x13c
 168 0004 0200     		.2byte	0x2
 169 0006 00000000 		.4byte	.Ldebug_abbrev0
 170 000a 04       		.byte	0x4
 171 000b 01       		.uleb128 0x1
 172 000c 72000000 		.4byte	.LASF17
 173 0010 01       		.byte	0x1
 174 0011 08010000 		.4byte	.LASF18
 175 0015 7C010000 		.4byte	.LASF19
 176 0019 00000000 		.4byte	.Ltext0
 177 001d 54000000 		.4byte	.Letext0
 178 0021 00000000 		.4byte	.Ldebug_line0
 179 0025 02       		.uleb128 0x2
 180 0026 01       		.byte	0x1
 181 0027 06       		.byte	0x6
 182 0028 70010000 		.4byte	.LASF0
 183 002c 02       		.uleb128 0x2
 184 002d 01       		.byte	0x1
 185 002e 08       		.byte	0x8
 186 002f 20000000 		.4byte	.LASF1
 187 0033 02       		.uleb128 0x2
 188 0034 02       		.byte	0x2
 189 0035 05       		.byte	0x5
 190 0036 54010000 		.4byte	.LASF2
 191 003a 02       		.uleb128 0x2
 192 003b 02       		.byte	0x2
 193 003c 07       		.byte	0x7
 194 003d 54000000 		.4byte	.LASF3
 195 0041 02       		.uleb128 0x2
 196 0042 04       		.byte	0x4
 197 0043 05       		.byte	0x5
 198 0044 67010000 		.4byte	.LASF4
 199 0048 03       		.uleb128 0x3
 200 0049 67000000 		.4byte	.LASF9
 201 004d 02       		.byte	0x2
 202 004e 41       		.byte	0x41
 203 004f 53000000 		.4byte	0x53
 204 0053 02       		.uleb128 0x2
 205 0054 04       		.byte	0x4
 206 0055 07       		.byte	0x7
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 7


 207 0056 35000000 		.4byte	.LASF5
 208 005a 02       		.uleb128 0x2
 209 005b 08       		.byte	0x8
 210 005c 05       		.byte	0x5
 211 005d 46010000 		.4byte	.LASF6
 212 0061 02       		.uleb128 0x2
 213 0062 08       		.byte	0x8
 214 0063 07       		.byte	0x7
 215 0064 1D010000 		.4byte	.LASF7
 216 0068 04       		.uleb128 0x4
 217 0069 04       		.byte	0x4
 218 006a 05       		.byte	0x5
 219 006b 696E7400 		.ascii	"int\000"
 220 006f 02       		.uleb128 0x2
 221 0070 04       		.byte	0x4
 222 0071 07       		.byte	0x7
 223 0072 FB000000 		.4byte	.LASF8
 224 0076 03       		.uleb128 0x3
 225 0077 5E010000 		.4byte	.LASF10
 226 007b 03       		.byte	0x3
 227 007c 20       		.byte	0x20
 228 007d 48000000 		.4byte	0x48
 229 0081 05       		.uleb128 0x5
 230 0082 01       		.byte	0x1
 231 0083 3B010000 		.4byte	.LASF20
 232 0087 01       		.byte	0x1
 233 0088 4A       		.byte	0x4a
 234 0089 01       		.byte	0x1
 235 008a 00000000 		.4byte	.LFB0
 236 008e 02000000 		.4byte	.LFE0
 237 0092 02       		.byte	0x2
 238 0093 7D       		.byte	0x7d
 239 0094 00       		.sleb128 0
 240 0095 01       		.byte	0x1
 241 0096 06       		.uleb128 0x6
 242 0097 01       		.byte	0x1
 243 0098 47000000 		.4byte	.LASF21
 244 009c 01       		.byte	0x1
 245 009d 54       		.byte	0x54
 246 009e 01       		.byte	0x1
 247 009f 02000000 		.4byte	.LFB1
 248 00a3 54000000 		.4byte	.LFE1
 249 00a7 00000000 		.4byte	.LLST0
 250 00ab 01       		.byte	0x1
 251 00ac DD000000 		.4byte	0xdd
 252 00b0 07       		.uleb128 0x7
 253 00b1 AD010000 		.4byte	.LASF22
 254 00b5 01       		.byte	0x1
 255 00b6 56       		.byte	0x56
 256 00b7 DD000000 		.4byte	0xdd
 257 00bb 08       		.uleb128 0x8
 258 00bc 1A000000 		.4byte	.LASF23
 259 00c0 01       		.byte	0x1
 260 00c1 57       		.byte	0x57
 261 00c2 DD000000 		.4byte	0xdd
 262 00c6 20000000 		.4byte	.LLST1
 263 00ca 09       		.uleb128 0x9
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 8


 264 00cb 08000000 		.4byte	.LVL0
 265 00cf 81000000 		.4byte	0x81
 266 00d3 09       		.uleb128 0x9
 267 00d4 36000000 		.4byte	.LVL8
 268 00d8 31010000 		.4byte	0x131
 269 00dc 00       		.byte	0
 270 00dd 0A       		.uleb128 0xa
 271 00de 04       		.byte	0x4
 272 00df 76000000 		.4byte	0x76
 273 00e3 0B       		.uleb128 0xb
 274 00e4 13000000 		.4byte	.LASF11
 275 00e8 01       		.byte	0x1
 276 00e9 2F       		.byte	0x2f
 277 00ea 53000000 		.4byte	0x53
 278 00ee 01       		.byte	0x1
 279 00ef 01       		.byte	0x1
 280 00f0 0B       		.uleb128 0xb
 281 00f1 34010000 		.4byte	.LASF12
 282 00f5 01       		.byte	0x1
 283 00f6 30       		.byte	0x30
 284 00f7 53000000 		.4byte	0x53
 285 00fb 01       		.byte	0x1
 286 00fc 01       		.byte	0x1
 287 00fd 0B       		.uleb128 0xb
 288 00fe 00000000 		.4byte	.LASF13
 289 0102 01       		.byte	0x1
 290 0103 31       		.byte	0x31
 291 0104 53000000 		.4byte	0x53
 292 0108 01       		.byte	0x1
 293 0109 01       		.byte	0x1
 294 010a 0B       		.uleb128 0xb
 295 010b 2E000000 		.4byte	.LASF14
 296 010f 01       		.byte	0x1
 297 0110 32       		.byte	0x32
 298 0111 53000000 		.4byte	0x53
 299 0115 01       		.byte	0x1
 300 0116 01       		.byte	0x1
 301 0117 0B       		.uleb128 0xb
 302 0118 07000000 		.4byte	.LASF15
 303 011c 01       		.byte	0x1
 304 011d 33       		.byte	0x33
 305 011e 53000000 		.4byte	0x53
 306 0122 01       		.byte	0x1
 307 0123 01       		.byte	0x1
 308 0124 0B       		.uleb128 0xb
 309 0125 0D000000 		.4byte	.LASF16
 310 0129 01       		.byte	0x1
 311 012a 34       		.byte	0x34
 312 012b 53000000 		.4byte	0x53
 313 012f 01       		.byte	0x1
 314 0130 01       		.byte	0x1
 315 0131 0C       		.uleb128 0xc
 316 0132 01       		.byte	0x1
 317 0133 F6000000 		.4byte	.LASF24
 318 0137 01       		.byte	0x1
 319 0138 38       		.byte	0x38
 320 0139 01       		.byte	0x1
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 9


 321 013a 68000000 		.4byte	0x68
 322 013e 01       		.byte	0x1
 323 013f 00       		.byte	0
 324              		.section	.debug_abbrev,"",%progbits
 325              	.Ldebug_abbrev0:
 326 0000 01       		.uleb128 0x1
 327 0001 11       		.uleb128 0x11
 328 0002 01       		.byte	0x1
 329 0003 25       		.uleb128 0x25
 330 0004 0E       		.uleb128 0xe
 331 0005 13       		.uleb128 0x13
 332 0006 0B       		.uleb128 0xb
 333 0007 03       		.uleb128 0x3
 334 0008 0E       		.uleb128 0xe
 335 0009 1B       		.uleb128 0x1b
 336 000a 0E       		.uleb128 0xe
 337 000b 11       		.uleb128 0x11
 338 000c 01       		.uleb128 0x1
 339 000d 12       		.uleb128 0x12
 340 000e 01       		.uleb128 0x1
 341 000f 10       		.uleb128 0x10
 342 0010 06       		.uleb128 0x6
 343 0011 00       		.byte	0
 344 0012 00       		.byte	0
 345 0013 02       		.uleb128 0x2
 346 0014 24       		.uleb128 0x24
 347 0015 00       		.byte	0
 348 0016 0B       		.uleb128 0xb
 349 0017 0B       		.uleb128 0xb
 350 0018 3E       		.uleb128 0x3e
 351 0019 0B       		.uleb128 0xb
 352 001a 03       		.uleb128 0x3
 353 001b 0E       		.uleb128 0xe
 354 001c 00       		.byte	0
 355 001d 00       		.byte	0
 356 001e 03       		.uleb128 0x3
 357 001f 16       		.uleb128 0x16
 358 0020 00       		.byte	0
 359 0021 03       		.uleb128 0x3
 360 0022 0E       		.uleb128 0xe
 361 0023 3A       		.uleb128 0x3a
 362 0024 0B       		.uleb128 0xb
 363 0025 3B       		.uleb128 0x3b
 364 0026 0B       		.uleb128 0xb
 365 0027 49       		.uleb128 0x49
 366 0028 13       		.uleb128 0x13
 367 0029 00       		.byte	0
 368 002a 00       		.byte	0
 369 002b 04       		.uleb128 0x4
 370 002c 24       		.uleb128 0x24
 371 002d 00       		.byte	0
 372 002e 0B       		.uleb128 0xb
 373 002f 0B       		.uleb128 0xb
 374 0030 3E       		.uleb128 0x3e
 375 0031 0B       		.uleb128 0xb
 376 0032 03       		.uleb128 0x3
 377 0033 08       		.uleb128 0x8
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 10


 378 0034 00       		.byte	0
 379 0035 00       		.byte	0
 380 0036 05       		.uleb128 0x5
 381 0037 2E       		.uleb128 0x2e
 382 0038 00       		.byte	0
 383 0039 3F       		.uleb128 0x3f
 384 003a 0C       		.uleb128 0xc
 385 003b 03       		.uleb128 0x3
 386 003c 0E       		.uleb128 0xe
 387 003d 3A       		.uleb128 0x3a
 388 003e 0B       		.uleb128 0xb
 389 003f 3B       		.uleb128 0x3b
 390 0040 0B       		.uleb128 0xb
 391 0041 27       		.uleb128 0x27
 392 0042 0C       		.uleb128 0xc
 393 0043 11       		.uleb128 0x11
 394 0044 01       		.uleb128 0x1
 395 0045 12       		.uleb128 0x12
 396 0046 01       		.uleb128 0x1
 397 0047 40       		.uleb128 0x40
 398 0048 0A       		.uleb128 0xa
 399 0049 9742     		.uleb128 0x2117
 400 004b 0C       		.uleb128 0xc
 401 004c 00       		.byte	0
 402 004d 00       		.byte	0
 403 004e 06       		.uleb128 0x6
 404 004f 2E       		.uleb128 0x2e
 405 0050 01       		.byte	0x1
 406 0051 3F       		.uleb128 0x3f
 407 0052 0C       		.uleb128 0xc
 408 0053 03       		.uleb128 0x3
 409 0054 0E       		.uleb128 0xe
 410 0055 3A       		.uleb128 0x3a
 411 0056 0B       		.uleb128 0xb
 412 0057 3B       		.uleb128 0x3b
 413 0058 0B       		.uleb128 0xb
 414 0059 27       		.uleb128 0x27
 415 005a 0C       		.uleb128 0xc
 416 005b 11       		.uleb128 0x11
 417 005c 01       		.uleb128 0x1
 418 005d 12       		.uleb128 0x12
 419 005e 01       		.uleb128 0x1
 420 005f 40       		.uleb128 0x40
 421 0060 06       		.uleb128 0x6
 422 0061 9742     		.uleb128 0x2117
 423 0063 0C       		.uleb128 0xc
 424 0064 01       		.uleb128 0x1
 425 0065 13       		.uleb128 0x13
 426 0066 00       		.byte	0
 427 0067 00       		.byte	0
 428 0068 07       		.uleb128 0x7
 429 0069 34       		.uleb128 0x34
 430 006a 00       		.byte	0
 431 006b 03       		.uleb128 0x3
 432 006c 0E       		.uleb128 0xe
 433 006d 3A       		.uleb128 0x3a
 434 006e 0B       		.uleb128 0xb
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 11


 435 006f 3B       		.uleb128 0x3b
 436 0070 0B       		.uleb128 0xb
 437 0071 49       		.uleb128 0x49
 438 0072 13       		.uleb128 0x13
 439 0073 00       		.byte	0
 440 0074 00       		.byte	0
 441 0075 08       		.uleb128 0x8
 442 0076 34       		.uleb128 0x34
 443 0077 00       		.byte	0
 444 0078 03       		.uleb128 0x3
 445 0079 0E       		.uleb128 0xe
 446 007a 3A       		.uleb128 0x3a
 447 007b 0B       		.uleb128 0xb
 448 007c 3B       		.uleb128 0x3b
 449 007d 0B       		.uleb128 0xb
 450 007e 49       		.uleb128 0x49
 451 007f 13       		.uleb128 0x13
 452 0080 02       		.uleb128 0x2
 453 0081 06       		.uleb128 0x6
 454 0082 00       		.byte	0
 455 0083 00       		.byte	0
 456 0084 09       		.uleb128 0x9
 457 0085 898201   		.uleb128 0x4109
 458 0088 00       		.byte	0
 459 0089 11       		.uleb128 0x11
 460 008a 01       		.uleb128 0x1
 461 008b 31       		.uleb128 0x31
 462 008c 13       		.uleb128 0x13
 463 008d 00       		.byte	0
 464 008e 00       		.byte	0
 465 008f 0A       		.uleb128 0xa
 466 0090 0F       		.uleb128 0xf
 467 0091 00       		.byte	0
 468 0092 0B       		.uleb128 0xb
 469 0093 0B       		.uleb128 0xb
 470 0094 49       		.uleb128 0x49
 471 0095 13       		.uleb128 0x13
 472 0096 00       		.byte	0
 473 0097 00       		.byte	0
 474 0098 0B       		.uleb128 0xb
 475 0099 34       		.uleb128 0x34
 476 009a 00       		.byte	0
 477 009b 03       		.uleb128 0x3
 478 009c 0E       		.uleb128 0xe
 479 009d 3A       		.uleb128 0x3a
 480 009e 0B       		.uleb128 0xb
 481 009f 3B       		.uleb128 0x3b
 482 00a0 0B       		.uleb128 0xb
 483 00a1 49       		.uleb128 0x49
 484 00a2 13       		.uleb128 0x13
 485 00a3 3F       		.uleb128 0x3f
 486 00a4 0C       		.uleb128 0xc
 487 00a5 3C       		.uleb128 0x3c
 488 00a6 0C       		.uleb128 0xc
 489 00a7 00       		.byte	0
 490 00a8 00       		.byte	0
 491 00a9 0C       		.uleb128 0xc
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 12


 492 00aa 2E       		.uleb128 0x2e
 493 00ab 00       		.byte	0
 494 00ac 3F       		.uleb128 0x3f
 495 00ad 0C       		.uleb128 0xc
 496 00ae 03       		.uleb128 0x3
 497 00af 0E       		.uleb128 0xe
 498 00b0 3A       		.uleb128 0x3a
 499 00b1 0B       		.uleb128 0xb
 500 00b2 3B       		.uleb128 0x3b
 501 00b3 0B       		.uleb128 0xb
 502 00b4 27       		.uleb128 0x27
 503 00b5 0C       		.uleb128 0xc
 504 00b6 49       		.uleb128 0x49
 505 00b7 13       		.uleb128 0x13
 506 00b8 3C       		.uleb128 0x3c
 507 00b9 0C       		.uleb128 0xc
 508 00ba 00       		.byte	0
 509 00bb 00       		.byte	0
 510 00bc 00       		.byte	0
 511              		.section	.debug_loc,"",%progbits
 512              	.Ldebug_loc0:
 513              	.LLST0:
 514 0000 02000000 		.4byte	.LFB1-.Ltext0
 515 0004 04000000 		.4byte	.LCFI0-.Ltext0
 516 0008 0200     		.2byte	0x2
 517 000a 7D       		.byte	0x7d
 518 000b 00       		.sleb128 0
 519 000c 04000000 		.4byte	.LCFI0-.Ltext0
 520 0010 54000000 		.4byte	.LFE1-.Ltext0
 521 0014 0200     		.2byte	0x2
 522 0016 7D       		.byte	0x7d
 523 0017 08       		.sleb128 8
 524 0018 00000000 		.4byte	0
 525 001c 00000000 		.4byte	0
 526              	.LLST1:
 527 0020 12000000 		.4byte	.LVL2-.Ltext0
 528 0024 18000000 		.4byte	.LVL3-.Ltext0
 529 0028 0100     		.2byte	0x1
 530 002a 53       		.byte	0x53
 531 002b 18000000 		.4byte	.LVL3-.Ltext0
 532 002f 20000000 		.4byte	.LVL4-.Ltext0
 533 0033 0300     		.2byte	0x3
 534 0035 73       		.byte	0x73
 535 0036 04       		.sleb128 4
 536 0037 9F       		.byte	0x9f
 537 0038 20000000 		.4byte	.LVL4-.Ltext0
 538 003c 30000000 		.4byte	.LVL6-.Ltext0
 539 0040 0100     		.2byte	0x1
 540 0042 53       		.byte	0x53
 541 0043 30000000 		.4byte	.LVL6-.Ltext0
 542 0047 32000000 		.4byte	.LVL7-.Ltext0
 543 004b 0300     		.2byte	0x3
 544 004d 73       		.byte	0x73
 545 004e 7C       		.sleb128 -4
 546 004f 9F       		.byte	0x9f
 547 0050 32000000 		.4byte	.LVL7-.Ltext0
 548 0054 35000000 		.4byte	.LVL8-1-.Ltext0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 13


 549 0058 0100     		.2byte	0x1
 550 005a 53       		.byte	0x53
 551 005b 00000000 		.4byte	0
 552 005f 00000000 		.4byte	0
 553              		.section	.debug_aranges,"",%progbits
 554 0000 1C000000 		.4byte	0x1c
 555 0004 0200     		.2byte	0x2
 556 0006 00000000 		.4byte	.Ldebug_info0
 557 000a 04       		.byte	0x4
 558 000b 00       		.byte	0
 559 000c 0000     		.2byte	0
 560 000e 0000     		.2byte	0
 561 0010 00000000 		.4byte	.Ltext0
 562 0014 54000000 		.4byte	.Letext0-.Ltext0
 563 0018 00000000 		.4byte	0
 564 001c 00000000 		.4byte	0
 565              		.section	.debug_line,"",%progbits
 566              	.Ldebug_line0:
 567 0000 08010000 		.section	.debug_str,"MS",%progbits,1
 567      0200DE00 
 567      00000201 
 567      FB0E0D00 
 567      01010101 
 568              	.LASF13:
 569 0000 5F736461 		.ascii	"_sdata\000"
 569      746100
 570              	.LASF15:
 571 0007 5F736273 		.ascii	"_sbss\000"
 571      7300
 572              	.LASF16:
 573 000d 5F656273 		.ascii	"_ebss\000"
 573      7300
 574              	.LASF11:
 575 0013 5F737465 		.ascii	"_stext\000"
 575      787400
 576              	.LASF23:
 577 001a 70446573 		.ascii	"pDest\000"
 577      7400
 578              	.LASF1:
 579 0020 756E7369 		.ascii	"unsigned char\000"
 579      676E6564 
 579      20636861 
 579      7200
 580              	.LASF14:
 581 002e 5F656461 		.ascii	"_edata\000"
 581      746100
 582              	.LASF5:
 583 0035 6C6F6E67 		.ascii	"long unsigned int\000"
 583      20756E73 
 583      69676E65 
 583      6420696E 
 583      7400
 584              	.LASF21:
 585 0047 52657365 		.ascii	"ResetHandler\000"
 585      7448616E 
 585      646C6572 
 585      00
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 14


 586              	.LASF3:
 587 0054 73686F72 		.ascii	"short unsigned int\000"
 587      7420756E 
 587      7369676E 
 587      65642069 
 587      6E7400
 588              	.LASF9:
 589 0067 5F5F7569 		.ascii	"__uint32_t\000"
 589      6E743332 
 589      5F7400
 590              	.LASF17:
 591 0072 474E5520 		.ascii	"GNU C 4.9.3 20150529 (release) [ARM/embedded-4_9-br"
 591      4320342E 
 591      392E3320 
 591      32303135 
 591      30353239 
 592 00a5 616E6368 		.ascii	"anch revision 227977] -mcpu=cortex-m3 -mthumb -gdwa"
 592      20726576 
 592      6973696F 
 592      6E203232 
 592      37393737 
 593 00d8 72662D32 		.ascii	"rf-2 -Os -fomit-frame-pointer\000"
 593      202D4F73 
 593      202D666F 
 593      6D69742D 
 593      6672616D 
 594              	.LASF24:
 595 00f6 6D61696E 		.ascii	"main\000"
 595      00
 596              	.LASF8:
 597 00fb 756E7369 		.ascii	"unsigned int\000"
 597      676E6564 
 597      20696E74 
 597      00
 598              	.LASF18:
 599 0108 44657669 		.ascii	"Device/startup/crt.c\000"
 599      63652F73 
 599      74617274 
 599      75702F63 
 599      72742E63 
 600              	.LASF7:
 601 011d 6C6F6E67 		.ascii	"long long unsigned int\000"
 601      206C6F6E 
 601      6720756E 
 601      7369676E 
 601      65642069 
 602              	.LASF12:
 603 0134 5F657465 		.ascii	"_etext\000"
 603      787400
 604              	.LASF20:
 605 013b 53797374 		.ascii	"SystemInit\000"
 605      656D496E 
 605      697400
 606              	.LASF6:
 607 0146 6C6F6E67 		.ascii	"long long int\000"
 607      206C6F6E 
 607      6720696E 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 15


 607      7400
 608              	.LASF2:
 609 0154 73686F72 		.ascii	"short int\000"
 609      7420696E 
 609      7400
 610              	.LASF10:
 611 015e 75696E74 		.ascii	"uint32_t\000"
 611      33325F74 
 611      00
 612              	.LASF4:
 613 0167 6C6F6E67 		.ascii	"long int\000"
 613      20696E74 
 613      00
 614              	.LASF0:
 615 0170 7369676E 		.ascii	"signed char\000"
 615      65642063 
 615      68617200 
 616              	.LASF19:
 617 017c 2F557365 		.ascii	"/Users/ingamedeo/Downloads/STM32F103RBT6FreeRTOS\000"
 617      72732F69 
 617      6E67616D 
 617      6564656F 
 617      2F446F77 
 618              	.LASF22:
 619 01ad 70537263 		.ascii	"pSrc\000"
 619      00
 620              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 crt.c
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s:72     .text:0000000000000000 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s:77     .text:0000000000000000 SystemInit
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s:94     .text:0000000000000002 ResetHandler
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//cct6Nml8.s:152    .text:0000000000000038 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
main
_stext
_etext
_sdata
_edata
_sbss
_ebss
