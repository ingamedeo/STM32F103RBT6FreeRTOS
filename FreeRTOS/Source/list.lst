ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"list.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150529 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), GMP vers
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./Libraries/CMSIS/CM3/CoreSupport
  18              	@ -I ./Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  19              	@ -I ./Libraries/STM32F10x_StdPeriph_Driver/inc -I ./Libraries/Drivers/Leds
  20              	@ -I ./Libraries/Drivers/Buttons -I ./Libraries/Drivers/Usart
  21              	@ -I ./Libraries/Drivers/i2c -I ./Libraries/Drivers/BH1750
  22              	@ -I ./Libraries/Drivers/Utilities -I ./FreeRTOS/Source/include
  23              	@ -I ./FreeRTOS/Source/portable/GCC/ARM_CM3 -imultilib armv7-m
  24              	@ -iprefix /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../lib/gcc/arm-none-eabi/4.9.3/
  25              	@ -isysroot /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../arm-none-eabi
  26              	@ -MD FreeRTOS/Source/list.d -MF .dep/list.o.d -MP
  27              	@ -MQ FreeRTOS/Source/list.o -D__USES_INITFINI__ -D STM32F10X_MD
  28              	@ -D USE_STDPERIPH_DRIVER -D GCC_ARMCM3 -D RUN_FROM_FLASH=1
  29              	@ FreeRTOS/Source/list.c -mcpu=cortex-m3 -mthumb
  30              	@ -auxbase-strip FreeRTOS/Source/list.o -gdwarf-2 -Os -Wall
  31              	@ -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  33              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  34              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  35              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
  36              	@ -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  39              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  40              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  43              	@ -fipa-reference -fipa-sra -fira-hoist-pressure -fira-share-save-slots
  44              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  45              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -fmath-errno
  46              	@ -fmerge-constants -fmerge-debug-strings -fomit-frame-pointer
  47              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  48              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  49              	@ -freorder-functions -frerun-cse-after-loop
  50              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  51              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  52              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  53              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  54              	@ -fsection-anchors -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller
  55              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  56              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  57              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 2


  58              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
  59              	@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  60              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  61              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  62              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  63              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  64              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  65              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  66              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  67              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  68              	@ -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	1
  74              		.global	vListInitialise
  75              		.thumb
  76              		.thumb_func
  77              		.type	vListInitialise, %function
  78              	vListInitialise:
  79              	.LFB5:
  80              		.file 1 "FreeRTOS/Source/list.c"
   1:FreeRTOS/Source/list.c **** /*
   2:FreeRTOS/Source/list.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:FreeRTOS/Source/list.c ****     All rights reserved
   4:FreeRTOS/Source/list.c **** 
   5:FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/Source/list.c **** 
   7:FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
   8:FreeRTOS/Source/list.c **** 
   9:FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:FreeRTOS/Source/list.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:FreeRTOS/Source/list.c **** 
  13:FreeRTOS/Source/list.c ****     ***************************************************************************
  14:FreeRTOS/Source/list.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:FreeRTOS/Source/list.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:FreeRTOS/Source/list.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:FreeRTOS/Source/list.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:FreeRTOS/Source/list.c ****     ***************************************************************************
  19:FreeRTOS/Source/list.c **** 
  20:FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  24:FreeRTOS/Source/list.c **** 
  25:FreeRTOS/Source/list.c ****     ***************************************************************************
  26:FreeRTOS/Source/list.c ****      *                                                                       *
  27:FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:FreeRTOS/Source/list.c ****      *    platform software that is more than just the market leader, it     *
  30:FreeRTOS/Source/list.c ****      *    is the industry's de facto standard.                               *
  31:FreeRTOS/Source/list.c ****      *                                                                       *
  32:FreeRTOS/Source/list.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:FreeRTOS/Source/list.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:FreeRTOS/Source/list.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 3


  35:FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:FreeRTOS/Source/list.c ****      *                                                                       *
  37:FreeRTOS/Source/list.c ****     ***************************************************************************
  38:FreeRTOS/Source/list.c **** 
  39:FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:FreeRTOS/Source/list.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:FreeRTOS/Source/list.c ****     defined configASSERT()?
  42:FreeRTOS/Source/list.c **** 
  43:FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:FreeRTOS/Source/list.c ****     embedded software for free we request you assist our global community by
  45:FreeRTOS/Source/list.c ****     participating in the support forum.
  46:FreeRTOS/Source/list.c **** 
  47:FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:FreeRTOS/Source/list.c ****     be as productive as possible as early as possible.  Now you can receive
  49:FreeRTOS/Source/list.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:FreeRTOS/Source/list.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:FreeRTOS/Source/list.c **** 
  52:FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:FreeRTOS/Source/list.c **** 
  56:FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:FreeRTOS/Source/list.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:FreeRTOS/Source/list.c **** 
  59:FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:FreeRTOS/Source/list.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:FreeRTOS/Source/list.c **** 
  63:FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  65:FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  66:FreeRTOS/Source/list.c **** 
  67:FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  68:FreeRTOS/Source/list.c **** */
  69:FreeRTOS/Source/list.c **** 
  70:FreeRTOS/Source/list.c **** 
  71:FreeRTOS/Source/list.c **** #include <stdlib.h>
  72:FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  73:FreeRTOS/Source/list.c **** #include "list.h"
  74:FreeRTOS/Source/list.c **** 
  75:FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  76:FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  77:FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  78:FreeRTOS/Source/list.c **** 
  79:FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  80:FreeRTOS/Source/list.c **** {
  81              		.loc 1 80 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL0:
  81:FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  82:FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  83:FreeRTOS/Source/list.c **** 	as the only list entry. */
  84:FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  87              		.loc 1 84 0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 4


  88 0000 00F10803 		add	r3, r0, #8	@ D.4890, pxList,
  89 0004 4360     		str	r3, [r0, #4]	@ D.4890, pxList_1(D)->pxIndex
  85:FreeRTOS/Source/list.c **** 
  86:FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  87:FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  88:FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  90              		.loc 1 88 0
  91 0006 4FF0FF32 		mov	r2, #-1	@ tmp112,
  89:FreeRTOS/Source/list.c **** 
  90:FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  91:FreeRTOS/Source/list.c **** 	when the list is empty. */
  92:FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  92              		.loc 1 92 0
  93 000a C360     		str	r3, [r0, #12]	@ D.4890, pxList_1(D)->xListEnd.pxNext
  93:FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  94              		.loc 1 93 0
  95 000c 0361     		str	r3, [r0, #16]	@ D.4890, pxList_1(D)->xListEnd.pxPrevious
  94:FreeRTOS/Source/list.c **** 
  95:FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  96              		.loc 1 95 0
  97 000e 0023     		movs	r3, #0	@ tmp113,
  88:FreeRTOS/Source/list.c **** 
  98              		.loc 1 88 0
  99 0010 8260     		str	r2, [r0, #8]	@ tmp112, pxList_1(D)->xListEnd.xItemValue
 100              		.loc 1 95 0
 101 0012 0360     		str	r3, [r0]	@ tmp113, pxList_1(D)->uxNumberOfItems
 102 0014 7047     		bx	lr	@
 103              		.cfi_endproc
 104              	.LFE5:
 105              		.size	vListInitialise, .-vListInitialise
 106              		.align	1
 107              		.global	vListInitialiseItem
 108              		.thumb
 109              		.thumb_func
 110              		.type	vListInitialiseItem, %function
 111              	vListInitialiseItem:
 112              	.LFB6:
  96:FreeRTOS/Source/list.c **** 
  97:FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  98:FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  99:FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
 100:FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
 101:FreeRTOS/Source/list.c **** }
 102:FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 103:FreeRTOS/Source/list.c **** 
 104:FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
 105:FreeRTOS/Source/list.c **** {
 113              		.loc 1 105 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL1:
 106:FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
 107:FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
 119              		.loc 1 107 0
 120 0016 0023     		movs	r3, #0	@ tmp111,
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 5


 121 0018 0361     		str	r3, [r0, #16]	@ tmp111, pxItem_2(D)->pvContainer
 122 001a 7047     		bx	lr	@
 123              		.cfi_endproc
 124              	.LFE6:
 125              		.size	vListInitialiseItem, .-vListInitialiseItem
 126              		.align	1
 127              		.global	vListInsertEnd
 128              		.thumb
 129              		.thumb_func
 130              		.type	vListInsertEnd, %function
 131              	vListInsertEnd:
 132              	.LFB7:
 108:FreeRTOS/Source/list.c **** 
 109:FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
 110:FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 111:FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 112:FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
 113:FreeRTOS/Source/list.c **** }
 114:FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 115:FreeRTOS/Source/list.c **** 
 116:FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
 117:FreeRTOS/Source/list.c **** {
 133              		.loc 1 117 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL2:
 118:FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 139              		.loc 1 118 0
 140 001c 4368     		ldr	r3, [r0, #4]	@ pxIndex, pxList_2(D)->pxIndex
 141              	.LVL3:
 119:FreeRTOS/Source/list.c **** 
 120:FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 121:FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 122:FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 123:FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 124:FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 125:FreeRTOS/Source/list.c **** 
 126:FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 127:FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 128:FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
 129:FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 130:FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 142              		.loc 1 130 0
 143 001e 9A68     		ldr	r2, [r3, #8]	@ D.4895, pxIndex_3->pxPrevious
 129:FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 144              		.loc 1 129 0
 145 0020 4B60     		str	r3, [r1, #4]	@ pxIndex, pxNewListItem_4(D)->pxNext
 146              		.loc 1 130 0
 147 0022 8A60     		str	r2, [r1, #8]	@ D.4895, pxNewListItem_4(D)->pxPrevious
 131:FreeRTOS/Source/list.c **** 
 132:FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 133:FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 134:FreeRTOS/Source/list.c **** 
 135:FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 148              		.loc 1 135 0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 6


 149 0024 9A68     		ldr	r2, [r3, #8]	@ pxIndex_3->pxPrevious, pxIndex_3->pxPrevious
 150 0026 5160     		str	r1, [r2, #4]	@ pxNewListItem, _8->pxNext
 136:FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 151              		.loc 1 136 0
 152 0028 9960     		str	r1, [r3, #8]	@ pxNewListItem, pxIndex_3->pxPrevious
 137:FreeRTOS/Source/list.c **** 
 138:FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 139:FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 140:FreeRTOS/Source/list.c **** 
 141:FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 153              		.loc 1 141 0
 154 002a 0368     		ldr	r3, [r0]	@ pxList_2(D)->uxNumberOfItems, pxList_2(D)->uxNumberOfItems
 155              	.LVL4:
 139:FreeRTOS/Source/list.c **** 
 156              		.loc 1 139 0
 157 002c 0861     		str	r0, [r1, #16]	@ pxList, pxNewListItem_4(D)->pvContainer
 158              		.loc 1 141 0
 159 002e 0133     		adds	r3, r3, #1	@ D.4896, pxList_2(D)->uxNumberOfItems,
 160 0030 0360     		str	r3, [r0]	@ D.4896, pxList_2(D)->uxNumberOfItems
 161 0032 7047     		bx	lr	@
 162              		.cfi_endproc
 163              	.LFE7:
 164              		.size	vListInsertEnd, .-vListInsertEnd
 165              		.align	1
 166              		.global	vListInsert
 167              		.thumb
 168              		.thumb_func
 169              		.type	vListInsert, %function
 170              	vListInsert:
 171              	.LFB8:
 142:FreeRTOS/Source/list.c **** }
 143:FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 144:FreeRTOS/Source/list.c **** 
 145:FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 146:FreeRTOS/Source/list.c **** {
 172              		.loc 1 146 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL5:
 147:FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 148:FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 177              		.loc 1 148 0
 178 0034 0A68     		ldr	r2, [r1]	@ xValueOfInsertion, pxNewListItem_4(D)->xItemValue
 179              	.LVL6:
 146:FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 180              		.loc 1 146 0
 181 0036 30B5     		push	{r4, r5, lr}	@
 182              	.LCFI0:
 183              		.cfi_def_cfa_offset 12
 184              		.cfi_offset 4, -12
 185              		.cfi_offset 5, -8
 186              		.cfi_offset 14, -4
 149:FreeRTOS/Source/list.c **** 
 150:FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 151:FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 152:FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 7


 153:FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 154:FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 155:FreeRTOS/Source/list.c **** 
 156:FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 157:FreeRTOS/Source/list.c **** 
 158:FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 159:FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 160:FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 161:FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 162:FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 163:FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 164:FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 187              		.loc 1 164 0
 188 0038 531C     		adds	r3, r2, #1	@, xValueOfInsertion,
 189 003a 01D1     		bne	.L5	@,
 165:FreeRTOS/Source/list.c **** 	{
 166:FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 190              		.loc 1 166 0
 191 003c 0369     		ldr	r3, [r0, #16]	@ pxIterator, pxList_6(D)->xListEnd.pxPrevious
 192              	.LVL7:
 193 003e 07E0     		b	.L6	@
 194              	.LVL8:
 195              	.L5:
 167:FreeRTOS/Source/list.c **** 	}
 168:FreeRTOS/Source/list.c **** 	else
 169:FreeRTOS/Source/list.c **** 	{
 170:FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 171:FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 172:FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 173:FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 174:FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
 175:FreeRTOS/Source/list.c **** 
 176:FreeRTOS/Source/list.c **** 			1) Stack overflow -
 177:FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 178:FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 179:FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 180:FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 181:FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 182:FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 183:FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 184:FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 185:FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 186:FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 187:FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 188:FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 189:FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 190:FreeRTOS/Source/list.c **** 		**********************************************************************/
 191:FreeRTOS/Source/list.c **** 
 192:FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 196              		.loc 1 192 0
 197 0040 00F10803 		add	r3, r0, #8	@ pxIterator, pxList,
 198              	.LVL9:
 199              	.L7:
 200              		.loc 1 192 0 is_stmt 0 discriminator 1
 201 0044 5C68     		ldr	r4, [r3, #4]	@ pxIterator, pxIterator_1->pxNext
 202 0046 2568     		ldr	r5, [r4]	@ D.4899, MEM[(struct xLIST_ITEM *)pxIterator_9].xItemValue
 203 0048 9542     		cmp	r5, r2	@ D.4899, xValueOfInsertion
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 8


 204 004a 01D8     		bhi	.L6	@,
 205 004c 2346     		mov	r3, r4	@ pxIterator, pxIterator
 206              	.LVL10:
 207 004e F9E7     		b	.L7	@
 208              	.LVL11:
 209              	.L6:
 193:FreeRTOS/Source/list.c **** 		{
 194:FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 195:FreeRTOS/Source/list.c **** 			insertion position. */
 196:FreeRTOS/Source/list.c **** 		}
 197:FreeRTOS/Source/list.c **** 	}
 198:FreeRTOS/Source/list.c **** 
 199:FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 210              		.loc 1 199 0 is_stmt 1
 211 0050 5A68     		ldr	r2, [r3, #4]	@ D.4900, pxIterator_2->pxNext
 212              	.LVL12:
 213 0052 4A60     		str	r2, [r1, #4]	@ D.4900, pxNewListItem_4(D)->pxNext
 200:FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 214              		.loc 1 200 0
 215 0054 9160     		str	r1, [r2, #8]	@ pxNewListItem, _11->pxPrevious
 201:FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 216              		.loc 1 201 0
 217 0056 8B60     		str	r3, [r1, #8]	@ pxIterator, pxNewListItem_4(D)->pxPrevious
 202:FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 218              		.loc 1 202 0
 219 0058 5960     		str	r1, [r3, #4]	@ pxNewListItem, pxIterator_2->pxNext
 203:FreeRTOS/Source/list.c **** 
 204:FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 205:FreeRTOS/Source/list.c **** 	item later. */
 206:FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 207:FreeRTOS/Source/list.c **** 
 208:FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 220              		.loc 1 208 0
 221 005a 0368     		ldr	r3, [r0]	@ pxList_6(D)->uxNumberOfItems, pxList_6(D)->uxNumberOfItems
 222              	.LVL13:
 206:FreeRTOS/Source/list.c **** 
 223              		.loc 1 206 0
 224 005c 0861     		str	r0, [r1, #16]	@ pxList, pxNewListItem_4(D)->pvContainer
 225              		.loc 1 208 0
 226 005e 0133     		adds	r3, r3, #1	@ D.4899, pxList_6(D)->uxNumberOfItems,
 227 0060 0360     		str	r3, [r0]	@ D.4899, pxList_6(D)->uxNumberOfItems
 228 0062 30BD     		pop	{r4, r5, pc}	@
 229              		.cfi_endproc
 230              	.LFE8:
 231              		.size	vListInsert, .-vListInsert
 232              		.align	1
 233              		.global	uxListRemove
 234              		.thumb
 235              		.thumb_func
 236              		.type	uxListRemove, %function
 237              	uxListRemove:
 238              	.LFB9:
 209:FreeRTOS/Source/list.c **** }
 210:FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 211:FreeRTOS/Source/list.c **** 
 212:FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 213:FreeRTOS/Source/list.c **** {
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 9


 239              		.loc 1 213 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              	.LVL14:
 214:FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 215:FreeRTOS/Source/list.c **** item. */
 216:FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 217:FreeRTOS/Source/list.c **** 
 218:FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 245              		.loc 1 218 0
 246 0064 4168     		ldr	r1, [r0, #4]	@ D.4903, pxItemToRemove_3(D)->pxNext
 247 0066 8268     		ldr	r2, [r0, #8]	@ D.4903, pxItemToRemove_3(D)->pxPrevious
 216:FreeRTOS/Source/list.c **** 
 248              		.loc 1 216 0
 249 0068 0369     		ldr	r3, [r0, #16]	@ pxList, pxItemToRemove_3(D)->pvContainer
 250              	.LVL15:
 251              		.loc 1 218 0
 252 006a 8A60     		str	r2, [r1, #8]	@ D.4903, _5->pxPrevious
 219:FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 253              		.loc 1 219 0
 254 006c 8268     		ldr	r2, [r0, #8]	@ D.4903, pxItemToRemove_3(D)->pxPrevious
 255 006e 5160     		str	r1, [r2, #4]	@ D.4903, _8->pxNext
 220:FreeRTOS/Source/list.c **** 
 221:FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 222:FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 223:FreeRTOS/Source/list.c **** 
 224:FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 225:FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 256              		.loc 1 225 0
 257 0070 5968     		ldr	r1, [r3, #4]	@ pxList_4->pxIndex, pxList_4->pxIndex
 258 0072 8142     		cmp	r1, r0	@ pxList_4->pxIndex, pxItemToRemove
 226:FreeRTOS/Source/list.c **** 	{
 227:FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 259              		.loc 1 227 0
 260 0074 08BF     		it	eq
 261 0076 5A60     		streq	r2, [r3, #4]	@ D.4903, pxList_4->pxIndex
 228:FreeRTOS/Source/list.c **** 	}
 229:FreeRTOS/Source/list.c **** 	else
 230:FreeRTOS/Source/list.c **** 	{
 231:FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 232:FreeRTOS/Source/list.c **** 	}
 233:FreeRTOS/Source/list.c **** 
 234:FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 262              		.loc 1 234 0
 263 0078 0022     		movs	r2, #0	@ tmp120,
 264 007a 0261     		str	r2, [r0, #16]	@ tmp120, pxItemToRemove_3(D)->pvContainer
 235:FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 265              		.loc 1 235 0
 266 007c 1868     		ldr	r0, [r3]	@ pxList_4->uxNumberOfItems, pxList_4->uxNumberOfItems
 267              	.LVL16:
 268 007e 0138     		subs	r0, r0, #1	@ D.4905, pxList_4->uxNumberOfItems,
 269 0080 1860     		str	r0, [r3]	@ D.4905, pxList_4->uxNumberOfItems
 236:FreeRTOS/Source/list.c **** 
 237:FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 238:FreeRTOS/Source/list.c **** }
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 10


 270              		.loc 1 238 0
 271 0082 7047     		bx	lr	@
 272              		.cfi_endproc
 273              	.LFE9:
 274              		.size	uxListRemove, .-uxListRemove
 275              	.Letext0:
 276              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 277              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 278              		.file 4 "./FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h"
 279              		.file 5 "./FreeRTOS/Source/include/list.h"
 280              		.section	.debug_info,"",%progbits
 281              	.Ldebug_info0:
 282 0000 C1020000 		.4byte	0x2c1
 283 0004 0200     		.2byte	0x2
 284 0006 00000000 		.4byte	.Ldebug_abbrev0
 285 000a 04       		.byte	0x4
 286 000b 01       		.uleb128 0x1
 287 000c BB000000 		.4byte	.LASF40
 288 0010 01       		.byte	0x1
 289 0011 D9010000 		.4byte	.LASF41
 290 0015 5A020000 		.4byte	.LASF42
 291 0019 00000000 		.4byte	.Ltext0
 292 001d 84000000 		.4byte	.Letext0
 293 0021 00000000 		.4byte	.Ldebug_line0
 294 0025 02       		.uleb128 0x2
 295 0026 04       		.byte	0x4
 296 0027 07       		.byte	0x7
 297 0028 65010000 		.4byte	.LASF0
 298 002c 03       		.uleb128 0x3
 299 002d 04       		.byte	0x4
 300 002e 05       		.byte	0x5
 301 002f 696E7400 		.ascii	"int\000"
 302 0033 02       		.uleb128 0x2
 303 0034 01       		.byte	0x1
 304 0035 06       		.byte	0x6
 305 0036 47020000 		.4byte	.LASF1
 306 003a 02       		.uleb128 0x2
 307 003b 01       		.byte	0x1
 308 003c 08       		.byte	0x8
 309 003d 53000000 		.4byte	.LASF2
 310 0041 02       		.uleb128 0x2
 311 0042 02       		.byte	0x2
 312 0043 05       		.byte	0x5
 313 0044 FB010000 		.4byte	.LASF3
 314 0048 02       		.uleb128 0x2
 315 0049 02       		.byte	0x2
 316 004a 07       		.byte	0x7
 317 004b 82000000 		.4byte	.LASF4
 318 004f 02       		.uleb128 0x2
 319 0050 04       		.byte	0x4
 320 0051 05       		.byte	0x5
 321 0052 21020000 		.4byte	.LASF5
 322 0056 04       		.uleb128 0x4
 323 0057 B0000000 		.4byte	.LASF11
 324 005b 02       		.byte	0x2
 325 005c 41       		.byte	0x41
 326 005d 61000000 		.4byte	0x61
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 11


 327 0061 02       		.uleb128 0x2
 328 0062 04       		.byte	0x4
 329 0063 07       		.byte	0x7
 330 0064 61000000 		.4byte	.LASF6
 331 0068 02       		.uleb128 0x2
 332 0069 08       		.byte	0x8
 333 006a 05       		.byte	0x5
 334 006b C6010000 		.4byte	.LASF7
 335 006f 02       		.uleb128 0x2
 336 0070 08       		.byte	0x8
 337 0071 07       		.byte	0x7
 338 0072 94010000 		.4byte	.LASF8
 339 0076 02       		.uleb128 0x2
 340 0077 04       		.byte	0x4
 341 0078 07       		.byte	0x7
 342 0079 BD010000 		.4byte	.LASF9
 343 007d 05       		.uleb128 0x5
 344 007e 04       		.byte	0x4
 345 007f 02       		.uleb128 0x2
 346 0080 01       		.byte	0x1
 347 0081 08       		.byte	0x8
 348 0082 D4010000 		.4byte	.LASF10
 349 0086 04       		.uleb128 0x4
 350 0087 18020000 		.4byte	.LASF12
 351 008b 03       		.byte	0x3
 352 008c 20       		.byte	0x20
 353 008d 56000000 		.4byte	0x56
 354 0091 04       		.uleb128 0x4
 355 0092 8B020000 		.4byte	.LASF13
 356 0096 04       		.byte	0x4
 357 0097 63       		.byte	0x63
 358 0098 61000000 		.4byte	0x61
 359 009c 04       		.uleb128 0x4
 360 009d 12000000 		.4byte	.LASF14
 361 00a1 04       		.byte	0x4
 362 00a2 69       		.byte	0x69
 363 00a3 86000000 		.4byte	0x86
 364 00a7 06       		.uleb128 0x6
 365 00a8 48000000 		.4byte	.LASF21
 366 00ac 14       		.byte	0x14
 367 00ad 05       		.byte	0x5
 368 00ae B5       		.byte	0xb5
 369 00af FA000000 		.4byte	0xfa
 370 00b3 07       		.uleb128 0x7
 371 00b4 2C000000 		.4byte	.LASF15
 372 00b8 05       		.byte	0x5
 373 00b9 B8       		.byte	0xb8
 374 00ba 9C000000 		.4byte	0x9c
 375 00be 02       		.byte	0x2
 376 00bf 23       		.byte	0x23
 377 00c0 00       		.uleb128 0
 378 00c1 07       		.uleb128 0x7
 379 00c2 5E010000 		.4byte	.LASF16
 380 00c6 05       		.byte	0x5
 381 00c7 B9       		.byte	0xb9
 382 00c8 FA000000 		.4byte	0xfa
 383 00cc 02       		.byte	0x2
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 12


 384 00cd 23       		.byte	0x23
 385 00ce 04       		.uleb128 0x4
 386 00cf 07       		.uleb128 0x7
 387 00d0 0D020000 		.4byte	.LASF17
 388 00d4 05       		.byte	0x5
 389 00d5 BA       		.byte	0xba
 390 00d6 FA000000 		.4byte	0xfa
 391 00da 02       		.byte	0x2
 392 00db 23       		.byte	0x23
 393 00dc 08       		.uleb128 0x8
 394 00dd 07       		.uleb128 0x7
 395 00de 40000000 		.4byte	.LASF18
 396 00e2 05       		.byte	0x5
 397 00e3 BB       		.byte	0xbb
 398 00e4 7D000000 		.4byte	0x7d
 399 00e8 02       		.byte	0x2
 400 00e9 23       		.byte	0x23
 401 00ea 0C       		.uleb128 0xc
 402 00eb 07       		.uleb128 0x7
 403 00ec 00000000 		.4byte	.LASF19
 404 00f0 05       		.byte	0x5
 405 00f1 BC       		.byte	0xbc
 406 00f2 7D000000 		.4byte	0x7d
 407 00f6 02       		.byte	0x2
 408 00f7 23       		.byte	0x23
 409 00f8 10       		.uleb128 0x10
 410 00f9 00       		.byte	0
 411 00fa 08       		.uleb128 0x8
 412 00fb 04       		.byte	0x4
 413 00fc A7000000 		.4byte	0xa7
 414 0100 04       		.uleb128 0x4
 415 0101 B2010000 		.4byte	.LASF20
 416 0105 05       		.byte	0x5
 417 0106 BF       		.byte	0xbf
 418 0107 A7000000 		.4byte	0xa7
 419 010b 06       		.uleb128 0x6
 420 010c 37020000 		.4byte	.LASF22
 421 0110 0C       		.byte	0xc
 422 0111 05       		.byte	0x5
 423 0112 C1       		.byte	0xc1
 424 0113 42010000 		.4byte	0x142
 425 0117 07       		.uleb128 0x7
 426 0118 2C000000 		.4byte	.LASF15
 427 011c 05       		.byte	0x5
 428 011d C4       		.byte	0xc4
 429 011e 9C000000 		.4byte	0x9c
 430 0122 02       		.byte	0x2
 431 0123 23       		.byte	0x23
 432 0124 00       		.uleb128 0
 433 0125 07       		.uleb128 0x7
 434 0126 5E010000 		.4byte	.LASF16
 435 012a 05       		.byte	0x5
 436 012b C5       		.byte	0xc5
 437 012c FA000000 		.4byte	0xfa
 438 0130 02       		.byte	0x2
 439 0131 23       		.byte	0x23
 440 0132 04       		.uleb128 0x4
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 13


 441 0133 07       		.uleb128 0x7
 442 0134 0D020000 		.4byte	.LASF17
 443 0138 05       		.byte	0x5
 444 0139 C6       		.byte	0xc6
 445 013a FA000000 		.4byte	0xfa
 446 013e 02       		.byte	0x2
 447 013f 23       		.byte	0x23
 448 0140 08       		.uleb128 0x8
 449 0141 00       		.byte	0
 450 0142 04       		.uleb128 0x4
 451 0143 1D000000 		.4byte	.LASF23
 452 0147 05       		.byte	0x5
 453 0148 C8       		.byte	0xc8
 454 0149 0B010000 		.4byte	0x10b
 455 014d 06       		.uleb128 0x6
 456 014e 0C000000 		.4byte	.LASF24
 457 0152 14       		.byte	0x14
 458 0153 05       		.byte	0x5
 459 0154 CD       		.byte	0xcd
 460 0155 84010000 		.4byte	0x184
 461 0159 07       		.uleb128 0x7
 462 015a 3F010000 		.4byte	.LASF25
 463 015e 05       		.byte	0x5
 464 015f D0       		.byte	0xd0
 465 0160 91000000 		.4byte	0x91
 466 0164 02       		.byte	0x2
 467 0165 23       		.byte	0x23
 468 0166 00       		.uleb128 0
 469 0167 07       		.uleb128 0x7
 470 0168 05020000 		.4byte	.LASF26
 471 016c 05       		.byte	0x5
 472 016d D1       		.byte	0xd1
 473 016e 84010000 		.4byte	0x184
 474 0172 02       		.byte	0x2
 475 0173 23       		.byte	0x23
 476 0174 04       		.uleb128 0x4
 477 0175 07       		.uleb128 0x7
 478 0176 37000000 		.4byte	.LASF27
 479 017a 05       		.byte	0x5
 480 017b D2       		.byte	0xd2
 481 017c 42010000 		.4byte	0x142
 482 0180 02       		.byte	0x2
 483 0181 23       		.byte	0x23
 484 0182 08       		.uleb128 0x8
 485 0183 00       		.byte	0
 486 0184 08       		.uleb128 0x8
 487 0185 04       		.byte	0x4
 488 0186 00010000 		.4byte	0x100
 489 018a 04       		.uleb128 0x4
 490 018b A9000000 		.4byte	.LASF28
 491 018f 05       		.byte	0x5
 492 0190 D4       		.byte	0xd4
 493 0191 4D010000 		.4byte	0x14d
 494 0195 09       		.uleb128 0x9
 495 0196 01       		.byte	0x1
 496 0197 72010000 		.4byte	.LASF29
 497 019b 01       		.byte	0x1
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 14


 498 019c 4F       		.byte	0x4f
 499 019d 01       		.byte	0x1
 500 019e 00000000 		.4byte	.LFB5
 501 01a2 16000000 		.4byte	.LFE5
 502 01a6 02       		.byte	0x2
 503 01a7 7D       		.byte	0x7d
 504 01a8 00       		.sleb128 0
 505 01a9 01       		.byte	0x1
 506 01aa BC010000 		.4byte	0x1bc
 507 01ae 0A       		.uleb128 0xa
 508 01af 53020000 		.4byte	.LASF31
 509 01b3 01       		.byte	0x1
 510 01b4 4F       		.byte	0x4f
 511 01b5 BC010000 		.4byte	0x1bc
 512 01b9 01       		.byte	0x1
 513 01ba 50       		.byte	0x50
 514 01bb 00       		.byte	0
 515 01bc 0B       		.uleb128 0xb
 516 01bd C1010000 		.4byte	0x1c1
 517 01c1 08       		.uleb128 0x8
 518 01c2 04       		.byte	0x4
 519 01c3 8A010000 		.4byte	0x18a
 520 01c7 09       		.uleb128 0x9
 521 01c8 01       		.byte	0x1
 522 01c9 95000000 		.4byte	.LASF30
 523 01cd 01       		.byte	0x1
 524 01ce 68       		.byte	0x68
 525 01cf 01       		.byte	0x1
 526 01d0 16000000 		.4byte	.LFB6
 527 01d4 1C000000 		.4byte	.LFE6
 528 01d8 02       		.byte	0x2
 529 01d9 7D       		.byte	0x7d
 530 01da 00       		.sleb128 0
 531 01db 01       		.byte	0x1
 532 01dc EE010000 		.4byte	0x1ee
 533 01e0 0A       		.uleb128 0xa
 534 01e1 AB010000 		.4byte	.LASF32
 535 01e5 01       		.byte	0x1
 536 01e6 68       		.byte	0x68
 537 01e7 EE010000 		.4byte	0x1ee
 538 01eb 01       		.byte	0x1
 539 01ec 50       		.byte	0x50
 540 01ed 00       		.byte	0
 541 01ee 0B       		.uleb128 0xb
 542 01ef 84010000 		.4byte	0x184
 543 01f3 09       		.uleb128 0x9
 544 01f4 01       		.byte	0x1
 545 01f5 4F010000 		.4byte	.LASF33
 546 01f9 01       		.byte	0x1
 547 01fa 74       		.byte	0x74
 548 01fb 01       		.byte	0x1
 549 01fc 1C000000 		.4byte	.LFB7
 550 0200 34000000 		.4byte	.LFE7
 551 0204 02       		.byte	0x2
 552 0205 7D       		.byte	0x7d
 553 0206 00       		.sleb128 0
 554 0207 01       		.byte	0x1
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 15


 555 0208 36020000 		.4byte	0x236
 556 020c 0A       		.uleb128 0xa
 557 020d 53020000 		.4byte	.LASF31
 558 0211 01       		.byte	0x1
 559 0212 74       		.byte	0x74
 560 0213 BC010000 		.4byte	0x1bc
 561 0217 01       		.byte	0x1
 562 0218 50       		.byte	0x50
 563 0219 0A       		.uleb128 0xa
 564 021a 97020000 		.4byte	.LASF34
 565 021e 01       		.byte	0x1
 566 021f 74       		.byte	0x74
 567 0220 EE010000 		.4byte	0x1ee
 568 0224 01       		.byte	0x1
 569 0225 51       		.byte	0x51
 570 0226 0C       		.uleb128 0xc
 571 0227 05020000 		.4byte	.LASF26
 572 022b 01       		.byte	0x1
 573 022c 76       		.byte	0x76
 574 022d EE010000 		.4byte	0x1ee
 575 0231 00000000 		.4byte	.LLST0
 576 0235 00       		.byte	0
 577 0236 0D       		.uleb128 0xd
 578 0237 01       		.byte	0x1
 579 0238 A5020000 		.4byte	.LASF35
 580 023c 01       		.byte	0x1
 581 023d 91       		.byte	0x91
 582 023e 01       		.byte	0x1
 583 023f 34000000 		.4byte	.LFB8
 584 0243 64000000 		.4byte	.LFE8
 585 0247 1F000000 		.4byte	.LLST1
 586 024b 01       		.byte	0x1
 587 024c 89020000 		.4byte	0x289
 588 0250 0A       		.uleb128 0xa
 589 0251 53020000 		.4byte	.LASF31
 590 0255 01       		.byte	0x1
 591 0256 91       		.byte	0x91
 592 0257 BC010000 		.4byte	0x1bc
 593 025b 01       		.byte	0x1
 594 025c 50       		.byte	0x50
 595 025d 0A       		.uleb128 0xa
 596 025e 97020000 		.4byte	.LASF34
 597 0262 01       		.byte	0x1
 598 0263 91       		.byte	0x91
 599 0264 EE010000 		.4byte	0x1ee
 600 0268 01       		.byte	0x1
 601 0269 51       		.byte	0x51
 602 026a 0C       		.uleb128 0xc
 603 026b F0010000 		.4byte	.LASF36
 604 026f 01       		.byte	0x1
 605 0270 93       		.byte	0x93
 606 0271 84010000 		.4byte	0x184
 607 0275 3F000000 		.4byte	.LLST2
 608 0279 0C       		.uleb128 0xc
 609 027a 82010000 		.4byte	.LASF37
 610 027e 01       		.byte	0x1
 611 027f 94       		.byte	0x94
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 16


 612 0280 89020000 		.4byte	0x289
 613 0284 74000000 		.4byte	.LLST3
 614 0288 00       		.byte	0
 615 0289 0B       		.uleb128 0xb
 616 028a 9C000000 		.4byte	0x9c
 617 028e 0E       		.uleb128 0xe
 618 028f 01       		.byte	0x1
 619 0290 2A020000 		.4byte	.LASF38
 620 0294 01       		.byte	0x1
 621 0295 D4       		.byte	0xd4
 622 0296 01       		.byte	0x1
 623 0297 91000000 		.4byte	0x91
 624 029b 64000000 		.4byte	.LFB9
 625 029f 84000000 		.4byte	.LFE9
 626 02a3 02       		.byte	0x2
 627 02a4 7D       		.byte	0x7d
 628 02a5 00       		.sleb128 0
 629 02a6 01       		.byte	0x1
 630 02a7 0F       		.uleb128 0xf
 631 02a8 73000000 		.4byte	.LASF39
 632 02ac 01       		.byte	0x1
 633 02ad D4       		.byte	0xd4
 634 02ae EE010000 		.4byte	0x1ee
 635 02b2 93000000 		.4byte	.LLST4
 636 02b6 10       		.uleb128 0x10
 637 02b7 53020000 		.4byte	.LASF31
 638 02bb 01       		.byte	0x1
 639 02bc D8       		.byte	0xd8
 640 02bd BC010000 		.4byte	0x1bc
 641 02c1 01       		.byte	0x1
 642 02c2 53       		.byte	0x53
 643 02c3 00       		.byte	0
 644 02c4 00       		.byte	0
 645              		.section	.debug_abbrev,"",%progbits
 646              	.Ldebug_abbrev0:
 647 0000 01       		.uleb128 0x1
 648 0001 11       		.uleb128 0x11
 649 0002 01       		.byte	0x1
 650 0003 25       		.uleb128 0x25
 651 0004 0E       		.uleb128 0xe
 652 0005 13       		.uleb128 0x13
 653 0006 0B       		.uleb128 0xb
 654 0007 03       		.uleb128 0x3
 655 0008 0E       		.uleb128 0xe
 656 0009 1B       		.uleb128 0x1b
 657 000a 0E       		.uleb128 0xe
 658 000b 11       		.uleb128 0x11
 659 000c 01       		.uleb128 0x1
 660 000d 12       		.uleb128 0x12
 661 000e 01       		.uleb128 0x1
 662 000f 10       		.uleb128 0x10
 663 0010 06       		.uleb128 0x6
 664 0011 00       		.byte	0
 665 0012 00       		.byte	0
 666 0013 02       		.uleb128 0x2
 667 0014 24       		.uleb128 0x24
 668 0015 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 17


 669 0016 0B       		.uleb128 0xb
 670 0017 0B       		.uleb128 0xb
 671 0018 3E       		.uleb128 0x3e
 672 0019 0B       		.uleb128 0xb
 673 001a 03       		.uleb128 0x3
 674 001b 0E       		.uleb128 0xe
 675 001c 00       		.byte	0
 676 001d 00       		.byte	0
 677 001e 03       		.uleb128 0x3
 678 001f 24       		.uleb128 0x24
 679 0020 00       		.byte	0
 680 0021 0B       		.uleb128 0xb
 681 0022 0B       		.uleb128 0xb
 682 0023 3E       		.uleb128 0x3e
 683 0024 0B       		.uleb128 0xb
 684 0025 03       		.uleb128 0x3
 685 0026 08       		.uleb128 0x8
 686 0027 00       		.byte	0
 687 0028 00       		.byte	0
 688 0029 04       		.uleb128 0x4
 689 002a 16       		.uleb128 0x16
 690 002b 00       		.byte	0
 691 002c 03       		.uleb128 0x3
 692 002d 0E       		.uleb128 0xe
 693 002e 3A       		.uleb128 0x3a
 694 002f 0B       		.uleb128 0xb
 695 0030 3B       		.uleb128 0x3b
 696 0031 0B       		.uleb128 0xb
 697 0032 49       		.uleb128 0x49
 698 0033 13       		.uleb128 0x13
 699 0034 00       		.byte	0
 700 0035 00       		.byte	0
 701 0036 05       		.uleb128 0x5
 702 0037 0F       		.uleb128 0xf
 703 0038 00       		.byte	0
 704 0039 0B       		.uleb128 0xb
 705 003a 0B       		.uleb128 0xb
 706 003b 00       		.byte	0
 707 003c 00       		.byte	0
 708 003d 06       		.uleb128 0x6
 709 003e 13       		.uleb128 0x13
 710 003f 01       		.byte	0x1
 711 0040 03       		.uleb128 0x3
 712 0041 0E       		.uleb128 0xe
 713 0042 0B       		.uleb128 0xb
 714 0043 0B       		.uleb128 0xb
 715 0044 3A       		.uleb128 0x3a
 716 0045 0B       		.uleb128 0xb
 717 0046 3B       		.uleb128 0x3b
 718 0047 0B       		.uleb128 0xb
 719 0048 01       		.uleb128 0x1
 720 0049 13       		.uleb128 0x13
 721 004a 00       		.byte	0
 722 004b 00       		.byte	0
 723 004c 07       		.uleb128 0x7
 724 004d 0D       		.uleb128 0xd
 725 004e 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 18


 726 004f 03       		.uleb128 0x3
 727 0050 0E       		.uleb128 0xe
 728 0051 3A       		.uleb128 0x3a
 729 0052 0B       		.uleb128 0xb
 730 0053 3B       		.uleb128 0x3b
 731 0054 0B       		.uleb128 0xb
 732 0055 49       		.uleb128 0x49
 733 0056 13       		.uleb128 0x13
 734 0057 38       		.uleb128 0x38
 735 0058 0A       		.uleb128 0xa
 736 0059 00       		.byte	0
 737 005a 00       		.byte	0
 738 005b 08       		.uleb128 0x8
 739 005c 0F       		.uleb128 0xf
 740 005d 00       		.byte	0
 741 005e 0B       		.uleb128 0xb
 742 005f 0B       		.uleb128 0xb
 743 0060 49       		.uleb128 0x49
 744 0061 13       		.uleb128 0x13
 745 0062 00       		.byte	0
 746 0063 00       		.byte	0
 747 0064 09       		.uleb128 0x9
 748 0065 2E       		.uleb128 0x2e
 749 0066 01       		.byte	0x1
 750 0067 3F       		.uleb128 0x3f
 751 0068 0C       		.uleb128 0xc
 752 0069 03       		.uleb128 0x3
 753 006a 0E       		.uleb128 0xe
 754 006b 3A       		.uleb128 0x3a
 755 006c 0B       		.uleb128 0xb
 756 006d 3B       		.uleb128 0x3b
 757 006e 0B       		.uleb128 0xb
 758 006f 27       		.uleb128 0x27
 759 0070 0C       		.uleb128 0xc
 760 0071 11       		.uleb128 0x11
 761 0072 01       		.uleb128 0x1
 762 0073 12       		.uleb128 0x12
 763 0074 01       		.uleb128 0x1
 764 0075 40       		.uleb128 0x40
 765 0076 0A       		.uleb128 0xa
 766 0077 9742     		.uleb128 0x2117
 767 0079 0C       		.uleb128 0xc
 768 007a 01       		.uleb128 0x1
 769 007b 13       		.uleb128 0x13
 770 007c 00       		.byte	0
 771 007d 00       		.byte	0
 772 007e 0A       		.uleb128 0xa
 773 007f 05       		.uleb128 0x5
 774 0080 00       		.byte	0
 775 0081 03       		.uleb128 0x3
 776 0082 0E       		.uleb128 0xe
 777 0083 3A       		.uleb128 0x3a
 778 0084 0B       		.uleb128 0xb
 779 0085 3B       		.uleb128 0x3b
 780 0086 0B       		.uleb128 0xb
 781 0087 49       		.uleb128 0x49
 782 0088 13       		.uleb128 0x13
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 19


 783 0089 02       		.uleb128 0x2
 784 008a 0A       		.uleb128 0xa
 785 008b 00       		.byte	0
 786 008c 00       		.byte	0
 787 008d 0B       		.uleb128 0xb
 788 008e 26       		.uleb128 0x26
 789 008f 00       		.byte	0
 790 0090 49       		.uleb128 0x49
 791 0091 13       		.uleb128 0x13
 792 0092 00       		.byte	0
 793 0093 00       		.byte	0
 794 0094 0C       		.uleb128 0xc
 795 0095 34       		.uleb128 0x34
 796 0096 00       		.byte	0
 797 0097 03       		.uleb128 0x3
 798 0098 0E       		.uleb128 0xe
 799 0099 3A       		.uleb128 0x3a
 800 009a 0B       		.uleb128 0xb
 801 009b 3B       		.uleb128 0x3b
 802 009c 0B       		.uleb128 0xb
 803 009d 49       		.uleb128 0x49
 804 009e 13       		.uleb128 0x13
 805 009f 02       		.uleb128 0x2
 806 00a0 06       		.uleb128 0x6
 807 00a1 00       		.byte	0
 808 00a2 00       		.byte	0
 809 00a3 0D       		.uleb128 0xd
 810 00a4 2E       		.uleb128 0x2e
 811 00a5 01       		.byte	0x1
 812 00a6 3F       		.uleb128 0x3f
 813 00a7 0C       		.uleb128 0xc
 814 00a8 03       		.uleb128 0x3
 815 00a9 0E       		.uleb128 0xe
 816 00aa 3A       		.uleb128 0x3a
 817 00ab 0B       		.uleb128 0xb
 818 00ac 3B       		.uleb128 0x3b
 819 00ad 0B       		.uleb128 0xb
 820 00ae 27       		.uleb128 0x27
 821 00af 0C       		.uleb128 0xc
 822 00b0 11       		.uleb128 0x11
 823 00b1 01       		.uleb128 0x1
 824 00b2 12       		.uleb128 0x12
 825 00b3 01       		.uleb128 0x1
 826 00b4 40       		.uleb128 0x40
 827 00b5 06       		.uleb128 0x6
 828 00b6 9742     		.uleb128 0x2117
 829 00b8 0C       		.uleb128 0xc
 830 00b9 01       		.uleb128 0x1
 831 00ba 13       		.uleb128 0x13
 832 00bb 00       		.byte	0
 833 00bc 00       		.byte	0
 834 00bd 0E       		.uleb128 0xe
 835 00be 2E       		.uleb128 0x2e
 836 00bf 01       		.byte	0x1
 837 00c0 3F       		.uleb128 0x3f
 838 00c1 0C       		.uleb128 0xc
 839 00c2 03       		.uleb128 0x3
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 20


 840 00c3 0E       		.uleb128 0xe
 841 00c4 3A       		.uleb128 0x3a
 842 00c5 0B       		.uleb128 0xb
 843 00c6 3B       		.uleb128 0x3b
 844 00c7 0B       		.uleb128 0xb
 845 00c8 27       		.uleb128 0x27
 846 00c9 0C       		.uleb128 0xc
 847 00ca 49       		.uleb128 0x49
 848 00cb 13       		.uleb128 0x13
 849 00cc 11       		.uleb128 0x11
 850 00cd 01       		.uleb128 0x1
 851 00ce 12       		.uleb128 0x12
 852 00cf 01       		.uleb128 0x1
 853 00d0 40       		.uleb128 0x40
 854 00d1 0A       		.uleb128 0xa
 855 00d2 9742     		.uleb128 0x2117
 856 00d4 0C       		.uleb128 0xc
 857 00d5 00       		.byte	0
 858 00d6 00       		.byte	0
 859 00d7 0F       		.uleb128 0xf
 860 00d8 05       		.uleb128 0x5
 861 00d9 00       		.byte	0
 862 00da 03       		.uleb128 0x3
 863 00db 0E       		.uleb128 0xe
 864 00dc 3A       		.uleb128 0x3a
 865 00dd 0B       		.uleb128 0xb
 866 00de 3B       		.uleb128 0x3b
 867 00df 0B       		.uleb128 0xb
 868 00e0 49       		.uleb128 0x49
 869 00e1 13       		.uleb128 0x13
 870 00e2 02       		.uleb128 0x2
 871 00e3 06       		.uleb128 0x6
 872 00e4 00       		.byte	0
 873 00e5 00       		.byte	0
 874 00e6 10       		.uleb128 0x10
 875 00e7 34       		.uleb128 0x34
 876 00e8 00       		.byte	0
 877 00e9 03       		.uleb128 0x3
 878 00ea 0E       		.uleb128 0xe
 879 00eb 3A       		.uleb128 0x3a
 880 00ec 0B       		.uleb128 0xb
 881 00ed 3B       		.uleb128 0x3b
 882 00ee 0B       		.uleb128 0xb
 883 00ef 49       		.uleb128 0x49
 884 00f0 13       		.uleb128 0x13
 885 00f1 02       		.uleb128 0x2
 886 00f2 0A       		.uleb128 0xa
 887 00f3 00       		.byte	0
 888 00f4 00       		.byte	0
 889 00f5 00       		.byte	0
 890              		.section	.debug_loc,"",%progbits
 891              	.Ldebug_loc0:
 892              	.LLST0:
 893 0000 1E000000 		.4byte	.LVL3-.Ltext0
 894 0004 2C000000 		.4byte	.LVL4-.Ltext0
 895 0008 0100     		.2byte	0x1
 896 000a 53       		.byte	0x53
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 21


 897 000b 2C000000 		.4byte	.LVL4-.Ltext0
 898 000f 34000000 		.4byte	.LFE7-.Ltext0
 899 0013 0200     		.2byte	0x2
 900 0015 70       		.byte	0x70
 901 0016 04       		.sleb128 4
 902 0017 00000000 		.4byte	0
 903 001b 00000000 		.4byte	0
 904              	.LLST1:
 905 001f 34000000 		.4byte	.LFB8-.Ltext0
 906 0023 38000000 		.4byte	.LCFI0-.Ltext0
 907 0027 0200     		.2byte	0x2
 908 0029 7D       		.byte	0x7d
 909 002a 00       		.sleb128 0
 910 002b 38000000 		.4byte	.LCFI0-.Ltext0
 911 002f 64000000 		.4byte	.LFE8-.Ltext0
 912 0033 0200     		.2byte	0x2
 913 0035 7D       		.byte	0x7d
 914 0036 0C       		.sleb128 12
 915 0037 00000000 		.4byte	0
 916 003b 00000000 		.4byte	0
 917              	.LLST2:
 918 003f 3E000000 		.4byte	.LVL7-.Ltext0
 919 0043 40000000 		.4byte	.LVL8-.Ltext0
 920 0047 0100     		.2byte	0x1
 921 0049 53       		.byte	0x53
 922 004a 44000000 		.4byte	.LVL9-.Ltext0
 923 004e 4E000000 		.4byte	.LVL10-.Ltext0
 924 0052 0100     		.2byte	0x1
 925 0054 53       		.byte	0x53
 926 0055 50000000 		.4byte	.LVL11-.Ltext0
 927 0059 5C000000 		.4byte	.LVL13-.Ltext0
 928 005d 0100     		.2byte	0x1
 929 005f 53       		.byte	0x53
 930 0060 5C000000 		.4byte	.LVL13-.Ltext0
 931 0064 64000000 		.4byte	.LFE8-.Ltext0
 932 0068 0200     		.2byte	0x2
 933 006a 71       		.byte	0x71
 934 006b 08       		.sleb128 8
 935 006c 00000000 		.4byte	0
 936 0070 00000000 		.4byte	0
 937              	.LLST3:
 938 0074 36000000 		.4byte	.LVL6-.Ltext0
 939 0078 52000000 		.4byte	.LVL12-.Ltext0
 940 007c 0100     		.2byte	0x1
 941 007e 52       		.byte	0x52
 942 007f 52000000 		.4byte	.LVL12-.Ltext0
 943 0083 64000000 		.4byte	.LFE8-.Ltext0
 944 0087 0200     		.2byte	0x2
 945 0089 71       		.byte	0x71
 946 008a 00       		.sleb128 0
 947 008b 00000000 		.4byte	0
 948 008f 00000000 		.4byte	0
 949              	.LLST4:
 950 0093 64000000 		.4byte	.LVL14-.Ltext0
 951 0097 7E000000 		.4byte	.LVL16-.Ltext0
 952 009b 0100     		.2byte	0x1
 953 009d 50       		.byte	0x50
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 22


 954 009e 7E000000 		.4byte	.LVL16-.Ltext0
 955 00a2 84000000 		.4byte	.LFE9-.Ltext0
 956 00a6 0400     		.2byte	0x4
 957 00a8 F3       		.byte	0xf3
 958 00a9 01       		.uleb128 0x1
 959 00aa 50       		.byte	0x50
 960 00ab 9F       		.byte	0x9f
 961 00ac 00000000 		.4byte	0
 962 00b0 00000000 		.4byte	0
 963              		.section	.debug_aranges,"",%progbits
 964 0000 1C000000 		.4byte	0x1c
 965 0004 0200     		.2byte	0x2
 966 0006 00000000 		.4byte	.Ldebug_info0
 967 000a 04       		.byte	0x4
 968 000b 00       		.byte	0
 969 000c 0000     		.2byte	0
 970 000e 0000     		.2byte	0
 971 0010 00000000 		.4byte	.Ltext0
 972 0014 84000000 		.4byte	.Letext0-.Ltext0
 973 0018 00000000 		.4byte	0
 974 001c 00000000 		.4byte	0
 975              		.section	.debug_line,"",%progbits
 976              	.Ldebug_line0:
 977 0000 A2010000 		.section	.debug_str,"MS",%progbits,1
 977      02004F01 
 977      00000201 
 977      FB0E0D00 
 977      01010101 
 978              	.LASF19:
 979 0000 7076436F 		.ascii	"pvContainer\000"
 979      6E746169 
 979      6E657200 
 980              	.LASF24:
 981 000c 784C4953 		.ascii	"xLIST\000"
 981      5400
 982              	.LASF14:
 983 0012 5469636B 		.ascii	"TickType_t\000"
 983      54797065 
 983      5F7400
 984              	.LASF23:
 985 001d 4D696E69 		.ascii	"MiniListItem_t\000"
 985      4C697374 
 985      4974656D 
 985      5F7400
 986              	.LASF15:
 987 002c 78497465 		.ascii	"xItemValue\000"
 987      6D56616C 
 987      756500
 988              	.LASF27:
 989 0037 784C6973 		.ascii	"xListEnd\000"
 989      74456E64 
 989      00
 990              	.LASF18:
 991 0040 70764F77 		.ascii	"pvOwner\000"
 991      6E657200 
 992              	.LASF21:
 993 0048 784C4953 		.ascii	"xLIST_ITEM\000"
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 23


 993      545F4954 
 993      454D00
 994              	.LASF2:
 995 0053 756E7369 		.ascii	"unsigned char\000"
 995      676E6564 
 995      20636861 
 995      7200
 996              	.LASF6:
 997 0061 6C6F6E67 		.ascii	"long unsigned int\000"
 997      20756E73 
 997      69676E65 
 997      6420696E 
 997      7400
 998              	.LASF39:
 999 0073 70784974 		.ascii	"pxItemToRemove\000"
 999      656D546F 
 999      52656D6F 
 999      766500
 1000              	.LASF4:
 1001 0082 73686F72 		.ascii	"short unsigned int\000"
 1001      7420756E 
 1001      7369676E 
 1001      65642069 
 1001      6E7400
 1002              	.LASF30:
 1003 0095 764C6973 		.ascii	"vListInitialiseItem\000"
 1003      74496E69 
 1003      7469616C 
 1003      69736549 
 1003      74656D00 
 1004              	.LASF28:
 1005 00a9 4C697374 		.ascii	"List_t\000"
 1005      5F7400
 1006              	.LASF11:
 1007 00b0 5F5F7569 		.ascii	"__uint32_t\000"
 1007      6E743332 
 1007      5F7400
 1008              	.LASF40:
 1009 00bb 474E5520 		.ascii	"GNU C 4.9.3 20150529 (release) [ARM/embedded-4_9-br"
 1009      4320342E 
 1009      392E3320 
 1009      32303135 
 1009      30353239 
 1010 00ee 616E6368 		.ascii	"anch revision 227977] -mcpu=cortex-m3 -mthumb -gdwa"
 1010      20726576 
 1010      6973696F 
 1010      6E203232 
 1010      37393737 
 1011 0121 72662D32 		.ascii	"rf-2 -Os -fomit-frame-pointer\000"
 1011      202D4F73 
 1011      202D666F 
 1011      6D69742D 
 1011      6672616D 
 1012              	.LASF25:
 1013 013f 75784E75 		.ascii	"uxNumberOfItems\000"
 1013      6D626572 
 1013      4F664974 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 24


 1013      656D7300 
 1014              	.LASF33:
 1015 014f 764C6973 		.ascii	"vListInsertEnd\000"
 1015      74496E73 
 1015      65727445 
 1015      6E6400
 1016              	.LASF16:
 1017 015e 70784E65 		.ascii	"pxNext\000"
 1017      787400
 1018              	.LASF0:
 1019 0165 756E7369 		.ascii	"unsigned int\000"
 1019      676E6564 
 1019      20696E74 
 1019      00
 1020              	.LASF29:
 1021 0172 764C6973 		.ascii	"vListInitialise\000"
 1021      74496E69 
 1021      7469616C 
 1021      69736500 
 1022              	.LASF37:
 1023 0182 7856616C 		.ascii	"xValueOfInsertion\000"
 1023      75654F66 
 1023      496E7365 
 1023      7274696F 
 1023      6E00
 1024              	.LASF8:
 1025 0194 6C6F6E67 		.ascii	"long long unsigned int\000"
 1025      206C6F6E 
 1025      6720756E 
 1025      7369676E 
 1025      65642069 
 1026              	.LASF32:
 1027 01ab 70784974 		.ascii	"pxItem\000"
 1027      656D00
 1028              	.LASF20:
 1029 01b2 4C697374 		.ascii	"ListItem_t\000"
 1029      4974656D 
 1029      5F7400
 1030              	.LASF9:
 1031 01bd 73697A65 		.ascii	"sizetype\000"
 1031      74797065 
 1031      00
 1032              	.LASF7:
 1033 01c6 6C6F6E67 		.ascii	"long long int\000"
 1033      206C6F6E 
 1033      6720696E 
 1033      7400
 1034              	.LASF10:
 1035 01d4 63686172 		.ascii	"char\000"
 1035      00
 1036              	.LASF41:
 1037 01d9 46726565 		.ascii	"FreeRTOS/Source/list.c\000"
 1037      52544F53 
 1037      2F536F75 
 1037      7263652F 
 1037      6C697374 
 1038              	.LASF36:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 25


 1039 01f0 70784974 		.ascii	"pxIterator\000"
 1039      65726174 
 1039      6F7200
 1040              	.LASF3:
 1041 01fb 73686F72 		.ascii	"short int\000"
 1041      7420696E 
 1041      7400
 1042              	.LASF26:
 1043 0205 7078496E 		.ascii	"pxIndex\000"
 1043      64657800 
 1044              	.LASF17:
 1045 020d 70785072 		.ascii	"pxPrevious\000"
 1045      6576696F 
 1045      757300
 1046              	.LASF12:
 1047 0218 75696E74 		.ascii	"uint32_t\000"
 1047      33325F74 
 1047      00
 1048              	.LASF5:
 1049 0221 6C6F6E67 		.ascii	"long int\000"
 1049      20696E74 
 1049      00
 1050              	.LASF38:
 1051 022a 75784C69 		.ascii	"uxListRemove\000"
 1051      73745265 
 1051      6D6F7665 
 1051      00
 1052              	.LASF22:
 1053 0237 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 1053      495F4C49 
 1053      53545F49 
 1053      54454D00 
 1054              	.LASF1:
 1055 0247 7369676E 		.ascii	"signed char\000"
 1055      65642063 
 1055      68617200 
 1056              	.LASF31:
 1057 0253 70784C69 		.ascii	"pxList\000"
 1057      737400
 1058              	.LASF42:
 1059 025a 2F557365 		.ascii	"/Users/ingamedeo/Downloads/STM32F103RBT6FreeRTOS\000"
 1059      72732F69 
 1059      6E67616D 
 1059      6564656F 
 1059      2F446F77 
 1060              	.LASF13:
 1061 028b 55426173 		.ascii	"UBaseType_t\000"
 1061      65547970 
 1061      655F7400 
 1062              	.LASF34:
 1063 0297 70784E65 		.ascii	"pxNewListItem\000"
 1063      774C6973 
 1063      74497465 
 1063      6D00
 1064              	.LASF35:
 1065 02a5 764C6973 		.ascii	"vListInsert\000"
 1065      74496E73 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 26


 1065      65727400 
 1066              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:73     .text:0000000000000000 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:78     .text:0000000000000000 vListInitialise
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:111    .text:0000000000000016 vListInitialiseItem
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:131    .text:000000000000001c vListInsertEnd
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:170    .text:0000000000000034 vListInsert
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccUpGy7j.s:237    .text:0000000000000064 uxListRemove
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
