ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"heap_2.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150529 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), GMP vers
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./Libraries/CMSIS/CM3/CoreSupport
  18              	@ -I ./Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  19              	@ -I ./Libraries/STM32F10x_StdPeriph_Driver/inc -I ./Libraries/Drivers/Leds
  20              	@ -I ./Libraries/Drivers/Buttons -I ./Libraries/Drivers/Usart
  21              	@ -I ./Libraries/Drivers/i2c -I ./Libraries/Drivers/BH1750
  22              	@ -I ./Libraries/Drivers/Utilities -I ./FreeRTOS/Source/include
  23              	@ -I ./FreeRTOS/Source/portable/GCC/ARM_CM3 -imultilib armv7-m
  24              	@ -iprefix /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../lib/gcc/arm-none-eabi/4.9.3/
  25              	@ -isysroot /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../arm-none-eabi
  26              	@ -MD FreeRTOS/Source/portable/MemMang/heap_2.d -MF .dep/heap_2.o.d -MP
  27              	@ -MQ FreeRTOS/Source/portable/MemMang/heap_2.o -D__USES_INITFINI__
  28              	@ -D STM32F10X_MD -D USE_STDPERIPH_DRIVER -D GCC_ARMCM3 -D RUN_FROM_FLASH=1
  29              	@ FreeRTOS/Source/portable/MemMang/heap_2.c -mcpu=cortex-m3 -mthumb
  30              	@ -auxbase-strip FreeRTOS/Source/portable/MemMang/heap_2.o -gdwarf-2 -Os
  31              	@ -Wall -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  33              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  34              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  35              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
  36              	@ -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  39              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  40              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  43              	@ -fipa-reference -fipa-sra -fira-hoist-pressure -fira-share-save-slots
  44              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  45              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -fmath-errno
  46              	@ -fmerge-constants -fmerge-debug-strings -fomit-frame-pointer
  47              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  48              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  49              	@ -freorder-functions -frerun-cse-after-loop
  50              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  51              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  52              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  53              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  54              	@ -fsection-anchors -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller
  55              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  56              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  57              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 2


  58              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
  59              	@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  60              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  61              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  62              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  63              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  64              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  65              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  66              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  67              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  68              	@ -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	1
  74              		.global	pvPortMalloc
  75              		.thumb
  76              		.thumb_func
  77              		.type	pvPortMalloc, %function
  78              	pvPortMalloc:
  79              	.LFB5:
  80              		.file 1 "FreeRTOS/Source/portable/MemMang/heap_2.c"
   1:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
   2:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:FreeRTOS/Source/portable/MemMang/heap_2.c ****     All rights reserved
   4:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   5:FreeRTOS/Source/portable/MemMang/heap_2.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   7:FreeRTOS/Source/portable/MemMang/heap_2.c ****     This file is part of the FreeRTOS distribution.
   8:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   9:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:FreeRTOS/Source/portable/MemMang/heap_2.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  13:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  14:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  19:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  20:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:FreeRTOS/Source/portable/MemMang/heap_2.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:FreeRTOS/Source/portable/MemMang/heap_2.c ****     link: http://www.freertos.org/a00114.html
  24:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  25:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  26:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  27:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    platform software that is more than just the market leader, it     *
  30:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    is the industry's de facto standard.                               *
  31:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  32:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 3


  35:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  37:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  38:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  39:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:FreeRTOS/Source/portable/MemMang/heap_2.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:FreeRTOS/Source/portable/MemMang/heap_2.c ****     defined configASSERT()?
  42:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  43:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:FreeRTOS/Source/portable/MemMang/heap_2.c ****     embedded software for free we request you assist our global community by
  45:FreeRTOS/Source/portable/MemMang/heap_2.c ****     participating in the support forum.
  46:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  47:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:FreeRTOS/Source/portable/MemMang/heap_2.c ****     be as productive as possible as early as possible.  Now you can receive
  49:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  52:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:FreeRTOS/Source/portable/MemMang/heap_2.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:FreeRTOS/Source/portable/MemMang/heap_2.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  56:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  59:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:FreeRTOS/Source/portable/MemMang/heap_2.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  63:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:FreeRTOS/Source/portable/MemMang/heap_2.c ****     engineered and independently SIL3 certified version for use in safety and
  65:FreeRTOS/Source/portable/MemMang/heap_2.c ****     mission critical applications that require provable dependability.
  66:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  67:FreeRTOS/Source/portable/MemMang/heap_2.c ****     1 tab == 4 spaces!
  68:FreeRTOS/Source/portable/MemMang/heap_2.c **** */
  69:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  70:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
  71:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that permits
  72:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * allocated blocks to be freed, but does not combine adjacent free blocks
  73:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * into a single larger block (and so will fragment memory).  See heap_4.c for
  74:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * an equivalent that does combine adjacent blocks into single larger blocks.
  75:FreeRTOS/Source/portable/MemMang/heap_2.c ****  *
  76:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * See heap_1.c, heap_3.c and heap_4.c for alternative implementations, and the
  77:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  78:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
  79:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include <stdlib.h>
  80:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  81:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  82:FreeRTOS/Source/portable/MemMang/heap_2.c **** all the API functions to use the MPU wrappers.  That should only be done when
  83:FreeRTOS/Source/portable/MemMang/heap_2.c **** task.h is included from an application file. */
  84:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  85:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  86:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include "FreeRTOS.h"
  87:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include "task.h"
  88:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  89:FreeRTOS/Source/portable/MemMang/heap_2.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  90:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  91:FreeRTOS/Source/portable/MemMang/heap_2.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 4


  92:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  93:FreeRTOS/Source/portable/MemMang/heap_2.c **** #endif
  94:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  95:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* A few bytes might be lost to byte aligning the heap start address. */
  96:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define configADJUSTED_HEAP_SIZE	( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )
  97:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  98:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
  99:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * Initialises the heap structures before their first use.
 100:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
 101:FreeRTOS/Source/portable/MemMang/heap_2.c **** static void prvHeapInit( void );
 102:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 103:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Allocate the memory for the heap. */
 104:FreeRTOS/Source/portable/MemMang/heap_2.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
 105:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* The application writer has already defined the array used for the RTOS
 106:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	heap - probably so it can be placed in a special segment or address. */
 107:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 108:FreeRTOS/Source/portable/MemMang/heap_2.c **** #else
 109:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 110:FreeRTOS/Source/portable/MemMang/heap_2.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
 111:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 112:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 113:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Define the linked list structure.  This is used to link free blocks in order
 114:FreeRTOS/Source/portable/MemMang/heap_2.c **** of their size. */
 115:FreeRTOS/Source/portable/MemMang/heap_2.c **** typedef struct A_BLOCK_LINK
 116:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 117:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
 118:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
 119:FreeRTOS/Source/portable/MemMang/heap_2.c **** } BlockLink_t;
 120:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 121:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 122:FreeRTOS/Source/portable/MemMang/heap_2.c **** static const uint16_t heapSTRUCT_SIZE	= ( ( sizeof ( BlockLink_t ) + ( portBYTE_ALIGNMENT - 1 ) ) &
 123:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( heapSTRUCT_SIZE * 2 ) )
 124:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 125:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Create a couple of list links to mark the start and end of the list. */
 126:FreeRTOS/Source/portable/MemMang/heap_2.c **** static BlockLink_t xStart, xEnd;
 127:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 128:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 129:FreeRTOS/Source/portable/MemMang/heap_2.c **** fragmentation. */
 130:FreeRTOS/Source/portable/MemMang/heap_2.c **** static size_t xFreeBytesRemaining = configADJUSTED_HEAP_SIZE;
 131:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 132:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* STATIC FUNCTIONS ARE DEFINED AS MACROS TO MINIMIZE THE FUNCTION CALL DEPTH. */
 133:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 134:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
 135:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * Insert a block into the list of free blocks - which is ordered by size of
 136:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * the block.  Small blocks at the start of the list and large blocks at the end
 137:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * of the list.
 138:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
 139:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define prvInsertBlockIntoFreeList( pxBlockToInsert )								\
 140:FreeRTOS/Source/portable/MemMang/heap_2.c **** {																					\
 141:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxIterator;															\
 142:FreeRTOS/Source/portable/MemMang/heap_2.c **** size_t xBlockSize;																	\
 143:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 144:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xBlockSize = pxBlockToInsert->xBlockSize;										\
 145:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 146:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Iterate through the list until a block is found that has a larger size */	\
 147:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* than the block we are inserting. */											\
 148:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock->xBlockSize < xBlockSize; pxIterator = pxIt
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 5


 149:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{																				\
 150:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* There is nothing to do here - just iterate to the correct position. */	\
 151:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}																				\
 152:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 153:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Update the list to include the block being inserted in the correct */		\
 154:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* position. */																	\
 155:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;					\
 156:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxIterator->pxNextFreeBlock = pxBlockToInsert;									\
 157:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 158:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 159:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 160:FreeRTOS/Source/portable/MemMang/heap_2.c **** void *pvPortMalloc( size_t xWantedSize )
 161:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
  81              		.loc 1 161 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL0:
  86 0000 70B5     		push	{r4, r5, r6, lr}	@
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 4, -16
  90              		.cfi_offset 5, -12
  91              		.cfi_offset 6, -8
  92              		.cfi_offset 14, -4
  93              		.loc 1 161 0
  94 0002 0446     		mov	r4, r0	@ xWantedSize, xWantedSize
 162:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 163:FreeRTOS/Source/portable/MemMang/heap_2.c **** static BaseType_t xHeapHasBeenInitialised = pdFALSE;
 164:FreeRTOS/Source/portable/MemMang/heap_2.c **** void *pvReturn = NULL;
 165:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 166:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	vTaskSuspendAll();
  95              		.loc 1 166 0
  96 0004 FFF7FEFF 		bl	vTaskSuspendAll	@
  97              	.LVL1:
 167:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 168:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* If this is the first call to malloc then the heap will require
 169:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		initialisation to setup the list of free blocks. */
 170:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( xHeapHasBeenInitialised == pdFALSE )
  98              		.loc 1 170 0
  99 0008 284B     		ldr	r3, .L22	@ tmp137,
 100 000a 9868     		ldr	r0, [r3, #8]	@ xHeapHasBeenInitialised, xHeapHasBeenInitialised
 101 000c 90B9     		cbnz	r0, .L2	@ xHeapHasBeenInitialised,
 102              	.LBB5:
 103              	.LBB6:
 171:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 172:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			prvHeapInit();
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xHeapHasBeenInitialised = pdTRUE;
 174:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 175:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 176:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* The wanted size is increased so it can contain a BlockLink_t
 177:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		structure in addition to the requested amount of bytes. */
 178:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( xWantedSize > 0 )
 179:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 180:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xWantedSize += heapSTRUCT_SIZE;
 181:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 182:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Ensure that blocks are always aligned to the required number of bytes. */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 6


 183:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
 184:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 185:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* Byte alignment required. */
 186:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 187:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 188:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 189:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 190:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
 191:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 192:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Blocks are stored in byte order - traverse the list from the start
 193:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			(smallest) block until one of adequate size is found. */
 194:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxPreviousBlock = &xStart;
 195:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 197:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 198:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxPreviousBlock = pxBlock;
 199:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 200:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 201:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 202:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* If we found the end marker then a block of adequate size was not found. */
 203:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			if( pxBlock != &xEnd )
 204:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 205:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* Return the memory space - jumping over the BlockLink_t structure
 206:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				at its start. */
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
 208:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 209:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* This block is being returned for use so must be taken out of the
 210:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				list of free blocks. */
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 212:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 213:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* If the block is larger than required it can be split into two. */
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 215:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 216:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* This block is to be split into two.  Create a new block
 217:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					following the number of bytes requested. The void cast is
 218:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					used to prevent byte alignment warnings from the compiler. */
 219:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 220:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 221:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* Calculate the sizes of two blocks split from the single
 222:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					block. */
 223:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 224:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 225:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 226:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* Insert the new block into the list of free blocks. */
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
 228:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 229:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 230:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				xFreeBytesRemaining -= pxBlock->xBlockSize;
 231:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 232:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 233:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 234:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		traceMALLOC( pvReturn, xWantedSize );
 235:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 236:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	( void ) xTaskResumeAll();
 237:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 238:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 239:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 7


 240:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( pvReturn == NULL )
 241:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 242:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			extern void vApplicationMallocFailedHook( void );
 243:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			vApplicationMallocFailedHook();
 244:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 245:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 246:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#endif
 247:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 248:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return pvReturn;
 249:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 250:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 251:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 252:FreeRTOS/Source/portable/MemMang/heap_2.c **** void vPortFree( void *pv )
 253:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 254:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 255:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxLink;
 256:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 257:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	if( pv != NULL )
 258:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 259:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 260:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		before it. */
 261:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		puc -= heapSTRUCT_SIZE;
 262:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 263:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* This unexpected casting is to keep some compilers from issuing
 264:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		byte alignment warnings. */
 265:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		pxLink = ( void * ) puc;
 266:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 267:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		vTaskSuspendAll();
 268:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 269:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Add this block to the list of free blocks. */
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 271:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 272:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 273:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 274:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		( void ) xTaskResumeAll();
 275:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 276:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 277:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 278:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 279:FreeRTOS/Source/portable/MemMang/heap_2.c **** size_t xPortGetFreeHeapSize( void )
 280:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 281:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 282:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 283:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 284:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 285:FreeRTOS/Source/portable/MemMang/heap_2.c **** void vPortInitialiseBlocks( void )
 286:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 287:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 288:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 289:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 290:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 291:FreeRTOS/Source/portable/MemMang/heap_2.c **** static void prvHeapInit( void )
 292:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 293:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxFirstFreeBlock;
 294:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *pucAlignedHeap;
 295:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 296:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 8


 297:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~
 298:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 299:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 300:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 301:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 302:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 303:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 304:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* xEnd is used to mark the end of the list of free blocks. */
 305:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 104              		.loc 1 305 0
 105 000e 42F2F875 		movw	r5, #10232	@ tmp146,
 106 0012 2749     		ldr	r1, .L22+4	@ tmp145,
 297:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 107              		.loc 1 297 0
 108 0014 03F11402 		add	r2, r3, #20	@ D.5131, tmp167,
 109 0018 22F00702 		bic	r2, r2, #7	@ pxFirstFreeBlock, D.5131,
 110              	.LVL2:
 111              		.loc 1 305 0
 112 001c C1F82056 		str	r5, [r1, #1568]	@ tmp146, xEnd.xBlockSize
 306:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 113              		.loc 1 306 0
 114 0020 C1F81C06 		str	r0, [r1, #1564]	@ xHeapHasBeenInitialised, xEnd.pxNextFreeBlock
 115              	.LVL3:
 307:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 308:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* To start with there is a single free block that is sized to take up the
 309:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	entire heap space. */
 310:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 311:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 312:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 116              		.loc 1 312 0
 117 0024 01F21C61 		addw	r1, r1, #1564	@ tmp151, tmp145,
 301:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 118              		.loc 1 301 0
 119 0028 1A60     		str	r2, [r3]	@ pxFirstFreeBlock, xStart.pxNextFreeBlock
 311:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 120              		.loc 1 311 0
 121 002a 5560     		str	r5, [r2, #4]	@ tmp146, pxFirstFreeBlock_45->xBlockSize
 122              		.loc 1 312 0
 123 002c 1160     		str	r1, [r2]	@ tmp151, pxFirstFreeBlock_45->pxNextFreeBlock
 124              	.LBE6:
 125              	.LBE5:
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 126              		.loc 1 173 0
 127 002e 0122     		movs	r2, #1	@ tmp153,
 128              	.LVL4:
 129              	.LBB8:
 130              	.LBB7:
 302:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 131              		.loc 1 302 0
 132 0030 5860     		str	r0, [r3, #4]	@ xHeapHasBeenInitialised, xStart.xBlockSize
 133              	.LBE7:
 134              	.LBE8:
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 135              		.loc 1 173 0
 136 0032 9A60     		str	r2, [r3, #8]	@ tmp153, xHeapHasBeenInitialised
 137              	.LVL5:
 138              	.L2:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 9


 178:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 139              		.loc 1 178 0
 140 0034 2CB1     		cbz	r4, .L3	@ xWantedSize,
 180:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 141              		.loc 1 180 0
 142 0036 0834     		adds	r4, r4, #8	@ xWantedSize, xWantedSize,
 143              	.LVL6:
 183:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 144              		.loc 1 183 0
 145 0038 6207     		lsls	r2, r4, #29	@, xWantedSize,
 186:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 146              		.loc 1 186 0
 147 003a 1CBF     		itt	ne
 148 003c 24F00704 		bicne	r4, r4, #7	@ D.5129, xWantedSize,
 149              	.LVL7:
 150 0040 0834     		addne	r4, r4, #8	@ xWantedSize, D.5129,
 151              	.LVL8:
 152              	.L3:
 190:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 153              		.loc 1 190 0
 154 0042 42F2F672 		movw	r2, #10230	@ tmp156,
 155 0046 611E     		subs	r1, r4, #1	@ D.5129, xWantedSize,
 156 0048 9142     		cmp	r1, r2	@ D.5129, tmp156
 157 004a 29D8     		bhi	.L11	@,
 158              	.LVL9:
 195:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 159              		.loc 1 195 0
 160 004c 1B68     		ldr	r3, [r3]	@ pxPreviousBlock, xStart.pxNextFreeBlock
 161              	.LVL10:
 194:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 162              		.loc 1 194 0
 163 004e 1749     		ldr	r1, .L22	@ pxPreviousBlock,
 164              	.LVL11:
 165              	.L7:
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 166              		.loc 1 196 0
 167 0050 5A68     		ldr	r2, [r3, #4]	@ D.5129, pxPreviousBlock_2->xBlockSize
 168 0052 A242     		cmp	r2, r4	@ D.5129, xWantedSize
 169 0054 03D3     		bcc	.L5	@,
 170              	.L8:
 203:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 171              		.loc 1 203 0
 172 0056 1748     		ldr	r0, .L22+8	@ tmp159,
 173 0058 8342     		cmp	r3, r0	@ pxPreviousBlock, tmp159
 174 005a 06D1     		bne	.L6	@,
 175 005c 20E0     		b	.L11	@
 176              	.L5:
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 177              		.loc 1 196 0 discriminator 1
 178 005e 1868     		ldr	r0, [r3]	@ pxPreviousBlock, pxPreviousBlock_2->pxNextFreeBlock
 179 0060 0028     		cmp	r0, #0	@ pxPreviousBlock
 180 0062 F8D0     		beq	.L8	@
 181 0064 1946     		mov	r1, r3	@ pxPreviousBlock, pxPreviousBlock
 182 0066 0346     		mov	r3, r0	@ pxPreviousBlock, pxPreviousBlock
 183              	.LVL12:
 184 0068 F2E7     		b	.L7	@
 185              	.LVL13:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 10


 186              	.L6:
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 187              		.loc 1 207 0
 188 006a 0D68     		ldr	r5, [r1]	@ pxPreviousBlock_74->pxNextFreeBlock, pxPreviousBlock_74->pxNextFreeBlock
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 189              		.loc 1 211 0
 190 006c 1868     		ldr	r0, [r3]	@ D.5130, pxPreviousBlock_75->pxNextFreeBlock
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 191              		.loc 1 214 0
 192 006e 121B     		subs	r2, r2, r4	@ D.5129, D.5129, xWantedSize
 193 0070 102A     		cmp	r2, #16	@ D.5129,
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 194              		.loc 1 207 0
 195 0072 05F10805 		add	r5, r5, #8	@ pvReturn, pxPreviousBlock_74->pxNextFreeBlock,
 196              	.LVL14:
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 197              		.loc 1 211 0
 198 0076 0860     		str	r0, [r1]	@ D.5130, pxPreviousBlock_74->pxNextFreeBlock
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 199              		.loc 1 214 0
 200 0078 0CD9     		bls	.L9	@,
 219:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 201              		.loc 1 219 0
 202 007a 1919     		adds	r1, r3, r4	@ pxNewBlockLink, pxPreviousBlock, xWantedSize
 203              	.LVL15:
 223:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 204              		.loc 1 223 0
 205 007c 4A60     		str	r2, [r1, #4]	@ D.5129, pxNewBlockLink_29->xBlockSize
 224:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 206              		.loc 1 224 0
 207 007e 5C60     		str	r4, [r3, #4]	@ xWantedSize, pxPreviousBlock_75->xBlockSize
 208              	.LBB9:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 209              		.loc 1 227 0
 210 0080 4C68     		ldr	r4, [r1, #4]	@ xBlockSize, pxNewBlockLink_29->xBlockSize
 211              	.LVL16:
 212 0082 0A4A     		ldr	r2, .L22	@ pxIterator,
 213              	.LVL17:
 214              	.L10:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 215              		.loc 1 227 0 is_stmt 0 discriminator 1
 216 0084 1068     		ldr	r0, [r2]	@ pxIterator, pxIterator_5->pxNextFreeBlock
 217 0086 4668     		ldr	r6, [r0, #4]	@ D.5129, MEM[(struct A_BLOCK_LINK *)pxIterator_33].xBlockSize
 218 0088 A642     		cmp	r6, r4	@ D.5129, xBlockSize
 219 008a 01D2     		bcs	.L21	@,
 220 008c 0246     		mov	r2, r0	@ pxIterator, pxIterator
 221              	.LVL18:
 222 008e F9E7     		b	.L10	@
 223              	.LVL19:
 224              	.L21:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 225              		.loc 1 227 0
 226 0090 0860     		str	r0, [r1]	@ pxIterator, pxNewBlockLink_29->pxNextFreeBlock
 227 0092 1160     		str	r1, [r2]	@ pxNewBlockLink, pxIterator_60->pxNextFreeBlock
 228              	.LVL20:
 229              	.L9:
 230              	.LBE9:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 11


 230:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 231              		.loc 1 230 0 is_stmt 1
 232 0094 0849     		ldr	r1, .L22+12	@ tmp161,
 233 0096 5B68     		ldr	r3, [r3, #4]	@ pxPreviousBlock_75->xBlockSize, pxPreviousBlock_75->xBlockSize
 234              	.LVL21:
 235 0098 0A68     		ldr	r2, [r1]	@ xFreeBytesRemaining, xFreeBytesRemaining
 236 009a D21A     		subs	r2, r2, r3	@ D.5129, xFreeBytesRemaining, pxPreviousBlock_75->xBlockSize
 237 009c 0A60     		str	r2, [r1]	@ D.5129, xFreeBytesRemaining
 238 009e 00E0     		b	.L4	@
 239              	.LVL22:
 240              	.L11:
 164:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 241              		.loc 1 164 0
 242 00a0 0025     		movs	r5, #0	@ pvReturn,
 243              	.LVL23:
 244              	.L4:
 236:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 245              		.loc 1 236 0
 246 00a2 FFF7FEFF 		bl	xTaskResumeAll	@
 247              	.LVL24:
 249:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 248              		.loc 1 249 0
 249 00a6 2846     		mov	r0, r5	@, pvReturn
 250 00a8 70BD     		pop	{r4, r5, r6, pc}	@
 251              	.LVL25:
 252              	.L23:
 253 00aa 00BF     		.align	2
 254              	.L22:
 255 00ac 00000000 		.word	.LANCHOR0
 256 00b0 F0210000 		.word	.LANCHOR1
 257 00b4 0C280000 		.word	.LANCHOR1+1564
 258 00b8 00000000 		.word	.LANCHOR2
 259              		.cfi_endproc
 260              	.LFE5:
 261              		.size	pvPortMalloc, .-pvPortMalloc
 262              		.align	1
 263              		.global	vPortFree
 264              		.thumb
 265              		.thumb_func
 266              		.type	vPortFree, %function
 267              	vPortFree:
 268              	.LFB6:
 253:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 269              		.loc 1 253 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL26:
 274 00bc 38B5     		push	{r3, r4, r5, lr}	@
 275              	.LCFI1:
 276              		.cfi_def_cfa_offset 16
 277              		.cfi_offset 3, -16
 278              		.cfi_offset 4, -12
 279              		.cfi_offset 5, -8
 280              		.cfi_offset 14, -4
 257:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 281              		.loc 1 257 0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 12


 282 00be 0446     		mov	r4, r0	@ pv, pv
 283 00c0 B8B1     		cbz	r0, .L24	@ pv,
 261:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 284              		.loc 1 261 0
 285 00c2 A0F10805 		sub	r5, r0, #8	@ pxLink, pv,
 286              	.LVL27:
 267:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 287              		.loc 1 267 0
 288 00c6 FFF7FEFF 		bl	vTaskSuspendAll	@
 289              	.LVL28:
 290              	.LBB10:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 291              		.loc 1 270 0
 292 00ca 54F8043C 		ldr	r3, [r4, #-4]	@ xBlockSize, MEM[(struct BlockLink_t *)pv_3(D) + 4294967288B].xBlockSize
 293              	.LVL29:
 294 00ce 094A     		ldr	r2, .L29	@ pxIterator,
 295              	.LVL30:
 296              	.L26:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 297              		.loc 1 270 0 is_stmt 0 discriminator 1
 298 00d0 1168     		ldr	r1, [r2]	@ pxIterator, pxIterator_1->pxNextFreeBlock
 299 00d2 4868     		ldr	r0, [r1, #4]	@ D.5134, MEM[(struct A_BLOCK_LINK *)pxIterator_8].xBlockSize
 300 00d4 9842     		cmp	r0, r3	@ D.5134, xBlockSize
 301 00d6 01D2     		bcs	.L28	@,
 302 00d8 0A46     		mov	r2, r1	@ pxIterator, pxIterator
 303              	.LVL31:
 304 00da F9E7     		b	.L26	@
 305              	.LVL32:
 306              	.L28:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 307              		.loc 1 270 0
 308 00dc 44F8081C 		str	r1, [r4, #-8]	@ pxIterator, MEM[(struct BlockLink_t *)pv_3(D) + 4294967288B].pxNextFreeBlock
 309 00e0 1560     		str	r5, [r2]	@ pxLink, pxIterator_21->pxNextFreeBlock
 310              	.LBE10:
 271:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 311              		.loc 1 271 0 is_stmt 1
 312 00e2 054A     		ldr	r2, .L29+4	@ tmp119,
 313              	.LVL33:
 314 00e4 1168     		ldr	r1, [r2]	@ xFreeBytesRemaining, xFreeBytesRemaining
 315 00e6 0B44     		add	r3, r3, r1	@ D.5134, xFreeBytesRemaining
 316              	.LVL34:
 317 00e8 1360     		str	r3, [r2]	@ D.5134, xFreeBytesRemaining
 276:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 318              		.loc 1 276 0
 319 00ea BDE83840 		pop	{r3, r4, r5, lr}	@
 320              	.LCFI2:
 321              		.cfi_remember_state
 322              		.cfi_restore 14
 323              		.cfi_restore 5
 324              		.cfi_restore 4
 325              		.cfi_restore 3
 326              		.cfi_def_cfa_offset 0
 327              	.LVL35:
 274:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 328              		.loc 1 274 0
 329 00ee FFF7FEBF 		b	xTaskResumeAll	@
 330              	.LVL36:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 13


 331              	.L24:
 332              	.LCFI3:
 333              		.cfi_restore_state
 334 00f2 38BD     		pop	{r3, r4, r5, pc}	@
 335              	.L30:
 336              		.align	2
 337              	.L29:
 338 00f4 00000000 		.word	.LANCHOR0
 339 00f8 00000000 		.word	.LANCHOR2
 340              		.cfi_endproc
 341              	.LFE6:
 342              		.size	vPortFree, .-vPortFree
 343              		.align	1
 344              		.global	xPortGetFreeHeapSize
 345              		.thumb
 346              		.thumb_func
 347              		.type	xPortGetFreeHeapSize, %function
 348              	xPortGetFreeHeapSize:
 349              	.LFB7:
 280:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 350              		.loc 1 280 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 282:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 355              		.loc 1 282 0
 356 00fc 014B     		ldr	r3, .L32	@ tmp113,
 357 00fe 1868     		ldr	r0, [r3]	@, xFreeBytesRemaining
 358 0100 7047     		bx	lr	@
 359              	.L33:
 360 0102 00BF     		.align	2
 361              	.L32:
 362 0104 00000000 		.word	.LANCHOR2
 363              		.cfi_endproc
 364              	.LFE7:
 365              		.size	xPortGetFreeHeapSize, .-xPortGetFreeHeapSize
 366              		.align	1
 367              		.global	vPortInitialiseBlocks
 368              		.thumb
 369              		.thumb_func
 370              		.type	vPortInitialiseBlocks, %function
 371              	vPortInitialiseBlocks:
 372              	.LFB8:
 286:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 373              		.loc 1 286 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0108 7047     		bx	lr	@
 379              		.cfi_endproc
 380              	.LFE8:
 381              		.size	vPortInitialiseBlocks, .-vPortInitialiseBlocks
 382              		.data
 383              		.align	2
 384              		.set	.LANCHOR2,. + 0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 14


 385              		.type	xFreeBytesRemaining, %object
 386              		.size	xFreeBytesRemaining, 4
 387              	xFreeBytesRemaining:
 388 0000 F8270000 		.word	10232
 389              		.bss
 390              		.align	2
 391              		.set	.LANCHOR0,. + 0
 392              		.set	.LANCHOR1,. + 8688
 393              		.type	xStart, %object
 394              		.size	xStart, 8
 395              	xStart:
 396 0000 00000000 		.space	8
 396      00000000 
 397              		.type	xHeapHasBeenInitialised.5042, %object
 398              		.size	xHeapHasBeenInitialised.5042, 4
 399              	xHeapHasBeenInitialised.5042:
 400 0008 00000000 		.space	4
 401              		.type	ucHeap, %object
 402              		.size	ucHeap, 10240
 403              	ucHeap:
 404 000c 00000000 		.space	10240
 404      00000000 
 404      00000000 
 404      00000000 
 404      00000000 
 405              		.type	xEnd, %object
 406              		.size	xEnd, 8
 407              	xEnd:
 408 280c 00000000 		.space	8
 408      00000000 
 409              		.text
 410              	.Letext0:
 411              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 412              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 413              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 414              		.file 5 "./FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h"
 415              		.file 6 "./FreeRTOS/Source/include/task.h"
 416 010a 00BF     		.section	.debug_info,"",%progbits
 417              	.Ldebug_info0:
 418 0000 5A030000 		.4byte	0x35a
 419 0004 0200     		.2byte	0x2
 420 0006 00000000 		.4byte	.Ldebug_abbrev0
 421 000a 04       		.byte	0x4
 422 000b 01       		.uleb128 0x1
 423 000c 29010000 		.4byte	.LASF37
 424 0010 01       		.byte	0x1
 425 0011 B6010000 		.4byte	.LASF38
 426 0015 48020000 		.4byte	.LASF39
 427 0019 00000000 		.4byte	.Ltext0
 428 001d 0A010000 		.4byte	.Letext0
 429 0021 00000000 		.4byte	.Ldebug_line0
 430 0025 02       		.uleb128 0x2
 431 0026 0A000000 		.4byte	.LASF2
 432 002a 02       		.byte	0x2
 433 002b D4       		.byte	0xd4
 434 002c 30000000 		.4byte	0x30
 435 0030 03       		.uleb128 0x3
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 15


 436 0031 04       		.byte	0x4
 437 0032 07       		.byte	0x7
 438 0033 0D020000 		.4byte	.LASF0
 439 0037 04       		.uleb128 0x4
 440 0038 04       		.byte	0x4
 441 0039 05       		.byte	0x5
 442 003a 696E7400 		.ascii	"int\000"
 443 003e 03       		.uleb128 0x3
 444 003f 01       		.byte	0x1
 445 0040 06       		.byte	0x6
 446 0041 F3020000 		.4byte	.LASF1
 447 0045 02       		.uleb128 0x2
 448 0046 00000000 		.4byte	.LASF3
 449 004a 03       		.byte	0x3
 450 004b 1D       		.byte	0x1d
 451 004c 50000000 		.4byte	0x50
 452 0050 03       		.uleb128 0x3
 453 0051 01       		.byte	0x1
 454 0052 08       		.byte	0x8
 455 0053 9E000000 		.4byte	.LASF4
 456 0057 03       		.uleb128 0x3
 457 0058 02       		.byte	0x2
 458 0059 05       		.byte	0x5
 459 005a BA020000 		.4byte	.LASF5
 460 005e 02       		.uleb128 0x2
 461 005f F9000000 		.4byte	.LASF6
 462 0063 03       		.byte	0x3
 463 0064 2B       		.byte	0x2b
 464 0065 69000000 		.4byte	0x69
 465 0069 03       		.uleb128 0x3
 466 006a 02       		.byte	0x2
 467 006b 07       		.byte	0x7
 468 006c C9000000 		.4byte	.LASF7
 469 0070 03       		.uleb128 0x3
 470 0071 04       		.byte	0x4
 471 0072 05       		.byte	0x5
 472 0073 EA020000 		.4byte	.LASF8
 473 0077 02       		.uleb128 0x2
 474 0078 1E010000 		.4byte	.LASF9
 475 007c 03       		.byte	0x3
 476 007d 41       		.byte	0x41
 477 007e 82000000 		.4byte	0x82
 478 0082 03       		.uleb128 0x3
 479 0083 04       		.byte	0x4
 480 0084 07       		.byte	0x7
 481 0085 B7000000 		.4byte	.LASF10
 482 0089 03       		.uleb128 0x3
 483 008a 08       		.byte	0x8
 484 008b 05       		.byte	0x5
 485 008c 81020000 		.4byte	.LASF11
 486 0090 03       		.uleb128 0x3
 487 0091 08       		.byte	0x8
 488 0092 07       		.byte	0x7
 489 0093 1A020000 		.4byte	.LASF12
 490 0097 03       		.uleb128 0x3
 491 0098 04       		.byte	0x4
 492 0099 07       		.byte	0x7
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 16


 493 009a 78020000 		.4byte	.LASF13
 494 009e 05       		.uleb128 0x5
 495 009f 04       		.byte	0x4
 496 00a0 03       		.uleb128 0x3
 497 00a1 01       		.byte	0x1
 498 00a2 08       		.byte	0x8
 499 00a3 9B020000 		.4byte	.LASF14
 500 00a7 02       		.uleb128 0x2
 501 00a8 31020000 		.4byte	.LASF15
 502 00ac 04       		.byte	0x4
 503 00ad 14       		.byte	0x14
 504 00ae 45000000 		.4byte	0x45
 505 00b2 02       		.uleb128 0x2
 506 00b3 C4020000 		.4byte	.LASF16
 507 00b7 04       		.byte	0x4
 508 00b8 1A       		.byte	0x1a
 509 00b9 5E000000 		.4byte	0x5e
 510 00bd 02       		.uleb128 0x2
 511 00be E1020000 		.4byte	.LASF17
 512 00c2 04       		.byte	0x4
 513 00c3 20       		.byte	0x20
 514 00c4 77000000 		.4byte	0x77
 515 00c8 02       		.uleb128 0x2
 516 00c9 0F030000 		.4byte	.LASF18
 517 00cd 05       		.byte	0x5
 518 00ce 62       		.byte	0x62
 519 00cf 70000000 		.4byte	0x70
 520 00d3 06       		.uleb128 0x6
 521 00d4 04       		.byte	0x4
 522 00d5 A7000000 		.4byte	0xa7
 523 00d9 07       		.uleb128 0x7
 524 00da 36000000 		.4byte	.LASF40
 525 00de 08       		.byte	0x8
 526 00df 01       		.byte	0x1
 527 00e0 73       		.byte	0x73
 528 00e1 02010000 		.4byte	0x102
 529 00e5 08       		.uleb128 0x8
 530 00e6 FF020000 		.4byte	.LASF19
 531 00ea 01       		.byte	0x1
 532 00eb 75       		.byte	0x75
 533 00ec 02010000 		.4byte	0x102
 534 00f0 02       		.byte	0x2
 535 00f1 23       		.byte	0x23
 536 00f2 00       		.uleb128 0
 537 00f3 08       		.uleb128 0x8
 538 00f4 AC000000 		.4byte	.LASF20
 539 00f8 01       		.byte	0x1
 540 00f9 76       		.byte	0x76
 541 00fa 25000000 		.4byte	0x25
 542 00fe 02       		.byte	0x2
 543 00ff 23       		.byte	0x23
 544 0100 04       		.uleb128 0x4
 545 0101 00       		.byte	0
 546 0102 06       		.uleb128 0x6
 547 0103 04       		.byte	0x4
 548 0104 D9000000 		.4byte	0xd9
 549 0108 02       		.uleb128 0x2
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 17


 550 0109 5E000000 		.4byte	.LASF21
 551 010d 01       		.byte	0x1
 552 010e 77       		.byte	0x77
 553 010f D9000000 		.4byte	0xd9
 554 0113 09       		.uleb128 0x9
 555 0114 43000000 		.4byte	.LASF41
 556 0118 01       		.byte	0x1
 557 0119 2301     		.2byte	0x123
 558 011b 01       		.byte	0x1
 559 011c 01       		.byte	0x1
 560 011d 3A010000 		.4byte	0x13a
 561 0121 0A       		.uleb128 0xa
 562 0122 86000000 		.4byte	.LASF22
 563 0126 01       		.byte	0x1
 564 0127 2501     		.2byte	0x125
 565 0129 3A010000 		.4byte	0x13a
 566 012d 0A       		.uleb128 0xa
 567 012e A0020000 		.4byte	.LASF23
 568 0132 01       		.byte	0x1
 569 0133 2601     		.2byte	0x126
 570 0135 D3000000 		.4byte	0xd3
 571 0139 00       		.byte	0
 572 013a 06       		.uleb128 0x6
 573 013b 04       		.byte	0x4
 574 013c 08010000 		.4byte	0x108
 575 0140 0B       		.uleb128 0xb
 576 0141 01       		.byte	0x1
 577 0142 79000000 		.4byte	.LASF42
 578 0146 01       		.byte	0x1
 579 0147 A0       		.byte	0xa0
 580 0148 01       		.byte	0x1
 581 0149 9E000000 		.4byte	0x9e
 582 014d 00000000 		.4byte	.LFB5
 583 0151 BC000000 		.4byte	.LFE5
 584 0155 00000000 		.4byte	.LLST0
 585 0159 01       		.byte	0x1
 586 015a 25020000 		.4byte	0x225
 587 015e 0C       		.uleb128 0xc
 588 015f 8F020000 		.4byte	.LASF30
 589 0163 01       		.byte	0x1
 590 0164 A0       		.byte	0xa0
 591 0165 25000000 		.4byte	0x25
 592 0169 20000000 		.4byte	.LLST1
 593 016d 0D       		.uleb128 0xd
 594 016e 6A000000 		.4byte	.LASF24
 595 0172 01       		.byte	0x1
 596 0173 A2       		.byte	0xa2
 597 0174 3A010000 		.4byte	0x13a
 598 0178 70000000 		.4byte	.LLST2
 599 017c 0D       		.uleb128 0xd
 600 017d 04010000 		.4byte	.LASF25
 601 0181 01       		.byte	0x1
 602 0182 A2       		.byte	0xa2
 603 0183 3A010000 		.4byte	0x13a
 604 0187 99000000 		.4byte	.LLST3
 605 018b 0D       		.uleb128 0xd
 606 018c 39020000 		.4byte	.LASF26
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 18


 607 0190 01       		.byte	0x1
 608 0191 A2       		.byte	0xa2
 609 0192 3A010000 		.4byte	0x13a
 610 0196 B1000000 		.4byte	.LLST4
 611 019a 0E       		.uleb128 0xe
 612 019b DC000000 		.4byte	.LASF27
 613 019f 01       		.byte	0x1
 614 01a0 A3       		.byte	0xa3
 615 01a1 C8000000 		.4byte	0xc8
 616 01a5 05       		.byte	0x5
 617 01a6 03       		.byte	0x3
 618 01a7 08000000 		.4byte	xHeapHasBeenInitialised.5042
 619 01ab 0D       		.uleb128 0xd
 620 01ac AD010000 		.4byte	.LASF28
 621 01b0 01       		.byte	0x1
 622 01b1 A4       		.byte	0xa4
 623 01b2 9E000000 		.4byte	0x9e
 624 01b6 C4000000 		.4byte	.LLST5
 625 01ba 0F       		.uleb128 0xf
 626 01bb 13010000 		.4byte	0x113
 627 01bf 0E000000 		.4byte	.LBB5
 628 01c3 00000000 		.4byte	.Ldebug_ranges0+0
 629 01c7 01       		.byte	0x1
 630 01c8 AC       		.byte	0xac
 631 01c9 E6010000 		.4byte	0x1e6
 632 01cd 10       		.uleb128 0x10
 633 01ce 00000000 		.4byte	.Ldebug_ranges0+0
 634 01d2 11       		.uleb128 0x11
 635 01d3 21010000 		.4byte	0x121
 636 01d7 05010000 		.4byte	.LLST6
 637 01db 11       		.uleb128 0x11
 638 01dc 2D010000 		.4byte	0x12d
 639 01e0 27010000 		.4byte	.LLST7
 640 01e4 00       		.byte	0
 641 01e5 00       		.byte	0
 642 01e6 12       		.uleb128 0x12
 643 01e7 80000000 		.4byte	.LBB9
 644 01eb 94000000 		.4byte	.LBE9
 645 01ef 12020000 		.4byte	0x212
 646 01f3 0D       		.uleb128 0xd
 647 01f4 AF020000 		.4byte	.LASF29
 648 01f8 01       		.byte	0x1
 649 01f9 E3       		.byte	0xe3
 650 01fa 3A010000 		.4byte	0x13a
 651 01fe 49010000 		.4byte	.LLST8
 652 0202 0D       		.uleb128 0xd
 653 0203 AC000000 		.4byte	.LASF20
 654 0207 01       		.byte	0x1
 655 0208 E3       		.byte	0xe3
 656 0209 25000000 		.4byte	0x25
 657 020d 77010000 		.4byte	.LLST9
 658 0211 00       		.byte	0
 659 0212 13       		.uleb128 0x13
 660 0213 08000000 		.4byte	.LVL1
 661 0217 43030000 		.4byte	0x343
 662 021b 13       		.uleb128 0x13
 663 021c A6000000 		.4byte	.LVL24
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 19


 664 0220 4E030000 		.4byte	0x34e
 665 0224 00       		.byte	0
 666 0225 14       		.uleb128 0x14
 667 0226 01       		.byte	0x1
 668 0227 14010000 		.4byte	.LASF43
 669 022b 01       		.byte	0x1
 670 022c FC       		.byte	0xfc
 671 022d 01       		.byte	0x1
 672 022e BC000000 		.4byte	.LFB6
 673 0232 FC000000 		.4byte	.LFE6
 674 0236 8A010000 		.4byte	.LLST10
 675 023a 01       		.byte	0x1
 676 023b AD020000 		.4byte	0x2ad
 677 023f 15       		.uleb128 0x15
 678 0240 707600   		.ascii	"pv\000"
 679 0243 01       		.byte	0x1
 680 0244 FC       		.byte	0xfc
 681 0245 9E000000 		.4byte	0x9e
 682 0249 C2010000 		.4byte	.LLST11
 683 024d 16       		.uleb128 0x16
 684 024e 70756300 		.ascii	"puc\000"
 685 0252 01       		.byte	0x1
 686 0253 FE       		.byte	0xfe
 687 0254 D3000000 		.4byte	0xd3
 688 0258 F9010000 		.4byte	.LLST12
 689 025c 0D       		.uleb128 0xd
 690 025d 72000000 		.4byte	.LASF31
 691 0261 01       		.byte	0x1
 692 0262 FF       		.byte	0xff
 693 0263 3A010000 		.4byte	0x13a
 694 0267 32020000 		.4byte	.LLST13
 695 026b 12       		.uleb128 0x12
 696 026c CA000000 		.4byte	.LBB10
 697 0270 E2000000 		.4byte	.LBE10
 698 0274 99020000 		.4byte	0x299
 699 0278 17       		.uleb128 0x17
 700 0279 AF020000 		.4byte	.LASF29
 701 027d 01       		.byte	0x1
 702 027e 0E01     		.2byte	0x10e
 703 0280 3A010000 		.4byte	0x13a
 704 0284 55020000 		.4byte	.LLST14
 705 0288 17       		.uleb128 0x17
 706 0289 AC000000 		.4byte	.LASF20
 707 028d 01       		.byte	0x1
 708 028e 0E01     		.2byte	0x10e
 709 0290 25000000 		.4byte	0x25
 710 0294 83020000 		.4byte	.LLST15
 711 0298 00       		.byte	0
 712 0299 13       		.uleb128 0x13
 713 029a CA000000 		.4byte	.LVL28
 714 029e 43030000 		.4byte	0x343
 715 02a2 18       		.uleb128 0x18
 716 02a3 F2000000 		.4byte	.LVL36
 717 02a7 01       		.byte	0x1
 718 02a8 4E030000 		.4byte	0x34e
 719 02ac 00       		.byte	0
 720 02ad 19       		.uleb128 0x19
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 20


 721 02ae 01       		.byte	0x1
 722 02af 21000000 		.4byte	.LASF44
 723 02b3 01       		.byte	0x1
 724 02b4 1701     		.2byte	0x117
 725 02b6 01       		.byte	0x1
 726 02b7 25000000 		.4byte	0x25
 727 02bb FC000000 		.4byte	.LFB7
 728 02bf 08010000 		.4byte	.LFE7
 729 02c3 02       		.byte	0x2
 730 02c4 7D       		.byte	0x7d
 731 02c5 00       		.sleb128 0
 732 02c6 01       		.byte	0x1
 733 02c7 1A       		.uleb128 0x1a
 734 02c8 01       		.byte	0x1
 735 02c9 F7010000 		.4byte	.LASF45
 736 02cd 01       		.byte	0x1
 737 02ce 1D01     		.2byte	0x11d
 738 02d0 01       		.byte	0x1
 739 02d1 08010000 		.4byte	.LFB8
 740 02d5 0A010000 		.4byte	.LFE8
 741 02d9 02       		.byte	0x2
 742 02da 7D       		.byte	0x7d
 743 02db 00       		.sleb128 0
 744 02dc 01       		.byte	0x1
 745 02dd 1B       		.uleb128 0x1b
 746 02de A7000000 		.4byte	0xa7
 747 02e2 EE020000 		.4byte	0x2ee
 748 02e6 1C       		.uleb128 0x1c
 749 02e7 97000000 		.4byte	0x97
 750 02eb FF27     		.2byte	0x27ff
 751 02ed 00       		.byte	0
 752 02ee 0E       		.uleb128 0xe
 753 02ef 97000000 		.4byte	.LASF32
 754 02f3 01       		.byte	0x1
 755 02f4 6D       		.byte	0x6d
 756 02f5 DD020000 		.4byte	0x2dd
 757 02f9 05       		.byte	0x5
 758 02fa 03       		.byte	0x3
 759 02fb 0C000000 		.4byte	ucHeap
 760 02ff 1D       		.uleb128 0x1d
 761 0300 E0010000 		.4byte	.LASF33
 762 0304 01       		.byte	0x1
 763 0305 7A       		.byte	0x7a
 764 0306 0B030000 		.4byte	0x30b
 765 030a 08       		.byte	0x8
 766 030b 1E       		.uleb128 0x1e
 767 030c B2000000 		.4byte	0xb2
 768 0310 0E       		.uleb128 0xe
 769 0311 F0010000 		.4byte	.LASF34
 770 0315 01       		.byte	0x1
 771 0316 7E       		.byte	0x7e
 772 0317 08010000 		.4byte	0x108
 773 031b 05       		.byte	0x5
 774 031c 03       		.byte	0x3
 775 031d 00000000 		.4byte	xStart
 776 0321 0E       		.uleb128 0xe
 777 0322 F4000000 		.4byte	.LASF35
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 21


 778 0326 01       		.byte	0x1
 779 0327 7E       		.byte	0x7e
 780 0328 08010000 		.4byte	0x108
 781 032c 05       		.byte	0x5
 782 032d 03       		.byte	0x3
 783 032e 0C280000 		.4byte	xEnd
 784 0332 0E       		.uleb128 0xe
 785 0333 CD020000 		.4byte	.LASF36
 786 0337 01       		.byte	0x1
 787 0338 82       		.byte	0x82
 788 0339 25000000 		.4byte	0x25
 789 033d 05       		.byte	0x5
 790 033e 03       		.byte	0x3
 791 033f 00000000 		.4byte	xFreeBytesRemaining
 792 0343 1F       		.uleb128 0x1f
 793 0344 01       		.byte	0x1
 794 0345 11000000 		.4byte	.LASF46
 795 0349 06       		.byte	0x6
 796 034a C304     		.2byte	0x4c3
 797 034c 01       		.byte	0x1
 798 034d 01       		.byte	0x1
 799 034e 20       		.uleb128 0x20
 800 034f 01       		.byte	0x1
 801 0350 4F000000 		.4byte	.LASF47
 802 0354 06       		.byte	0x6
 803 0355 F904     		.2byte	0x4f9
 804 0357 01       		.byte	0x1
 805 0358 C8000000 		.4byte	0xc8
 806 035c 01       		.byte	0x1
 807 035d 00       		.byte	0
 808              		.section	.debug_abbrev,"",%progbits
 809              	.Ldebug_abbrev0:
 810 0000 01       		.uleb128 0x1
 811 0001 11       		.uleb128 0x11
 812 0002 01       		.byte	0x1
 813 0003 25       		.uleb128 0x25
 814 0004 0E       		.uleb128 0xe
 815 0005 13       		.uleb128 0x13
 816 0006 0B       		.uleb128 0xb
 817 0007 03       		.uleb128 0x3
 818 0008 0E       		.uleb128 0xe
 819 0009 1B       		.uleb128 0x1b
 820 000a 0E       		.uleb128 0xe
 821 000b 11       		.uleb128 0x11
 822 000c 01       		.uleb128 0x1
 823 000d 12       		.uleb128 0x12
 824 000e 01       		.uleb128 0x1
 825 000f 10       		.uleb128 0x10
 826 0010 06       		.uleb128 0x6
 827 0011 00       		.byte	0
 828 0012 00       		.byte	0
 829 0013 02       		.uleb128 0x2
 830 0014 16       		.uleb128 0x16
 831 0015 00       		.byte	0
 832 0016 03       		.uleb128 0x3
 833 0017 0E       		.uleb128 0xe
 834 0018 3A       		.uleb128 0x3a
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 22


 835 0019 0B       		.uleb128 0xb
 836 001a 3B       		.uleb128 0x3b
 837 001b 0B       		.uleb128 0xb
 838 001c 49       		.uleb128 0x49
 839 001d 13       		.uleb128 0x13
 840 001e 00       		.byte	0
 841 001f 00       		.byte	0
 842 0020 03       		.uleb128 0x3
 843 0021 24       		.uleb128 0x24
 844 0022 00       		.byte	0
 845 0023 0B       		.uleb128 0xb
 846 0024 0B       		.uleb128 0xb
 847 0025 3E       		.uleb128 0x3e
 848 0026 0B       		.uleb128 0xb
 849 0027 03       		.uleb128 0x3
 850 0028 0E       		.uleb128 0xe
 851 0029 00       		.byte	0
 852 002a 00       		.byte	0
 853 002b 04       		.uleb128 0x4
 854 002c 24       		.uleb128 0x24
 855 002d 00       		.byte	0
 856 002e 0B       		.uleb128 0xb
 857 002f 0B       		.uleb128 0xb
 858 0030 3E       		.uleb128 0x3e
 859 0031 0B       		.uleb128 0xb
 860 0032 03       		.uleb128 0x3
 861 0033 08       		.uleb128 0x8
 862 0034 00       		.byte	0
 863 0035 00       		.byte	0
 864 0036 05       		.uleb128 0x5
 865 0037 0F       		.uleb128 0xf
 866 0038 00       		.byte	0
 867 0039 0B       		.uleb128 0xb
 868 003a 0B       		.uleb128 0xb
 869 003b 00       		.byte	0
 870 003c 00       		.byte	0
 871 003d 06       		.uleb128 0x6
 872 003e 0F       		.uleb128 0xf
 873 003f 00       		.byte	0
 874 0040 0B       		.uleb128 0xb
 875 0041 0B       		.uleb128 0xb
 876 0042 49       		.uleb128 0x49
 877 0043 13       		.uleb128 0x13
 878 0044 00       		.byte	0
 879 0045 00       		.byte	0
 880 0046 07       		.uleb128 0x7
 881 0047 13       		.uleb128 0x13
 882 0048 01       		.byte	0x1
 883 0049 03       		.uleb128 0x3
 884 004a 0E       		.uleb128 0xe
 885 004b 0B       		.uleb128 0xb
 886 004c 0B       		.uleb128 0xb
 887 004d 3A       		.uleb128 0x3a
 888 004e 0B       		.uleb128 0xb
 889 004f 3B       		.uleb128 0x3b
 890 0050 0B       		.uleb128 0xb
 891 0051 01       		.uleb128 0x1
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 23


 892 0052 13       		.uleb128 0x13
 893 0053 00       		.byte	0
 894 0054 00       		.byte	0
 895 0055 08       		.uleb128 0x8
 896 0056 0D       		.uleb128 0xd
 897 0057 00       		.byte	0
 898 0058 03       		.uleb128 0x3
 899 0059 0E       		.uleb128 0xe
 900 005a 3A       		.uleb128 0x3a
 901 005b 0B       		.uleb128 0xb
 902 005c 3B       		.uleb128 0x3b
 903 005d 0B       		.uleb128 0xb
 904 005e 49       		.uleb128 0x49
 905 005f 13       		.uleb128 0x13
 906 0060 38       		.uleb128 0x38
 907 0061 0A       		.uleb128 0xa
 908 0062 00       		.byte	0
 909 0063 00       		.byte	0
 910 0064 09       		.uleb128 0x9
 911 0065 2E       		.uleb128 0x2e
 912 0066 01       		.byte	0x1
 913 0067 03       		.uleb128 0x3
 914 0068 0E       		.uleb128 0xe
 915 0069 3A       		.uleb128 0x3a
 916 006a 0B       		.uleb128 0xb
 917 006b 3B       		.uleb128 0x3b
 918 006c 05       		.uleb128 0x5
 919 006d 27       		.uleb128 0x27
 920 006e 0C       		.uleb128 0xc
 921 006f 20       		.uleb128 0x20
 922 0070 0B       		.uleb128 0xb
 923 0071 01       		.uleb128 0x1
 924 0072 13       		.uleb128 0x13
 925 0073 00       		.byte	0
 926 0074 00       		.byte	0
 927 0075 0A       		.uleb128 0xa
 928 0076 34       		.uleb128 0x34
 929 0077 00       		.byte	0
 930 0078 03       		.uleb128 0x3
 931 0079 0E       		.uleb128 0xe
 932 007a 3A       		.uleb128 0x3a
 933 007b 0B       		.uleb128 0xb
 934 007c 3B       		.uleb128 0x3b
 935 007d 05       		.uleb128 0x5
 936 007e 49       		.uleb128 0x49
 937 007f 13       		.uleb128 0x13
 938 0080 00       		.byte	0
 939 0081 00       		.byte	0
 940 0082 0B       		.uleb128 0xb
 941 0083 2E       		.uleb128 0x2e
 942 0084 01       		.byte	0x1
 943 0085 3F       		.uleb128 0x3f
 944 0086 0C       		.uleb128 0xc
 945 0087 03       		.uleb128 0x3
 946 0088 0E       		.uleb128 0xe
 947 0089 3A       		.uleb128 0x3a
 948 008a 0B       		.uleb128 0xb
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 24


 949 008b 3B       		.uleb128 0x3b
 950 008c 0B       		.uleb128 0xb
 951 008d 27       		.uleb128 0x27
 952 008e 0C       		.uleb128 0xc
 953 008f 49       		.uleb128 0x49
 954 0090 13       		.uleb128 0x13
 955 0091 11       		.uleb128 0x11
 956 0092 01       		.uleb128 0x1
 957 0093 12       		.uleb128 0x12
 958 0094 01       		.uleb128 0x1
 959 0095 40       		.uleb128 0x40
 960 0096 06       		.uleb128 0x6
 961 0097 9742     		.uleb128 0x2117
 962 0099 0C       		.uleb128 0xc
 963 009a 01       		.uleb128 0x1
 964 009b 13       		.uleb128 0x13
 965 009c 00       		.byte	0
 966 009d 00       		.byte	0
 967 009e 0C       		.uleb128 0xc
 968 009f 05       		.uleb128 0x5
 969 00a0 00       		.byte	0
 970 00a1 03       		.uleb128 0x3
 971 00a2 0E       		.uleb128 0xe
 972 00a3 3A       		.uleb128 0x3a
 973 00a4 0B       		.uleb128 0xb
 974 00a5 3B       		.uleb128 0x3b
 975 00a6 0B       		.uleb128 0xb
 976 00a7 49       		.uleb128 0x49
 977 00a8 13       		.uleb128 0x13
 978 00a9 02       		.uleb128 0x2
 979 00aa 06       		.uleb128 0x6
 980 00ab 00       		.byte	0
 981 00ac 00       		.byte	0
 982 00ad 0D       		.uleb128 0xd
 983 00ae 34       		.uleb128 0x34
 984 00af 00       		.byte	0
 985 00b0 03       		.uleb128 0x3
 986 00b1 0E       		.uleb128 0xe
 987 00b2 3A       		.uleb128 0x3a
 988 00b3 0B       		.uleb128 0xb
 989 00b4 3B       		.uleb128 0x3b
 990 00b5 0B       		.uleb128 0xb
 991 00b6 49       		.uleb128 0x49
 992 00b7 13       		.uleb128 0x13
 993 00b8 02       		.uleb128 0x2
 994 00b9 06       		.uleb128 0x6
 995 00ba 00       		.byte	0
 996 00bb 00       		.byte	0
 997 00bc 0E       		.uleb128 0xe
 998 00bd 34       		.uleb128 0x34
 999 00be 00       		.byte	0
 1000 00bf 03       		.uleb128 0x3
 1001 00c0 0E       		.uleb128 0xe
 1002 00c1 3A       		.uleb128 0x3a
 1003 00c2 0B       		.uleb128 0xb
 1004 00c3 3B       		.uleb128 0x3b
 1005 00c4 0B       		.uleb128 0xb
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 25


 1006 00c5 49       		.uleb128 0x49
 1007 00c6 13       		.uleb128 0x13
 1008 00c7 02       		.uleb128 0x2
 1009 00c8 0A       		.uleb128 0xa
 1010 00c9 00       		.byte	0
 1011 00ca 00       		.byte	0
 1012 00cb 0F       		.uleb128 0xf
 1013 00cc 1D       		.uleb128 0x1d
 1014 00cd 01       		.byte	0x1
 1015 00ce 31       		.uleb128 0x31
 1016 00cf 13       		.uleb128 0x13
 1017 00d0 52       		.uleb128 0x52
 1018 00d1 01       		.uleb128 0x1
 1019 00d2 55       		.uleb128 0x55
 1020 00d3 06       		.uleb128 0x6
 1021 00d4 58       		.uleb128 0x58
 1022 00d5 0B       		.uleb128 0xb
 1023 00d6 59       		.uleb128 0x59
 1024 00d7 0B       		.uleb128 0xb
 1025 00d8 01       		.uleb128 0x1
 1026 00d9 13       		.uleb128 0x13
 1027 00da 00       		.byte	0
 1028 00db 00       		.byte	0
 1029 00dc 10       		.uleb128 0x10
 1030 00dd 0B       		.uleb128 0xb
 1031 00de 01       		.byte	0x1
 1032 00df 55       		.uleb128 0x55
 1033 00e0 06       		.uleb128 0x6
 1034 00e1 00       		.byte	0
 1035 00e2 00       		.byte	0
 1036 00e3 11       		.uleb128 0x11
 1037 00e4 34       		.uleb128 0x34
 1038 00e5 00       		.byte	0
 1039 00e6 31       		.uleb128 0x31
 1040 00e7 13       		.uleb128 0x13
 1041 00e8 02       		.uleb128 0x2
 1042 00e9 06       		.uleb128 0x6
 1043 00ea 00       		.byte	0
 1044 00eb 00       		.byte	0
 1045 00ec 12       		.uleb128 0x12
 1046 00ed 0B       		.uleb128 0xb
 1047 00ee 01       		.byte	0x1
 1048 00ef 11       		.uleb128 0x11
 1049 00f0 01       		.uleb128 0x1
 1050 00f1 12       		.uleb128 0x12
 1051 00f2 01       		.uleb128 0x1
 1052 00f3 01       		.uleb128 0x1
 1053 00f4 13       		.uleb128 0x13
 1054 00f5 00       		.byte	0
 1055 00f6 00       		.byte	0
 1056 00f7 13       		.uleb128 0x13
 1057 00f8 898201   		.uleb128 0x4109
 1058 00fb 00       		.byte	0
 1059 00fc 11       		.uleb128 0x11
 1060 00fd 01       		.uleb128 0x1
 1061 00fe 31       		.uleb128 0x31
 1062 00ff 13       		.uleb128 0x13
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 26


 1063 0100 00       		.byte	0
 1064 0101 00       		.byte	0
 1065 0102 14       		.uleb128 0x14
 1066 0103 2E       		.uleb128 0x2e
 1067 0104 01       		.byte	0x1
 1068 0105 3F       		.uleb128 0x3f
 1069 0106 0C       		.uleb128 0xc
 1070 0107 03       		.uleb128 0x3
 1071 0108 0E       		.uleb128 0xe
 1072 0109 3A       		.uleb128 0x3a
 1073 010a 0B       		.uleb128 0xb
 1074 010b 3B       		.uleb128 0x3b
 1075 010c 0B       		.uleb128 0xb
 1076 010d 27       		.uleb128 0x27
 1077 010e 0C       		.uleb128 0xc
 1078 010f 11       		.uleb128 0x11
 1079 0110 01       		.uleb128 0x1
 1080 0111 12       		.uleb128 0x12
 1081 0112 01       		.uleb128 0x1
 1082 0113 40       		.uleb128 0x40
 1083 0114 06       		.uleb128 0x6
 1084 0115 9742     		.uleb128 0x2117
 1085 0117 0C       		.uleb128 0xc
 1086 0118 01       		.uleb128 0x1
 1087 0119 13       		.uleb128 0x13
 1088 011a 00       		.byte	0
 1089 011b 00       		.byte	0
 1090 011c 15       		.uleb128 0x15
 1091 011d 05       		.uleb128 0x5
 1092 011e 00       		.byte	0
 1093 011f 03       		.uleb128 0x3
 1094 0120 08       		.uleb128 0x8
 1095 0121 3A       		.uleb128 0x3a
 1096 0122 0B       		.uleb128 0xb
 1097 0123 3B       		.uleb128 0x3b
 1098 0124 0B       		.uleb128 0xb
 1099 0125 49       		.uleb128 0x49
 1100 0126 13       		.uleb128 0x13
 1101 0127 02       		.uleb128 0x2
 1102 0128 06       		.uleb128 0x6
 1103 0129 00       		.byte	0
 1104 012a 00       		.byte	0
 1105 012b 16       		.uleb128 0x16
 1106 012c 34       		.uleb128 0x34
 1107 012d 00       		.byte	0
 1108 012e 03       		.uleb128 0x3
 1109 012f 08       		.uleb128 0x8
 1110 0130 3A       		.uleb128 0x3a
 1111 0131 0B       		.uleb128 0xb
 1112 0132 3B       		.uleb128 0x3b
 1113 0133 0B       		.uleb128 0xb
 1114 0134 49       		.uleb128 0x49
 1115 0135 13       		.uleb128 0x13
 1116 0136 02       		.uleb128 0x2
 1117 0137 06       		.uleb128 0x6
 1118 0138 00       		.byte	0
 1119 0139 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 27


 1120 013a 17       		.uleb128 0x17
 1121 013b 34       		.uleb128 0x34
 1122 013c 00       		.byte	0
 1123 013d 03       		.uleb128 0x3
 1124 013e 0E       		.uleb128 0xe
 1125 013f 3A       		.uleb128 0x3a
 1126 0140 0B       		.uleb128 0xb
 1127 0141 3B       		.uleb128 0x3b
 1128 0142 05       		.uleb128 0x5
 1129 0143 49       		.uleb128 0x49
 1130 0144 13       		.uleb128 0x13
 1131 0145 02       		.uleb128 0x2
 1132 0146 06       		.uleb128 0x6
 1133 0147 00       		.byte	0
 1134 0148 00       		.byte	0
 1135 0149 18       		.uleb128 0x18
 1136 014a 898201   		.uleb128 0x4109
 1137 014d 00       		.byte	0
 1138 014e 11       		.uleb128 0x11
 1139 014f 01       		.uleb128 0x1
 1140 0150 9542     		.uleb128 0x2115
 1141 0152 0C       		.uleb128 0xc
 1142 0153 31       		.uleb128 0x31
 1143 0154 13       		.uleb128 0x13
 1144 0155 00       		.byte	0
 1145 0156 00       		.byte	0
 1146 0157 19       		.uleb128 0x19
 1147 0158 2E       		.uleb128 0x2e
 1148 0159 00       		.byte	0
 1149 015a 3F       		.uleb128 0x3f
 1150 015b 0C       		.uleb128 0xc
 1151 015c 03       		.uleb128 0x3
 1152 015d 0E       		.uleb128 0xe
 1153 015e 3A       		.uleb128 0x3a
 1154 015f 0B       		.uleb128 0xb
 1155 0160 3B       		.uleb128 0x3b
 1156 0161 05       		.uleb128 0x5
 1157 0162 27       		.uleb128 0x27
 1158 0163 0C       		.uleb128 0xc
 1159 0164 49       		.uleb128 0x49
 1160 0165 13       		.uleb128 0x13
 1161 0166 11       		.uleb128 0x11
 1162 0167 01       		.uleb128 0x1
 1163 0168 12       		.uleb128 0x12
 1164 0169 01       		.uleb128 0x1
 1165 016a 40       		.uleb128 0x40
 1166 016b 0A       		.uleb128 0xa
 1167 016c 9742     		.uleb128 0x2117
 1168 016e 0C       		.uleb128 0xc
 1169 016f 00       		.byte	0
 1170 0170 00       		.byte	0
 1171 0171 1A       		.uleb128 0x1a
 1172 0172 2E       		.uleb128 0x2e
 1173 0173 00       		.byte	0
 1174 0174 3F       		.uleb128 0x3f
 1175 0175 0C       		.uleb128 0xc
 1176 0176 03       		.uleb128 0x3
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 28


 1177 0177 0E       		.uleb128 0xe
 1178 0178 3A       		.uleb128 0x3a
 1179 0179 0B       		.uleb128 0xb
 1180 017a 3B       		.uleb128 0x3b
 1181 017b 05       		.uleb128 0x5
 1182 017c 27       		.uleb128 0x27
 1183 017d 0C       		.uleb128 0xc
 1184 017e 11       		.uleb128 0x11
 1185 017f 01       		.uleb128 0x1
 1186 0180 12       		.uleb128 0x12
 1187 0181 01       		.uleb128 0x1
 1188 0182 40       		.uleb128 0x40
 1189 0183 0A       		.uleb128 0xa
 1190 0184 9742     		.uleb128 0x2117
 1191 0186 0C       		.uleb128 0xc
 1192 0187 00       		.byte	0
 1193 0188 00       		.byte	0
 1194 0189 1B       		.uleb128 0x1b
 1195 018a 01       		.uleb128 0x1
 1196 018b 01       		.byte	0x1
 1197 018c 49       		.uleb128 0x49
 1198 018d 13       		.uleb128 0x13
 1199 018e 01       		.uleb128 0x1
 1200 018f 13       		.uleb128 0x13
 1201 0190 00       		.byte	0
 1202 0191 00       		.byte	0
 1203 0192 1C       		.uleb128 0x1c
 1204 0193 21       		.uleb128 0x21
 1205 0194 00       		.byte	0
 1206 0195 49       		.uleb128 0x49
 1207 0196 13       		.uleb128 0x13
 1208 0197 2F       		.uleb128 0x2f
 1209 0198 05       		.uleb128 0x5
 1210 0199 00       		.byte	0
 1211 019a 00       		.byte	0
 1212 019b 1D       		.uleb128 0x1d
 1213 019c 34       		.uleb128 0x34
 1214 019d 00       		.byte	0
 1215 019e 03       		.uleb128 0x3
 1216 019f 0E       		.uleb128 0xe
 1217 01a0 3A       		.uleb128 0x3a
 1218 01a1 0B       		.uleb128 0xb
 1219 01a2 3B       		.uleb128 0x3b
 1220 01a3 0B       		.uleb128 0xb
 1221 01a4 49       		.uleb128 0x49
 1222 01a5 13       		.uleb128 0x13
 1223 01a6 1C       		.uleb128 0x1c
 1224 01a7 0B       		.uleb128 0xb
 1225 01a8 00       		.byte	0
 1226 01a9 00       		.byte	0
 1227 01aa 1E       		.uleb128 0x1e
 1228 01ab 26       		.uleb128 0x26
 1229 01ac 00       		.byte	0
 1230 01ad 49       		.uleb128 0x49
 1231 01ae 13       		.uleb128 0x13
 1232 01af 00       		.byte	0
 1233 01b0 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 29


 1234 01b1 1F       		.uleb128 0x1f
 1235 01b2 2E       		.uleb128 0x2e
 1236 01b3 00       		.byte	0
 1237 01b4 3F       		.uleb128 0x3f
 1238 01b5 0C       		.uleb128 0xc
 1239 01b6 03       		.uleb128 0x3
 1240 01b7 0E       		.uleb128 0xe
 1241 01b8 3A       		.uleb128 0x3a
 1242 01b9 0B       		.uleb128 0xb
 1243 01ba 3B       		.uleb128 0x3b
 1244 01bb 05       		.uleb128 0x5
 1245 01bc 27       		.uleb128 0x27
 1246 01bd 0C       		.uleb128 0xc
 1247 01be 3C       		.uleb128 0x3c
 1248 01bf 0C       		.uleb128 0xc
 1249 01c0 00       		.byte	0
 1250 01c1 00       		.byte	0
 1251 01c2 20       		.uleb128 0x20
 1252 01c3 2E       		.uleb128 0x2e
 1253 01c4 00       		.byte	0
 1254 01c5 3F       		.uleb128 0x3f
 1255 01c6 0C       		.uleb128 0xc
 1256 01c7 03       		.uleb128 0x3
 1257 01c8 0E       		.uleb128 0xe
 1258 01c9 3A       		.uleb128 0x3a
 1259 01ca 0B       		.uleb128 0xb
 1260 01cb 3B       		.uleb128 0x3b
 1261 01cc 05       		.uleb128 0x5
 1262 01cd 27       		.uleb128 0x27
 1263 01ce 0C       		.uleb128 0xc
 1264 01cf 49       		.uleb128 0x49
 1265 01d0 13       		.uleb128 0x13
 1266 01d1 3C       		.uleb128 0x3c
 1267 01d2 0C       		.uleb128 0xc
 1268 01d3 00       		.byte	0
 1269 01d4 00       		.byte	0
 1270 01d5 00       		.byte	0
 1271              		.section	.debug_loc,"",%progbits
 1272              	.Ldebug_loc0:
 1273              	.LLST0:
 1274 0000 00000000 		.4byte	.LFB5-.Ltext0
 1275 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1276 0008 0200     		.2byte	0x2
 1277 000a 7D       		.byte	0x7d
 1278 000b 00       		.sleb128 0
 1279 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1280 0010 BC000000 		.4byte	.LFE5-.Ltext0
 1281 0014 0200     		.2byte	0x2
 1282 0016 7D       		.byte	0x7d
 1283 0017 10       		.sleb128 16
 1284 0018 00000000 		.4byte	0
 1285 001c 00000000 		.4byte	0
 1286              	.LLST1:
 1287 0020 00000000 		.4byte	.LVL0-.Ltext0
 1288 0024 07000000 		.4byte	.LVL1-1-.Ltext0
 1289 0028 0100     		.2byte	0x1
 1290 002a 50       		.byte	0x50
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 30


 1291 002b 07000000 		.4byte	.LVL1-1-.Ltext0
 1292 002f 40000000 		.4byte	.LVL7-.Ltext0
 1293 0033 0100     		.2byte	0x1
 1294 0035 54       		.byte	0x54
 1295 0036 40000000 		.4byte	.LVL7-.Ltext0
 1296 003a 42000000 		.4byte	.LVL8-.Ltext0
 1297 003e 0600     		.2byte	0x6
 1298 0040 F3       		.byte	0xf3
 1299 0041 01       		.uleb128 0x1
 1300 0042 50       		.byte	0x50
 1301 0043 23       		.byte	0x23
 1302 0044 08       		.uleb128 0x8
 1303 0045 9F       		.byte	0x9f
 1304 0046 42000000 		.4byte	.LVL8-.Ltext0
 1305 004a 82000000 		.4byte	.LVL16-.Ltext0
 1306 004e 0100     		.2byte	0x1
 1307 0050 54       		.byte	0x54
 1308 0051 82000000 		.4byte	.LVL16-.Ltext0
 1309 0055 94000000 		.4byte	.LVL20-.Ltext0
 1310 0059 0200     		.2byte	0x2
 1311 005b 73       		.byte	0x73
 1312 005c 04       		.sleb128 4
 1313 005d A0000000 		.4byte	.LVL22-.Ltext0
 1314 0061 A2000000 		.4byte	.LVL23-.Ltext0
 1315 0065 0100     		.2byte	0x1
 1316 0067 54       		.byte	0x54
 1317 0068 00000000 		.4byte	0
 1318 006c 00000000 		.4byte	0
 1319              	.LLST2:
 1320 0070 4E000000 		.4byte	.LVL10-.Ltext0
 1321 0074 68000000 		.4byte	.LVL12-.Ltext0
 1322 0078 0100     		.2byte	0x1
 1323 007a 53       		.byte	0x53
 1324 007b 68000000 		.4byte	.LVL12-.Ltext0
 1325 007f 6A000000 		.4byte	.LVL13-.Ltext0
 1326 0083 0100     		.2byte	0x1
 1327 0085 51       		.byte	0x51
 1328 0086 6A000000 		.4byte	.LVL13-.Ltext0
 1329 008a 98000000 		.4byte	.LVL21-.Ltext0
 1330 008e 0100     		.2byte	0x1
 1331 0090 53       		.byte	0x53
 1332 0091 00000000 		.4byte	0
 1333 0095 00000000 		.4byte	0
 1334              	.LLST3:
 1335 0099 4C000000 		.4byte	.LVL9-.Ltext0
 1336 009d 50000000 		.4byte	.LVL11-.Ltext0
 1337 00a1 0600     		.2byte	0x6
 1338 00a3 03       		.byte	0x3
 1339 00a4 00000000 		.4byte	xStart
 1340 00a8 9F       		.byte	0x9f
 1341 00a9 00000000 		.4byte	0
 1342 00ad 00000000 		.4byte	0
 1343              	.LLST4:
 1344 00b1 7C000000 		.4byte	.LVL15-.Ltext0
 1345 00b5 94000000 		.4byte	.LVL20-.Ltext0
 1346 00b9 0100     		.2byte	0x1
 1347 00bb 51       		.byte	0x51
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 31


 1348 00bc 00000000 		.4byte	0
 1349 00c0 00000000 		.4byte	0
 1350              	.LLST5:
 1351 00c4 00000000 		.4byte	.LVL0-.Ltext0
 1352 00c8 76000000 		.4byte	.LVL14-.Ltext0
 1353 00cc 0200     		.2byte	0x2
 1354 00ce 30       		.byte	0x30
 1355 00cf 9F       		.byte	0x9f
 1356 00d0 76000000 		.4byte	.LVL14-.Ltext0
 1357 00d4 A0000000 		.4byte	.LVL22-.Ltext0
 1358 00d8 0100     		.2byte	0x1
 1359 00da 55       		.byte	0x55
 1360 00db A0000000 		.4byte	.LVL22-.Ltext0
 1361 00df A2000000 		.4byte	.LVL23-.Ltext0
 1362 00e3 0200     		.2byte	0x2
 1363 00e5 30       		.byte	0x30
 1364 00e6 9F       		.byte	0x9f
 1365 00e7 A2000000 		.4byte	.LVL23-.Ltext0
 1366 00eb AA000000 		.4byte	.LVL25-.Ltext0
 1367 00ef 0100     		.2byte	0x1
 1368 00f1 55       		.byte	0x55
 1369 00f2 AA000000 		.4byte	.LVL25-.Ltext0
 1370 00f6 BC000000 		.4byte	.LFE5-.Ltext0
 1371 00fa 0100     		.2byte	0x1
 1372 00fc 50       		.byte	0x50
 1373 00fd 00000000 		.4byte	0
 1374 0101 00000000 		.4byte	0
 1375              	.LLST6:
 1376 0105 24000000 		.4byte	.LVL3-.Ltext0
 1377 0109 30000000 		.4byte	.LVL4-.Ltext0
 1378 010d 0100     		.2byte	0x1
 1379 010f 52       		.byte	0x52
 1380 0110 30000000 		.4byte	.LVL4-.Ltext0
 1381 0114 34000000 		.4byte	.LVL5-.Ltext0
 1382 0118 0500     		.2byte	0x5
 1383 011a 03       		.byte	0x3
 1384 011b 00000000 		.4byte	xStart
 1385 011f 00000000 		.4byte	0
 1386 0123 00000000 		.4byte	0
 1387              	.LLST7:
 1388 0127 1C000000 		.4byte	.LVL2-.Ltext0
 1389 012b 30000000 		.4byte	.LVL4-.Ltext0
 1390 012f 0100     		.2byte	0x1
 1391 0131 52       		.byte	0x52
 1392 0132 30000000 		.4byte	.LVL4-.Ltext0
 1393 0136 34000000 		.4byte	.LVL5-.Ltext0
 1394 013a 0500     		.2byte	0x5
 1395 013c 03       		.byte	0x3
 1396 013d 00000000 		.4byte	xStart
 1397 0141 00000000 		.4byte	0
 1398 0145 00000000 		.4byte	0
 1399              	.LLST8:
 1400 0149 82000000 		.4byte	.LVL16-.Ltext0
 1401 014d 84000000 		.4byte	.LVL17-.Ltext0
 1402 0151 0600     		.2byte	0x6
 1403 0153 03       		.byte	0x3
 1404 0154 00000000 		.4byte	xStart
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 32


 1405 0158 9F       		.byte	0x9f
 1406 0159 84000000 		.4byte	.LVL17-.Ltext0
 1407 015d 8E000000 		.4byte	.LVL18-.Ltext0
 1408 0161 0100     		.2byte	0x1
 1409 0163 52       		.byte	0x52
 1410 0164 90000000 		.4byte	.LVL19-.Ltext0
 1411 0168 94000000 		.4byte	.LVL20-.Ltext0
 1412 016c 0100     		.2byte	0x1
 1413 016e 52       		.byte	0x52
 1414 016f 00000000 		.4byte	0
 1415 0173 00000000 		.4byte	0
 1416              	.LLST9:
 1417 0177 82000000 		.4byte	.LVL16-.Ltext0
 1418 017b 94000000 		.4byte	.LVL20-.Ltext0
 1419 017f 0100     		.2byte	0x1
 1420 0181 54       		.byte	0x54
 1421 0182 00000000 		.4byte	0
 1422 0186 00000000 		.4byte	0
 1423              	.LLST10:
 1424 018a BC000000 		.4byte	.LFB6-.Ltext0
 1425 018e BE000000 		.4byte	.LCFI1-.Ltext0
 1426 0192 0200     		.2byte	0x2
 1427 0194 7D       		.byte	0x7d
 1428 0195 00       		.sleb128 0
 1429 0196 BE000000 		.4byte	.LCFI1-.Ltext0
 1430 019a EE000000 		.4byte	.LCFI2-.Ltext0
 1431 019e 0200     		.2byte	0x2
 1432 01a0 7D       		.byte	0x7d
 1433 01a1 10       		.sleb128 16
 1434 01a2 EE000000 		.4byte	.LCFI2-.Ltext0
 1435 01a6 F2000000 		.4byte	.LCFI3-.Ltext0
 1436 01aa 0200     		.2byte	0x2
 1437 01ac 7D       		.byte	0x7d
 1438 01ad 00       		.sleb128 0
 1439 01ae F2000000 		.4byte	.LCFI3-.Ltext0
 1440 01b2 FC000000 		.4byte	.LFE6-.Ltext0
 1441 01b6 0200     		.2byte	0x2
 1442 01b8 7D       		.byte	0x7d
 1443 01b9 10       		.sleb128 16
 1444 01ba 00000000 		.4byte	0
 1445 01be 00000000 		.4byte	0
 1446              	.LLST11:
 1447 01c2 BC000000 		.4byte	.LVL26-.Ltext0
 1448 01c6 C9000000 		.4byte	.LVL28-1-.Ltext0
 1449 01ca 0100     		.2byte	0x1
 1450 01cc 50       		.byte	0x50
 1451 01cd C9000000 		.4byte	.LVL28-1-.Ltext0
 1452 01d1 EE000000 		.4byte	.LVL35-.Ltext0
 1453 01d5 0100     		.2byte	0x1
 1454 01d7 54       		.byte	0x54
 1455 01d8 EE000000 		.4byte	.LVL35-.Ltext0
 1456 01dc F2000000 		.4byte	.LVL36-.Ltext0
 1457 01e0 0400     		.2byte	0x4
 1458 01e2 F3       		.byte	0xf3
 1459 01e3 01       		.uleb128 0x1
 1460 01e4 50       		.byte	0x50
 1461 01e5 9F       		.byte	0x9f
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 33


 1462 01e6 F2000000 		.4byte	.LVL36-.Ltext0
 1463 01ea FC000000 		.4byte	.LFE6-.Ltext0
 1464 01ee 0100     		.2byte	0x1
 1465 01f0 50       		.byte	0x50
 1466 01f1 00000000 		.4byte	0
 1467 01f5 00000000 		.4byte	0
 1468              	.LLST12:
 1469 01f9 BC000000 		.4byte	.LVL26-.Ltext0
 1470 01fd C6000000 		.4byte	.LVL27-.Ltext0
 1471 0201 0100     		.2byte	0x1
 1472 0203 50       		.byte	0x50
 1473 0204 C6000000 		.4byte	.LVL27-.Ltext0
 1474 0208 EE000000 		.4byte	.LVL35-.Ltext0
 1475 020c 0100     		.2byte	0x1
 1476 020e 55       		.byte	0x55
 1477 020f EE000000 		.4byte	.LVL35-.Ltext0
 1478 0213 F2000000 		.4byte	.LVL36-.Ltext0
 1479 0217 0600     		.2byte	0x6
 1480 0219 F3       		.byte	0xf3
 1481 021a 01       		.uleb128 0x1
 1482 021b 50       		.byte	0x50
 1483 021c 38       		.byte	0x38
 1484 021d 1C       		.byte	0x1c
 1485 021e 9F       		.byte	0x9f
 1486 021f F2000000 		.4byte	.LVL36-.Ltext0
 1487 0223 FC000000 		.4byte	.LFE6-.Ltext0
 1488 0227 0100     		.2byte	0x1
 1489 0229 50       		.byte	0x50
 1490 022a 00000000 		.4byte	0
 1491 022e 00000000 		.4byte	0
 1492              	.LLST13:
 1493 0232 C6000000 		.4byte	.LVL27-.Ltext0
 1494 0236 EE000000 		.4byte	.LVL35-.Ltext0
 1495 023a 0100     		.2byte	0x1
 1496 023c 55       		.byte	0x55
 1497 023d EE000000 		.4byte	.LVL35-.Ltext0
 1498 0241 F2000000 		.4byte	.LVL36-.Ltext0
 1499 0245 0600     		.2byte	0x6
 1500 0247 F3       		.byte	0xf3
 1501 0248 01       		.uleb128 0x1
 1502 0249 50       		.byte	0x50
 1503 024a 38       		.byte	0x38
 1504 024b 1C       		.byte	0x1c
 1505 024c 9F       		.byte	0x9f
 1506 024d 00000000 		.4byte	0
 1507 0251 00000000 		.4byte	0
 1508              	.LLST14:
 1509 0255 CE000000 		.4byte	.LVL29-.Ltext0
 1510 0259 D0000000 		.4byte	.LVL30-.Ltext0
 1511 025d 0600     		.2byte	0x6
 1512 025f 03       		.byte	0x3
 1513 0260 00000000 		.4byte	xStart
 1514 0264 9F       		.byte	0x9f
 1515 0265 D0000000 		.4byte	.LVL30-.Ltext0
 1516 0269 DA000000 		.4byte	.LVL31-.Ltext0
 1517 026d 0100     		.2byte	0x1
 1518 026f 52       		.byte	0x52
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 34


 1519 0270 DC000000 		.4byte	.LVL32-.Ltext0
 1520 0274 E4000000 		.4byte	.LVL33-.Ltext0
 1521 0278 0100     		.2byte	0x1
 1522 027a 52       		.byte	0x52
 1523 027b 00000000 		.4byte	0
 1524 027f 00000000 		.4byte	0
 1525              	.LLST15:
 1526 0283 CE000000 		.4byte	.LVL29-.Ltext0
 1527 0287 E8000000 		.4byte	.LVL34-.Ltext0
 1528 028b 0100     		.2byte	0x1
 1529 028d 53       		.byte	0x53
 1530 028e E8000000 		.4byte	.LVL34-.Ltext0
 1531 0292 EE000000 		.4byte	.LVL35-.Ltext0
 1532 0296 0200     		.2byte	0x2
 1533 0298 74       		.byte	0x74
 1534 0299 7C       		.sleb128 -4
 1535 029a EE000000 		.4byte	.LVL35-.Ltext0
 1536 029e F1000000 		.4byte	.LVL36-1-.Ltext0
 1537 02a2 0500     		.2byte	0x5
 1538 02a4 F3       		.byte	0xf3
 1539 02a5 01       		.uleb128 0x1
 1540 02a6 50       		.byte	0x50
 1541 02a7 34       		.byte	0x34
 1542 02a8 1C       		.byte	0x1c
 1543 02a9 00000000 		.4byte	0
 1544 02ad 00000000 		.4byte	0
 1545              		.section	.debug_aranges,"",%progbits
 1546 0000 1C000000 		.4byte	0x1c
 1547 0004 0200     		.2byte	0x2
 1548 0006 00000000 		.4byte	.Ldebug_info0
 1549 000a 04       		.byte	0x4
 1550 000b 00       		.byte	0
 1551 000c 0000     		.2byte	0
 1552 000e 0000     		.2byte	0
 1553 0010 00000000 		.4byte	.Ltext0
 1554 0014 0A010000 		.4byte	.Letext0-.Ltext0
 1555 0018 00000000 		.4byte	0
 1556 001c 00000000 		.4byte	0
 1557              		.section	.debug_ranges,"",%progbits
 1558              	.Ldebug_ranges0:
 1559 0000 0E000000 		.4byte	.LBB5-.Ltext0
 1560 0004 2E000000 		.4byte	.LBE5-.Ltext0
 1561 0008 30000000 		.4byte	.LBB8-.Ltext0
 1562 000c 32000000 		.4byte	.LBE8-.Ltext0
 1563 0010 00000000 		.4byte	0
 1564 0014 00000000 		.4byte	0
 1565              		.section	.debug_line,"",%progbits
 1566              	.Ldebug_line0:
 1567 0000 3A020000 		.section	.debug_str,"MS",%progbits,1
 1567      0200BF01 
 1567      00000201 
 1567      FB0E0D00 
 1567      01010101 
 1568              	.LASF3:
 1569 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1569      6E74385F 
 1569      7400
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 35


 1570              	.LASF2:
 1571 000a 73697A65 		.ascii	"size_t\000"
 1571      5F7400
 1572              	.LASF46:
 1573 0011 76546173 		.ascii	"vTaskSuspendAll\000"
 1573      6B537573 
 1573      70656E64 
 1573      416C6C00 
 1574              	.LASF44:
 1575 0021 78506F72 		.ascii	"xPortGetFreeHeapSize\000"
 1575      74476574 
 1575      46726565 
 1575      48656170 
 1575      53697A65 
 1576              	.LASF40:
 1577 0036 415F424C 		.ascii	"A_BLOCK_LINK\000"
 1577      4F434B5F 
 1577      4C494E4B 
 1577      00
 1578              	.LASF41:
 1579 0043 70727648 		.ascii	"prvHeapInit\000"
 1579      65617049 
 1579      6E697400 
 1580              	.LASF47:
 1581 004f 78546173 		.ascii	"xTaskResumeAll\000"
 1581      6B526573 
 1581      756D6541 
 1581      6C6C00
 1582              	.LASF21:
 1583 005e 426C6F63 		.ascii	"BlockLink_t\000"
 1583      6B4C696E 
 1583      6B5F7400 
 1584              	.LASF24:
 1585 006a 7078426C 		.ascii	"pxBlock\000"
 1585      6F636B00 
 1586              	.LASF31:
 1587 0072 70784C69 		.ascii	"pxLink\000"
 1587      6E6B00
 1588              	.LASF42:
 1589 0079 7076506F 		.ascii	"pvPortMalloc\000"
 1589      72744D61 
 1589      6C6C6F63 
 1589      00
 1590              	.LASF22:
 1591 0086 70784669 		.ascii	"pxFirstFreeBlock\000"
 1591      72737446 
 1591      72656542 
 1591      6C6F636B 
 1591      00
 1592              	.LASF32:
 1593 0097 75634865 		.ascii	"ucHeap\000"
 1593      617000
 1594              	.LASF4:
 1595 009e 756E7369 		.ascii	"unsigned char\000"
 1595      676E6564 
 1595      20636861 
 1595      7200
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 36


 1596              	.LASF20:
 1597 00ac 78426C6F 		.ascii	"xBlockSize\000"
 1597      636B5369 
 1597      7A6500
 1598              	.LASF10:
 1599 00b7 6C6F6E67 		.ascii	"long unsigned int\000"
 1599      20756E73 
 1599      69676E65 
 1599      6420696E 
 1599      7400
 1600              	.LASF7:
 1601 00c9 73686F72 		.ascii	"short unsigned int\000"
 1601      7420756E 
 1601      7369676E 
 1601      65642069 
 1601      6E7400
 1602              	.LASF27:
 1603 00dc 78486561 		.ascii	"xHeapHasBeenInitialised\000"
 1603      70486173 
 1603      4265656E 
 1603      496E6974 
 1603      69616C69 
 1604              	.LASF35:
 1605 00f4 78456E64 		.ascii	"xEnd\000"
 1605      00
 1606              	.LASF6:
 1607 00f9 5F5F7569 		.ascii	"__uint16_t\000"
 1607      6E743136 
 1607      5F7400
 1608              	.LASF25:
 1609 0104 70785072 		.ascii	"pxPreviousBlock\000"
 1609      6576696F 
 1609      7573426C 
 1609      6F636B00 
 1610              	.LASF43:
 1611 0114 76506F72 		.ascii	"vPortFree\000"
 1611      74467265 
 1611      6500
 1612              	.LASF9:
 1613 011e 5F5F7569 		.ascii	"__uint32_t\000"
 1613      6E743332 
 1613      5F7400
 1614              	.LASF37:
 1615 0129 474E5520 		.ascii	"GNU C 4.9.3 20150529 (release) [ARM/embedded-4_9-br"
 1615      4320342E 
 1615      392E3320 
 1615      32303135 
 1615      30353239 
 1616 015c 616E6368 		.ascii	"anch revision 227977] -mcpu=cortex-m3 -mthumb -gdwa"
 1616      20726576 
 1616      6973696F 
 1616      6E203232 
 1616      37393737 
 1617 018f 72662D32 		.ascii	"rf-2 -Os -fomit-frame-pointer\000"
 1617      202D4F73 
 1617      202D666F 
 1617      6D69742D 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 37


 1617      6672616D 
 1618              	.LASF28:
 1619 01ad 70765265 		.ascii	"pvReturn\000"
 1619      7475726E 
 1619      00
 1620              	.LASF38:
 1621 01b6 46726565 		.ascii	"FreeRTOS/Source/portable/MemMang/heap_2.c\000"
 1621      52544F53 
 1621      2F536F75 
 1621      7263652F 
 1621      706F7274 
 1622              	.LASF33:
 1623 01e0 68656170 		.ascii	"heapSTRUCT_SIZE\000"
 1623      53545255 
 1623      43545F53 
 1623      495A4500 
 1624              	.LASF34:
 1625 01f0 78537461 		.ascii	"xStart\000"
 1625      727400
 1626              	.LASF45:
 1627 01f7 76506F72 		.ascii	"vPortInitialiseBlocks\000"
 1627      74496E69 
 1627      7469616C 
 1627      69736542 
 1627      6C6F636B 
 1628              	.LASF0:
 1629 020d 756E7369 		.ascii	"unsigned int\000"
 1629      676E6564 
 1629      20696E74 
 1629      00
 1630              	.LASF12:
 1631 021a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1631      206C6F6E 
 1631      6720756E 
 1631      7369676E 
 1631      65642069 
 1632              	.LASF15:
 1633 0231 75696E74 		.ascii	"uint8_t\000"
 1633      385F7400 
 1634              	.LASF26:
 1635 0239 70784E65 		.ascii	"pxNewBlockLink\000"
 1635      77426C6F 
 1635      636B4C69 
 1635      6E6B00
 1636              	.LASF39:
 1637 0248 2F557365 		.ascii	"/Users/ingamedeo/ownCloud/STM32F103RBT6FreeRTOS\000"
 1637      72732F69 
 1637      6E67616D 
 1637      6564656F 
 1637      2F6F776E 
 1638              	.LASF13:
 1639 0278 73697A65 		.ascii	"sizetype\000"
 1639      74797065 
 1639      00
 1640              	.LASF11:
 1641 0281 6C6F6E67 		.ascii	"long long int\000"
 1641      206C6F6E 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 38


 1641      6720696E 
 1641      7400
 1642              	.LASF30:
 1643 028f 7857616E 		.ascii	"xWantedSize\000"
 1643      74656453 
 1643      697A6500 
 1644              	.LASF14:
 1645 029b 63686172 		.ascii	"char\000"
 1645      00
 1646              	.LASF23:
 1647 02a0 70756341 		.ascii	"pucAlignedHeap\000"
 1647      6C69676E 
 1647      65644865 
 1647      617000
 1648              	.LASF29:
 1649 02af 70784974 		.ascii	"pxIterator\000"
 1649      65726174 
 1649      6F7200
 1650              	.LASF5:
 1651 02ba 73686F72 		.ascii	"short int\000"
 1651      7420696E 
 1651      7400
 1652              	.LASF16:
 1653 02c4 75696E74 		.ascii	"uint16_t\000"
 1653      31365F74 
 1653      00
 1654              	.LASF36:
 1655 02cd 78467265 		.ascii	"xFreeBytesRemaining\000"
 1655      65427974 
 1655      65735265 
 1655      6D61696E 
 1655      696E6700 
 1656              	.LASF17:
 1657 02e1 75696E74 		.ascii	"uint32_t\000"
 1657      33325F74 
 1657      00
 1658              	.LASF8:
 1659 02ea 6C6F6E67 		.ascii	"long int\000"
 1659      20696E74 
 1659      00
 1660              	.LASF1:
 1661 02f3 7369676E 		.ascii	"signed char\000"
 1661      65642063 
 1661      68617200 
 1662              	.LASF19:
 1663 02ff 70784E65 		.ascii	"pxNextFreeBlock\000"
 1663      78744672 
 1663      6565426C 
 1663      6F636B00 
 1664              	.LASF18:
 1665 030f 42617365 		.ascii	"BaseType_t\000"
 1665      54797065 
 1665      5F7400
 1666              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_2.c
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:73     .text:0000000000000000 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:78     .text:0000000000000000 pvPortMalloc
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:255    .text:00000000000000ac $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:262    .text:00000000000000bc $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:267    .text:00000000000000bc vPortFree
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:338    .text:00000000000000f4 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:343    .text:00000000000000fc $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:348    .text:00000000000000fc xPortGetFreeHeapSize
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:362    .text:0000000000000104 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:366    .text:0000000000000108 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:371    .text:0000000000000108 vPortInitialiseBlocks
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:383    .data:0000000000000000 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:387    .data:0000000000000000 xFreeBytesRemaining
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:390    .bss:0000000000000000 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:395    .bss:0000000000000000 xStart
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:399    .bss:0000000000000008 xHeapHasBeenInitialised.5042
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:403    .bss:000000000000000c ucHeap
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccnRzt0G.s:407    .bss:000000000000280c xEnd
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
