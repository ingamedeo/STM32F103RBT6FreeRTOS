ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"heap_2.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150529 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), GMP vers
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./Libraries/CMSIS/CM3/CoreSupport
  18              	@ -I ./Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
  19              	@ -I ./Libraries/STM32F10x_StdPeriph_Driver/inc -I ./Libraries/Drivers/Leds
  20              	@ -I ./Libraries/Drivers/Buttons -I ./Libraries/Drivers/Usart
  21              	@ -I ./Libraries/Drivers/i2c -I ./Libraries/Drivers/BH1750
  22              	@ -I ./Libraries/Drivers/Utilities -I ./FreeRTOS/Source/include
  23              	@ -I ./FreeRTOS/Source/portable/GCC/ARM_CM3 -imultilib armv7-m
  24              	@ -iprefix /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../lib/gcc/arm-none-eabi/4.9.3/
  25              	@ -isysroot /usr/local/Cellar/arm-none-eabi-gcc/20150921/bin/../arm-none-eabi
  26              	@ -MD FreeRTOS/Source/portable/MemMang/heap_2.d -MF .dep/heap_2.o.d -MP
  27              	@ -MQ FreeRTOS/Source/portable/MemMang/heap_2.o -D__USES_INITFINI__
  28              	@ -D STM32F10X_MD -D USE_STDPERIPH_DRIVER -D GCC_ARMCM3 -D RUN_FROM_FLASH=1
  29              	@ FreeRTOS/Source/portable/MemMang/heap_2.c -mcpu=cortex-m3 -mthumb
  30              	@ -auxbase-strip FreeRTOS/Source/portable/MemMang/heap_2.o -gdwarf-2 -Os
  31              	@ -Wall -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  32              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  33              	@ -fbranch-count-reg -fcaller-saves -fcombine-stack-adjustments -fcommon
  34              	@ -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  35              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
  36              	@ -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
  37              	@ -feliminate-unused-debug-types -fexpensive-optimizations
  38              	@ -fforward-propagate -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
  39              	@ -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  40              	@ -fif-conversion -fif-conversion2 -findirect-inlining -finline
  41              	@ -finline-atomics -finline-functions -finline-functions-called-once
  42              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  43              	@ -fipa-reference -fipa-sra -fira-hoist-pressure -fira-share-save-slots
  44              	@ -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
  45              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse -fmath-errno
  46              	@ -fmerge-constants -fmerge-debug-strings -fomit-frame-pointer
  47              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  48              	@ -fprefetch-loop-arrays -freg-struct-return -freorder-blocks
  49              	@ -freorder-functions -frerun-cse-after-loop
  50              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  51              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  52              	@ -fsched-pressure -fsched-rank-heuristic -fsched-spec
  53              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns2
  54              	@ -fsection-anchors -fshow-column -fsigned-zeros -fsplit-ivs-in-unroller
  55              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  56              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  57              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 2


  58              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop
  59              	@ -ftree-copyrename -ftree-cselim -ftree-dce -ftree-dominator-opts
  60              	@ -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-if-convert
  61              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  62              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-pre -ftree-pta
  63              	@ -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr -ftree-sra
  64              	@ -ftree-switch-conversion -ftree-tail-merge -ftree-ter -ftree-vrp
  65              	@ -funit-at-a-time -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  66              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  67              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  68              	@ -mvectorize-with-neon-quad
  69              	
  70              		.text
  71              	.Ltext0:
  72              		.cfi_sections	.debug_frame
  73              		.align	1
  74              		.global	pvPortMalloc
  75              		.thumb
  76              		.thumb_func
  77              		.type	pvPortMalloc, %function
  78              	pvPortMalloc:
  79              	.LFB5:
  80              		.file 1 "FreeRTOS/Source/portable/MemMang/heap_2.c"
   1:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
   2:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:FreeRTOS/Source/portable/MemMang/heap_2.c ****     All rights reserved
   4:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   5:FreeRTOS/Source/portable/MemMang/heap_2.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   7:FreeRTOS/Source/portable/MemMang/heap_2.c ****     This file is part of the FreeRTOS distribution.
   8:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
   9:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:FreeRTOS/Source/portable/MemMang/heap_2.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  13:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  14:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:FreeRTOS/Source/portable/MemMang/heap_2.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  19:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  20:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:FreeRTOS/Source/portable/MemMang/heap_2.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:FreeRTOS/Source/portable/MemMang/heap_2.c ****     link: http://www.freertos.org/a00114.html
  24:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  25:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  26:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  27:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    platform software that is more than just the market leader, it     *
  30:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    is the industry's de facto standard.                               *
  31:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  32:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    tutorial book, reference manual, or both:                          *
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 3


  35:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:FreeRTOS/Source/portable/MemMang/heap_2.c ****      *                                                                       *
  37:FreeRTOS/Source/portable/MemMang/heap_2.c ****     ***************************************************************************
  38:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  39:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:FreeRTOS/Source/portable/MemMang/heap_2.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:FreeRTOS/Source/portable/MemMang/heap_2.c ****     defined configASSERT()?
  42:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  43:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:FreeRTOS/Source/portable/MemMang/heap_2.c ****     embedded software for free we request you assist our global community by
  45:FreeRTOS/Source/portable/MemMang/heap_2.c ****     participating in the support forum.
  46:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  47:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:FreeRTOS/Source/portable/MemMang/heap_2.c ****     be as productive as possible as early as possible.  Now you can receive
  49:FreeRTOS/Source/portable/MemMang/heap_2.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  52:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:FreeRTOS/Source/portable/MemMang/heap_2.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:FreeRTOS/Source/portable/MemMang/heap_2.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  56:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  59:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:FreeRTOS/Source/portable/MemMang/heap_2.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:FreeRTOS/Source/portable/MemMang/heap_2.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  63:FreeRTOS/Source/portable/MemMang/heap_2.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:FreeRTOS/Source/portable/MemMang/heap_2.c ****     engineered and independently SIL3 certified version for use in safety and
  65:FreeRTOS/Source/portable/MemMang/heap_2.c ****     mission critical applications that require provable dependability.
  66:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  67:FreeRTOS/Source/portable/MemMang/heap_2.c ****     1 tab == 4 spaces!
  68:FreeRTOS/Source/portable/MemMang/heap_2.c **** */
  69:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  70:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
  71:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that permits
  72:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * allocated blocks to be freed, but does not combine adjacent free blocks
  73:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * into a single larger block (and so will fragment memory).  See heap_4.c for
  74:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * an equivalent that does combine adjacent blocks into single larger blocks.
  75:FreeRTOS/Source/portable/MemMang/heap_2.c ****  *
  76:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * See heap_1.c, heap_3.c and heap_4.c for alternative implementations, and the
  77:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  78:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
  79:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include <stdlib.h>
  80:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  81:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  82:FreeRTOS/Source/portable/MemMang/heap_2.c **** all the API functions to use the MPU wrappers.  That should only be done when
  83:FreeRTOS/Source/portable/MemMang/heap_2.c **** task.h is included from an application file. */
  84:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  85:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  86:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include "FreeRTOS.h"
  87:FreeRTOS/Source/portable/MemMang/heap_2.c **** #include "task.h"
  88:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  89:FreeRTOS/Source/portable/MemMang/heap_2.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  90:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  91:FreeRTOS/Source/portable/MemMang/heap_2.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 4


  92:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  93:FreeRTOS/Source/portable/MemMang/heap_2.c **** #endif
  94:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  95:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* A few bytes might be lost to byte aligning the heap start address. */
  96:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define configADJUSTED_HEAP_SIZE	( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )
  97:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
  98:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
  99:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * Initialises the heap structures before their first use.
 100:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
 101:FreeRTOS/Source/portable/MemMang/heap_2.c **** static void prvHeapInit( void );
 102:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 103:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Allocate the memory for the heap. */
 104:FreeRTOS/Source/portable/MemMang/heap_2.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
 105:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* The application writer has already defined the array used for the RTOS
 106:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	heap - probably so it can be placed in a special segment or address. */
 107:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 108:FreeRTOS/Source/portable/MemMang/heap_2.c **** #else
 109:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 110:FreeRTOS/Source/portable/MemMang/heap_2.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
 111:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 112:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 113:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Define the linked list structure.  This is used to link free blocks in order
 114:FreeRTOS/Source/portable/MemMang/heap_2.c **** of their size. */
 115:FreeRTOS/Source/portable/MemMang/heap_2.c **** typedef struct A_BLOCK_LINK
 116:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 117:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
 118:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
 119:FreeRTOS/Source/portable/MemMang/heap_2.c **** } BlockLink_t;
 120:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 121:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 122:FreeRTOS/Source/portable/MemMang/heap_2.c **** static const uint16_t heapSTRUCT_SIZE	= ( ( sizeof ( BlockLink_t ) + ( portBYTE_ALIGNMENT - 1 ) ) &
 123:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( heapSTRUCT_SIZE * 2 ) )
 124:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 125:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Create a couple of list links to mark the start and end of the list. */
 126:FreeRTOS/Source/portable/MemMang/heap_2.c **** static BlockLink_t xStart, xEnd;
 127:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 128:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 129:FreeRTOS/Source/portable/MemMang/heap_2.c **** fragmentation. */
 130:FreeRTOS/Source/portable/MemMang/heap_2.c **** static size_t xFreeBytesRemaining = configADJUSTED_HEAP_SIZE;
 131:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 132:FreeRTOS/Source/portable/MemMang/heap_2.c **** /* STATIC FUNCTIONS ARE DEFINED AS MACROS TO MINIMIZE THE FUNCTION CALL DEPTH. */
 133:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 134:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*
 135:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * Insert a block into the list of free blocks - which is ordered by size of
 136:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * the block.  Small blocks at the start of the list and large blocks at the end
 137:FreeRTOS/Source/portable/MemMang/heap_2.c ****  * of the list.
 138:FreeRTOS/Source/portable/MemMang/heap_2.c ****  */
 139:FreeRTOS/Source/portable/MemMang/heap_2.c **** #define prvInsertBlockIntoFreeList( pxBlockToInsert )								\
 140:FreeRTOS/Source/portable/MemMang/heap_2.c **** {																					\
 141:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxIterator;															\
 142:FreeRTOS/Source/portable/MemMang/heap_2.c **** size_t xBlockSize;																	\
 143:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 144:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xBlockSize = pxBlockToInsert->xBlockSize;										\
 145:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 146:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Iterate through the list until a block is found that has a larger size */	\
 147:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* than the block we are inserting. */											\
 148:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock->xBlockSize < xBlockSize; pxIterator = pxIt
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 5


 149:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{																				\
 150:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* There is nothing to do here - just iterate to the correct position. */	\
 151:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}																				\
 152:FreeRTOS/Source/portable/MemMang/heap_2.c **** 																					\
 153:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Update the list to include the block being inserted in the correct */		\
 154:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* position. */																	\
 155:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;					\
 156:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxIterator->pxNextFreeBlock = pxBlockToInsert;									\
 157:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 158:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 159:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 160:FreeRTOS/Source/portable/MemMang/heap_2.c **** void *pvPortMalloc( size_t xWantedSize )
 161:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
  81              		.loc 1 161 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL0:
  86 0000 70B5     		push	{r4, r5, r6, lr}	@
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 4, -16
  90              		.cfi_offset 5, -12
  91              		.cfi_offset 6, -8
  92              		.cfi_offset 14, -4
  93              		.loc 1 161 0
  94 0002 0446     		mov	r4, r0	@ xWantedSize, xWantedSize
 162:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 163:FreeRTOS/Source/portable/MemMang/heap_2.c **** static BaseType_t xHeapHasBeenInitialised = pdFALSE;
 164:FreeRTOS/Source/portable/MemMang/heap_2.c **** void *pvReturn = NULL;
 165:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 166:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	vTaskSuspendAll();
  95              		.loc 1 166 0
  96 0004 FFF7FEFF 		bl	vTaskSuspendAll	@
  97              	.LVL1:
 167:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 168:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* If this is the first call to malloc then the heap will require
 169:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		initialisation to setup the list of free blocks. */
 170:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( xHeapHasBeenInitialised == pdFALSE )
  98              		.loc 1 170 0
  99 0008 264B     		ldr	r3, .L22	@ tmp137,
 100 000a 9868     		ldr	r0, [r3, #8]	@ xHeapHasBeenInitialised, xHeapHasBeenInitialised
 101 000c 78B9     		cbnz	r0, .L2	@ xHeapHasBeenInitialised,
 102              	.LBB5:
 103              	.LBB6:
 171:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 172:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			prvHeapInit();
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xHeapHasBeenInitialised = pdTRUE;
 174:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 175:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 176:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* The wanted size is increased so it can contain a BlockLink_t
 177:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		structure in addition to the requested amount of bytes. */
 178:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( xWantedSize > 0 )
 179:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 180:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xWantedSize += heapSTRUCT_SIZE;
 181:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 182:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Ensure that blocks are always aligned to the required number of bytes. */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 6


 183:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
 184:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 185:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* Byte alignment required. */
 186:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 187:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 188:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 189:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 190:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
 191:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 192:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Blocks are stored in byte order - traverse the list from the start
 193:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			(smallest) block until one of adequate size is found. */
 194:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxPreviousBlock = &xStart;
 195:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 197:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 198:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxPreviousBlock = pxBlock;
 199:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 200:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 201:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 202:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* If we found the end marker then a block of adequate size was not found. */
 203:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			if( pxBlock != &xEnd )
 204:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 205:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* Return the memory space - jumping over the BlockLink_t structure
 206:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				at its start. */
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
 208:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 209:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* This block is being returned for use so must be taken out of the
 210:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				list of free blocks. */
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 212:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 213:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				/* If the block is larger than required it can be split into two. */
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 215:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 216:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* This block is to be split into two.  Create a new block
 217:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					following the number of bytes requested. The void cast is
 218:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					used to prevent byte alignment warnings from the compiler. */
 219:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 220:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 221:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* Calculate the sizes of two blocks split from the single
 222:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					block. */
 223:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 224:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 225:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 226:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					/* Insert the new block into the list of free blocks. */
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
 228:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 229:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 230:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				xFreeBytesRemaining -= pxBlock->xBlockSize;
 231:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 232:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 233:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 234:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		traceMALLOC( pvReturn, xWantedSize );
 235:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 236:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	( void ) xTaskResumeAll();
 237:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 238:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 239:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 7


 240:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		if( pvReturn == NULL )
 241:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 242:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			extern void vApplicationMallocFailedHook( void );
 243:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			vApplicationMallocFailedHook();
 244:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 245:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 246:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	#endif
 247:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 248:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return pvReturn;
 249:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 250:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 251:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 252:FreeRTOS/Source/portable/MemMang/heap_2.c **** void vPortFree( void *pv )
 253:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 254:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 255:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxLink;
 256:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 257:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	if( pv != NULL )
 258:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 259:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 260:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		before it. */
 261:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		puc -= heapSTRUCT_SIZE;
 262:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 263:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		/* This unexpected casting is to keep some compilers from issuing
 264:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		byte alignment warnings. */
 265:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		pxLink = ( void * ) puc;
 266:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 267:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		vTaskSuspendAll();
 268:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 269:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			/* Add this block to the list of free blocks. */
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 271:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 272:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 273:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 274:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		( void ) xTaskResumeAll();
 275:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 276:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 277:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 278:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 279:FreeRTOS/Source/portable/MemMang/heap_2.c **** size_t xPortGetFreeHeapSize( void )
 280:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 281:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 282:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 283:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 284:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 285:FreeRTOS/Source/portable/MemMang/heap_2.c **** void vPortInitialiseBlocks( void )
 286:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 287:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 288:FreeRTOS/Source/portable/MemMang/heap_2.c **** }
 289:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 290:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 291:FreeRTOS/Source/portable/MemMang/heap_2.c **** static void prvHeapInit( void )
 292:FreeRTOS/Source/portable/MemMang/heap_2.c **** {
 293:FreeRTOS/Source/portable/MemMang/heap_2.c **** BlockLink_t *pxFirstFreeBlock;
 294:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *pucAlignedHeap;
 295:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 296:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 8


 297:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~
 298:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 299:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 300:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 301:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 302:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 303:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 304:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* xEnd is used to mark the end of the list of free blocks. */
 305:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 104              		.loc 1 305 0
 105 000e 44F2F835 		movw	r5, #17400	@ tmp146,
 106 0012 254A     		ldr	r2, .L22+4	@ tmp145,
 297:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 107              		.loc 1 297 0
 108 0014 03F11401 		add	r1, r3, #20	@ D.5131, tmp167,
 109 0018 21F00701 		bic	r1, r1, #7	@ pxFirstFreeBlock, D.5131,
 110              	.LVL2:
 111              		.loc 1 305 0
 112 001c 1563     		str	r5, [r2, #48]	@ tmp146, xEnd.xBlockSize
 306:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 113              		.loc 1 306 0
 114 001e 42F82C0F 		str	r0, [r2, #44]!	@ xHeapHasBeenInitialised, xEnd.pxNextFreeBlock
 115              	.LVL3:
 307:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 308:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* To start with there is a single free block that is sized to take up the
 309:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	entire heap space. */
 310:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 311:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 312:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 116              		.loc 1 312 0
 117 0022 81E82400 		stmia	r1, {r2, r5}	@ pxFirstFreeBlock,,
 118              	.LBE6:
 119              	.LBE5:
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 120              		.loc 1 173 0
 121 0026 0122     		movs	r2, #1	@ tmp153,
 122              	.LBB8:
 123              	.LBB7:
 301:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 124              		.loc 1 301 0
 125 0028 1960     		str	r1, [r3]	@ pxFirstFreeBlock, xStart.pxNextFreeBlock
 302:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 126              		.loc 1 302 0
 127 002a 5860     		str	r0, [r3, #4]	@ xHeapHasBeenInitialised, xStart.xBlockSize
 128              	.LBE7:
 129              	.LBE8:
 173:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		}
 130              		.loc 1 173 0
 131 002c 9A60     		str	r2, [r3, #8]	@ tmp153, xHeapHasBeenInitialised
 132              	.LVL4:
 133              	.L2:
 178:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 134              		.loc 1 178 0
 135 002e 2CB1     		cbz	r4, .L3	@ xWantedSize,
 180:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 136              		.loc 1 180 0
 137 0030 0834     		adds	r4, r4, #8	@ xWantedSize, xWantedSize,
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 9


 138              	.LVL5:
 183:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 139              		.loc 1 183 0
 140 0032 6207     		lsls	r2, r4, #29	@, xWantedSize,
 186:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 141              		.loc 1 186 0
 142 0034 1CBF     		itt	ne
 143 0036 24F00704 		bicne	r4, r4, #7	@ D.5129, xWantedSize,
 144              	.LVL6:
 145 003a 0834     		addne	r4, r4, #8	@ xWantedSize, D.5129,
 146              	.LVL7:
 147              	.L3:
 190:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 148              		.loc 1 190 0
 149 003c 44F2F632 		movw	r2, #17398	@ tmp156,
 150 0040 611E     		subs	r1, r4, #1	@ D.5129, xWantedSize,
 151 0042 9142     		cmp	r1, r2	@ D.5129, tmp156
 152 0044 29D8     		bhi	.L11	@,
 153              	.LVL8:
 195:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 154              		.loc 1 195 0
 155 0046 1B68     		ldr	r3, [r3]	@ pxPreviousBlock, xStart.pxNextFreeBlock
 156              	.LVL9:
 194:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 157              		.loc 1 194 0
 158 0048 1649     		ldr	r1, .L22	@ pxPreviousBlock,
 159              	.LVL10:
 160              	.L7:
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 161              		.loc 1 196 0
 162 004a 5A68     		ldr	r2, [r3, #4]	@ D.5129, pxPreviousBlock_2->xBlockSize
 163 004c A242     		cmp	r2, r4	@ D.5129, xWantedSize
 164 004e 03D3     		bcc	.L5	@,
 165              	.L8:
 203:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 166              		.loc 1 203 0
 167 0050 1648     		ldr	r0, .L22+8	@ tmp159,
 168 0052 8342     		cmp	r3, r0	@ pxPreviousBlock, tmp159
 169 0054 06D1     		bne	.L6	@,
 170 0056 20E0     		b	.L11	@
 171              	.L5:
 196:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			{
 172              		.loc 1 196 0 discriminator 1
 173 0058 1868     		ldr	r0, [r3]	@ pxPreviousBlock, pxPreviousBlock_2->pxNextFreeBlock
 174 005a 0028     		cmp	r0, #0	@ pxPreviousBlock
 175 005c F8D0     		beq	.L8	@
 176 005e 1946     		mov	r1, r3	@ pxPreviousBlock, pxPreviousBlock
 177 0060 0346     		mov	r3, r0	@ pxPreviousBlock, pxPreviousBlock
 178              	.LVL11:
 179 0062 F2E7     		b	.L7	@
 180              	.LVL12:
 181              	.L6:
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 182              		.loc 1 207 0
 183 0064 0D68     		ldr	r5, [r1]	@ pxPreviousBlock_74->pxNextFreeBlock, pxPreviousBlock_74->pxNextFreeBlock
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 184              		.loc 1 211 0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 10


 185 0066 1868     		ldr	r0, [r3]	@ D.5130, pxPreviousBlock_75->pxNextFreeBlock
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 186              		.loc 1 214 0
 187 0068 121B     		subs	r2, r2, r4	@ D.5129, D.5129, xWantedSize
 188 006a 102A     		cmp	r2, #16	@ D.5129,
 207:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 189              		.loc 1 207 0
 190 006c 05F10805 		add	r5, r5, #8	@ pvReturn, pxPreviousBlock_74->pxNextFreeBlock,
 191              	.LVL13:
 211:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 192              		.loc 1 211 0
 193 0070 0860     		str	r0, [r1]	@ D.5130, pxPreviousBlock_74->pxNextFreeBlock
 214:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				{
 194              		.loc 1 214 0
 195 0072 0CD9     		bls	.L9	@,
 219:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 196              		.loc 1 219 0
 197 0074 1919     		adds	r1, r3, r4	@ pxNewBlockLink, pxPreviousBlock, xWantedSize
 198              	.LVL14:
 223:FreeRTOS/Source/portable/MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 199              		.loc 1 223 0
 200 0076 4A60     		str	r2, [r1, #4]	@ D.5129, pxNewBlockLink_29->xBlockSize
 224:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 201              		.loc 1 224 0
 202 0078 5C60     		str	r4, [r3, #4]	@ xWantedSize, pxPreviousBlock_75->xBlockSize
 203              	.LBB9:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 204              		.loc 1 227 0
 205 007a 4C68     		ldr	r4, [r1, #4]	@ xBlockSize, pxNewBlockLink_29->xBlockSize
 206              	.LVL15:
 207 007c 094A     		ldr	r2, .L22	@ pxIterator,
 208              	.LVL16:
 209              	.L10:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 210              		.loc 1 227 0 is_stmt 0 discriminator 1
 211 007e 1068     		ldr	r0, [r2]	@ pxIterator, pxIterator_5->pxNextFreeBlock
 212 0080 4668     		ldr	r6, [r0, #4]	@ D.5129, MEM[(struct A_BLOCK_LINK *)pxIterator_33].xBlockSize
 213 0082 A642     		cmp	r6, r4	@ D.5129, xBlockSize
 214 0084 01D2     		bcs	.L21	@,
 215 0086 0246     		mov	r2, r0	@ pxIterator, pxIterator
 216              	.LVL17:
 217 0088 F9E7     		b	.L10	@
 218              	.LVL18:
 219              	.L21:
 227:FreeRTOS/Source/portable/MemMang/heap_2.c **** 				}
 220              		.loc 1 227 0
 221 008a 0860     		str	r0, [r1]	@ pxIterator, pxNewBlockLink_29->pxNextFreeBlock
 222 008c 1160     		str	r1, [r2]	@ pxNewBlockLink, pxIterator_60->pxNextFreeBlock
 223              	.LVL19:
 224              	.L9:
 225              	.LBE9:
 230:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			}
 226              		.loc 1 230 0 is_stmt 1
 227 008e 0849     		ldr	r1, .L22+12	@ tmp161,
 228 0090 5B68     		ldr	r3, [r3, #4]	@ pxPreviousBlock_75->xBlockSize, pxPreviousBlock_75->xBlockSize
 229              	.LVL20:
 230 0092 0A68     		ldr	r2, [r1]	@ xFreeBytesRemaining, xFreeBytesRemaining
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 11


 231 0094 D21A     		subs	r2, r2, r3	@ D.5129, xFreeBytesRemaining, pxPreviousBlock_75->xBlockSize
 232 0096 0A60     		str	r2, [r1]	@ D.5129, xFreeBytesRemaining
 233 0098 00E0     		b	.L4	@
 234              	.LVL21:
 235              	.L11:
 164:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 236              		.loc 1 164 0
 237 009a 0025     		movs	r5, #0	@ pvReturn,
 238              	.LVL22:
 239              	.L4:
 236:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 240              		.loc 1 236 0
 241 009c FFF7FEFF 		bl	xTaskResumeAll	@
 242              	.LVL23:
 249:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 243              		.loc 1 249 0
 244 00a0 2846     		mov	r0, r5	@, pvReturn
 245 00a2 70BD     		pop	{r4, r5, r6, pc}	@
 246              	.LVL24:
 247              	.L23:
 248              		.align	2
 249              	.L22:
 250 00a4 00000000 		.word	.LANCHOR0
 251 00a8 E0430000 		.word	.LANCHOR1
 252 00ac 0C440000 		.word	.LANCHOR1+44
 253 00b0 00000000 		.word	.LANCHOR2
 254              		.cfi_endproc
 255              	.LFE5:
 256              		.size	pvPortMalloc, .-pvPortMalloc
 257              		.align	1
 258              		.global	vPortFree
 259              		.thumb
 260              		.thumb_func
 261              		.type	vPortFree, %function
 262              	vPortFree:
 263              	.LFB6:
 253:FreeRTOS/Source/portable/MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 264              		.loc 1 253 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL25:
 269 00b4 38B5     		push	{r3, r4, r5, lr}	@
 270              	.LCFI1:
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 3, -16
 273              		.cfi_offset 4, -12
 274              		.cfi_offset 5, -8
 275              		.cfi_offset 14, -4
 257:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	{
 276              		.loc 1 257 0
 277 00b6 0446     		mov	r4, r0	@ pv, pv
 278 00b8 B8B1     		cbz	r0, .L24	@ pv,
 261:FreeRTOS/Source/portable/MemMang/heap_2.c **** 
 279              		.loc 1 261 0
 280 00ba A0F10805 		sub	r5, r0, #8	@ pxLink, pv,
 281              	.LVL26:
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 12


 267:FreeRTOS/Source/portable/MemMang/heap_2.c **** 		{
 282              		.loc 1 267 0
 283 00be FFF7FEFF 		bl	vTaskSuspendAll	@
 284              	.LVL27:
 285              	.LBB10:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 286              		.loc 1 270 0
 287 00c2 54F8043C 		ldr	r3, [r4, #-4]	@ xBlockSize, MEM[(struct BlockLink_t *)pv_3(D) + 4294967288B].xBlockSize
 288              	.LVL28:
 289 00c6 094A     		ldr	r2, .L29	@ pxIterator,
 290              	.LVL29:
 291              	.L26:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 292              		.loc 1 270 0 is_stmt 0 discriminator 1
 293 00c8 1168     		ldr	r1, [r2]	@ pxIterator, pxIterator_1->pxNextFreeBlock
 294 00ca 4868     		ldr	r0, [r1, #4]	@ D.5134, MEM[(struct A_BLOCK_LINK *)pxIterator_8].xBlockSize
 295 00cc 9842     		cmp	r0, r3	@ D.5134, xBlockSize
 296 00ce 01D2     		bcs	.L28	@,
 297 00d0 0A46     		mov	r2, r1	@ pxIterator, pxIterator
 298              	.LVL30:
 299 00d2 F9E7     		b	.L26	@
 300              	.LVL31:
 301              	.L28:
 270:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 302              		.loc 1 270 0
 303 00d4 44F8081C 		str	r1, [r4, #-8]	@ pxIterator, MEM[(struct BlockLink_t *)pv_3(D) + 4294967288B].pxNextFreeBlock
 304 00d8 1560     		str	r5, [r2]	@ pxLink, pxIterator_21->pxNextFreeBlock
 305              	.LBE10:
 271:FreeRTOS/Source/portable/MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 306              		.loc 1 271 0 is_stmt 1
 307 00da 054A     		ldr	r2, .L29+4	@ tmp119,
 308              	.LVL32:
 309 00dc 1168     		ldr	r1, [r2]	@ xFreeBytesRemaining, xFreeBytesRemaining
 310 00de 0B44     		add	r3, r3, r1	@ D.5134, xFreeBytesRemaining
 311              	.LVL33:
 312 00e0 1360     		str	r3, [r2]	@ D.5134, xFreeBytesRemaining
 276:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 313              		.loc 1 276 0
 314 00e2 BDE83840 		pop	{r3, r4, r5, lr}	@
 315              	.LCFI2:
 316              		.cfi_remember_state
 317              		.cfi_restore 14
 318              		.cfi_restore 5
 319              		.cfi_restore 4
 320              		.cfi_restore 3
 321              		.cfi_def_cfa_offset 0
 322              	.LVL34:
 274:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	}
 323              		.loc 1 274 0
 324 00e6 FFF7FEBF 		b	xTaskResumeAll	@
 325              	.LVL35:
 326              	.L24:
 327              	.LCFI3:
 328              		.cfi_restore_state
 329 00ea 38BD     		pop	{r3, r4, r5, pc}	@
 330              	.L30:
 331              		.align	2
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 13


 332              	.L29:
 333 00ec 00000000 		.word	.LANCHOR0
 334 00f0 00000000 		.word	.LANCHOR2
 335              		.cfi_endproc
 336              	.LFE6:
 337              		.size	vPortFree, .-vPortFree
 338              		.align	1
 339              		.global	xPortGetFreeHeapSize
 340              		.thumb
 341              		.thumb_func
 342              		.type	xPortGetFreeHeapSize, %function
 343              	xPortGetFreeHeapSize:
 344              	.LFB7:
 280:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 345              		.loc 1 280 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 282:FreeRTOS/Source/portable/MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 350              		.loc 1 282 0
 351 00f4 014B     		ldr	r3, .L32	@ tmp113,
 352 00f6 1868     		ldr	r0, [r3]	@, xFreeBytesRemaining
 353 00f8 7047     		bx	lr	@
 354              	.L33:
 355 00fa 00BF     		.align	2
 356              	.L32:
 357 00fc 00000000 		.word	.LANCHOR2
 358              		.cfi_endproc
 359              	.LFE7:
 360              		.size	xPortGetFreeHeapSize, .-xPortGetFreeHeapSize
 361              		.align	1
 362              		.global	vPortInitialiseBlocks
 363              		.thumb
 364              		.thumb_func
 365              		.type	vPortInitialiseBlocks, %function
 366              	vPortInitialiseBlocks:
 367              	.LFB8:
 286:FreeRTOS/Source/portable/MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 368              		.loc 1 286 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0100 7047     		bx	lr	@
 374              		.cfi_endproc
 375              	.LFE8:
 376              		.size	vPortInitialiseBlocks, .-vPortInitialiseBlocks
 377              		.data
 378              		.align	2
 379              		.set	.LANCHOR2,. + 0
 380              		.type	xFreeBytesRemaining, %object
 381              		.size	xFreeBytesRemaining, 4
 382              	xFreeBytesRemaining:
 383 0000 F8430000 		.word	17400
 384              		.bss
 385              		.align	2
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 14


 386              		.set	.LANCHOR0,. + 0
 387              		.set	.LANCHOR1,. + 17376
 388              		.type	xStart, %object
 389              		.size	xStart, 8
 390              	xStart:
 391 0000 00000000 		.space	8
 391      00000000 
 392              		.type	xHeapHasBeenInitialised.5042, %object
 393              		.size	xHeapHasBeenInitialised.5042, 4
 394              	xHeapHasBeenInitialised.5042:
 395 0008 00000000 		.space	4
 396              		.type	ucHeap, %object
 397              		.size	ucHeap, 17408
 398              	ucHeap:
 399 000c 00000000 		.space	17408
 399      00000000 
 399      00000000 
 399      00000000 
 399      00000000 
 400              		.type	xEnd, %object
 401              		.size	xEnd, 8
 402              	xEnd:
 403 440c 00000000 		.space	8
 403      00000000 
 404              		.text
 405              	.Letext0:
 406              		.file 2 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h
 407              		.file 3 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/machine/_default_types
 408              		.file 4 "/usr/local/Cellar/arm-none-eabi-gcc/20150921/arm-none-eabi/include/sys/_stdint.h"
 409              		.file 5 "./FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h"
 410              		.file 6 "./FreeRTOS/Source/include/task.h"
 411 0102 00BF     		.section	.debug_info,"",%progbits
 412              	.Ldebug_info0:
 413 0000 5A030000 		.4byte	0x35a
 414 0004 0200     		.2byte	0x2
 415 0006 00000000 		.4byte	.Ldebug_abbrev0
 416 000a 04       		.byte	0x4
 417 000b 01       		.uleb128 0x1
 418 000c 29010000 		.4byte	.LASF37
 419 0010 01       		.byte	0x1
 420 0011 B6010000 		.4byte	.LASF38
 421 0015 1A020000 		.4byte	.LASF39
 422 0019 00000000 		.4byte	.Ltext0
 423 001d 02010000 		.4byte	.Letext0
 424 0021 00000000 		.4byte	.Ldebug_line0
 425 0025 02       		.uleb128 0x2
 426 0026 0A000000 		.4byte	.LASF2
 427 002a 02       		.byte	0x2
 428 002b D4       		.byte	0xd4
 429 002c 30000000 		.4byte	0x30
 430 0030 03       		.uleb128 0x3
 431 0031 04       		.byte	0x4
 432 0032 07       		.byte	0x7
 433 0033 0D020000 		.4byte	.LASF0
 434 0037 04       		.uleb128 0x4
 435 0038 04       		.byte	0x4
 436 0039 05       		.byte	0x5
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 15


 437 003a 696E7400 		.ascii	"int\000"
 438 003e 03       		.uleb128 0x3
 439 003f 01       		.byte	0x1
 440 0040 06       		.byte	0x6
 441 0041 F4020000 		.4byte	.LASF1
 442 0045 02       		.uleb128 0x2
 443 0046 00000000 		.4byte	.LASF3
 444 004a 03       		.byte	0x3
 445 004b 1D       		.byte	0x1d
 446 004c 50000000 		.4byte	0x50
 447 0050 03       		.uleb128 0x3
 448 0051 01       		.byte	0x1
 449 0052 08       		.byte	0x8
 450 0053 9E000000 		.4byte	.LASF4
 451 0057 03       		.uleb128 0x3
 452 0058 02       		.byte	0x2
 453 0059 05       		.byte	0x5
 454 005a BB020000 		.4byte	.LASF5
 455 005e 02       		.uleb128 0x2
 456 005f F9000000 		.4byte	.LASF6
 457 0063 03       		.byte	0x3
 458 0064 2B       		.byte	0x2b
 459 0065 69000000 		.4byte	0x69
 460 0069 03       		.uleb128 0x3
 461 006a 02       		.byte	0x2
 462 006b 07       		.byte	0x7
 463 006c C9000000 		.4byte	.LASF7
 464 0070 03       		.uleb128 0x3
 465 0071 04       		.byte	0x4
 466 0072 05       		.byte	0x5
 467 0073 EB020000 		.4byte	.LASF8
 468 0077 02       		.uleb128 0x2
 469 0078 1E010000 		.4byte	.LASF9
 470 007c 03       		.byte	0x3
 471 007d 41       		.byte	0x41
 472 007e 82000000 		.4byte	0x82
 473 0082 03       		.uleb128 0x3
 474 0083 04       		.byte	0x4
 475 0084 07       		.byte	0x7
 476 0085 B7000000 		.4byte	.LASF10
 477 0089 03       		.uleb128 0x3
 478 008a 08       		.byte	0x8
 479 008b 05       		.byte	0x5
 480 008c 82020000 		.4byte	.LASF11
 481 0090 03       		.uleb128 0x3
 482 0091 08       		.byte	0x8
 483 0092 07       		.byte	0x7
 484 0093 4B020000 		.4byte	.LASF12
 485 0097 03       		.uleb128 0x3
 486 0098 04       		.byte	0x4
 487 0099 07       		.byte	0x7
 488 009a 79020000 		.4byte	.LASF13
 489 009e 05       		.uleb128 0x5
 490 009f 04       		.byte	0x4
 491 00a0 03       		.uleb128 0x3
 492 00a1 01       		.byte	0x1
 493 00a2 08       		.byte	0x8
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 16


 494 00a3 9C020000 		.4byte	.LASF14
 495 00a7 02       		.uleb128 0x2
 496 00a8 62020000 		.4byte	.LASF15
 497 00ac 04       		.byte	0x4
 498 00ad 14       		.byte	0x14
 499 00ae 45000000 		.4byte	0x45
 500 00b2 02       		.uleb128 0x2
 501 00b3 C5020000 		.4byte	.LASF16
 502 00b7 04       		.byte	0x4
 503 00b8 1A       		.byte	0x1a
 504 00b9 5E000000 		.4byte	0x5e
 505 00bd 02       		.uleb128 0x2
 506 00be E2020000 		.4byte	.LASF17
 507 00c2 04       		.byte	0x4
 508 00c3 20       		.byte	0x20
 509 00c4 77000000 		.4byte	0x77
 510 00c8 02       		.uleb128 0x2
 511 00c9 10030000 		.4byte	.LASF18
 512 00cd 05       		.byte	0x5
 513 00ce 62       		.byte	0x62
 514 00cf 70000000 		.4byte	0x70
 515 00d3 06       		.uleb128 0x6
 516 00d4 04       		.byte	0x4
 517 00d5 A7000000 		.4byte	0xa7
 518 00d9 07       		.uleb128 0x7
 519 00da 36000000 		.4byte	.LASF40
 520 00de 08       		.byte	0x8
 521 00df 01       		.byte	0x1
 522 00e0 73       		.byte	0x73
 523 00e1 02010000 		.4byte	0x102
 524 00e5 08       		.uleb128 0x8
 525 00e6 00030000 		.4byte	.LASF19
 526 00ea 01       		.byte	0x1
 527 00eb 75       		.byte	0x75
 528 00ec 02010000 		.4byte	0x102
 529 00f0 02       		.byte	0x2
 530 00f1 23       		.byte	0x23
 531 00f2 00       		.uleb128 0
 532 00f3 08       		.uleb128 0x8
 533 00f4 AC000000 		.4byte	.LASF20
 534 00f8 01       		.byte	0x1
 535 00f9 76       		.byte	0x76
 536 00fa 25000000 		.4byte	0x25
 537 00fe 02       		.byte	0x2
 538 00ff 23       		.byte	0x23
 539 0100 04       		.uleb128 0x4
 540 0101 00       		.byte	0
 541 0102 06       		.uleb128 0x6
 542 0103 04       		.byte	0x4
 543 0104 D9000000 		.4byte	0xd9
 544 0108 02       		.uleb128 0x2
 545 0109 5E000000 		.4byte	.LASF21
 546 010d 01       		.byte	0x1
 547 010e 77       		.byte	0x77
 548 010f D9000000 		.4byte	0xd9
 549 0113 09       		.uleb128 0x9
 550 0114 43000000 		.4byte	.LASF41
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 17


 551 0118 01       		.byte	0x1
 552 0119 2301     		.2byte	0x123
 553 011b 01       		.byte	0x1
 554 011c 01       		.byte	0x1
 555 011d 3A010000 		.4byte	0x13a
 556 0121 0A       		.uleb128 0xa
 557 0122 86000000 		.4byte	.LASF22
 558 0126 01       		.byte	0x1
 559 0127 2501     		.2byte	0x125
 560 0129 3A010000 		.4byte	0x13a
 561 012d 0A       		.uleb128 0xa
 562 012e A1020000 		.4byte	.LASF23
 563 0132 01       		.byte	0x1
 564 0133 2601     		.2byte	0x126
 565 0135 D3000000 		.4byte	0xd3
 566 0139 00       		.byte	0
 567 013a 06       		.uleb128 0x6
 568 013b 04       		.byte	0x4
 569 013c 08010000 		.4byte	0x108
 570 0140 0B       		.uleb128 0xb
 571 0141 01       		.byte	0x1
 572 0142 79000000 		.4byte	.LASF42
 573 0146 01       		.byte	0x1
 574 0147 A0       		.byte	0xa0
 575 0148 01       		.byte	0x1
 576 0149 9E000000 		.4byte	0x9e
 577 014d 00000000 		.4byte	.LFB5
 578 0151 B4000000 		.4byte	.LFE5
 579 0155 00000000 		.4byte	.LLST0
 580 0159 01       		.byte	0x1
 581 015a 25020000 		.4byte	0x225
 582 015e 0C       		.uleb128 0xc
 583 015f 90020000 		.4byte	.LASF30
 584 0163 01       		.byte	0x1
 585 0164 A0       		.byte	0xa0
 586 0165 25000000 		.4byte	0x25
 587 0169 20000000 		.4byte	.LLST1
 588 016d 0D       		.uleb128 0xd
 589 016e 6A000000 		.4byte	.LASF24
 590 0172 01       		.byte	0x1
 591 0173 A2       		.byte	0xa2
 592 0174 3A010000 		.4byte	0x13a
 593 0178 70000000 		.4byte	.LLST2
 594 017c 0D       		.uleb128 0xd
 595 017d 04010000 		.4byte	.LASF25
 596 0181 01       		.byte	0x1
 597 0182 A2       		.byte	0xa2
 598 0183 3A010000 		.4byte	0x13a
 599 0187 99000000 		.4byte	.LLST3
 600 018b 0D       		.uleb128 0xd
 601 018c 6A020000 		.4byte	.LASF26
 602 0190 01       		.byte	0x1
 603 0191 A2       		.byte	0xa2
 604 0192 3A010000 		.4byte	0x13a
 605 0196 B1000000 		.4byte	.LLST4
 606 019a 0E       		.uleb128 0xe
 607 019b DC000000 		.4byte	.LASF27
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 18


 608 019f 01       		.byte	0x1
 609 01a0 A3       		.byte	0xa3
 610 01a1 C8000000 		.4byte	0xc8
 611 01a5 05       		.byte	0x5
 612 01a6 03       		.byte	0x3
 613 01a7 08000000 		.4byte	xHeapHasBeenInitialised.5042
 614 01ab 0D       		.uleb128 0xd
 615 01ac AD010000 		.4byte	.LASF28
 616 01b0 01       		.byte	0x1
 617 01b1 A4       		.byte	0xa4
 618 01b2 9E000000 		.4byte	0x9e
 619 01b6 C4000000 		.4byte	.LLST5
 620 01ba 0F       		.uleb128 0xf
 621 01bb 13010000 		.4byte	0x113
 622 01bf 0E000000 		.4byte	.LBB5
 623 01c3 00000000 		.4byte	.Ldebug_ranges0+0
 624 01c7 01       		.byte	0x1
 625 01c8 AC       		.byte	0xac
 626 01c9 E6010000 		.4byte	0x1e6
 627 01cd 10       		.uleb128 0x10
 628 01ce 00000000 		.4byte	.Ldebug_ranges0+0
 629 01d2 11       		.uleb128 0x11
 630 01d3 21010000 		.4byte	0x121
 631 01d7 05010000 		.4byte	.LLST6
 632 01db 11       		.uleb128 0x11
 633 01dc 2D010000 		.4byte	0x12d
 634 01e0 18010000 		.4byte	.LLST7
 635 01e4 00       		.byte	0
 636 01e5 00       		.byte	0
 637 01e6 12       		.uleb128 0x12
 638 01e7 7A000000 		.4byte	.LBB9
 639 01eb 8E000000 		.4byte	.LBE9
 640 01ef 12020000 		.4byte	0x212
 641 01f3 0D       		.uleb128 0xd
 642 01f4 B0020000 		.4byte	.LASF29
 643 01f8 01       		.byte	0x1
 644 01f9 E3       		.byte	0xe3
 645 01fa 3A010000 		.4byte	0x13a
 646 01fe 2B010000 		.4byte	.LLST8
 647 0202 0D       		.uleb128 0xd
 648 0203 AC000000 		.4byte	.LASF20
 649 0207 01       		.byte	0x1
 650 0208 E3       		.byte	0xe3
 651 0209 25000000 		.4byte	0x25
 652 020d 59010000 		.4byte	.LLST9
 653 0211 00       		.byte	0
 654 0212 13       		.uleb128 0x13
 655 0213 08000000 		.4byte	.LVL1
 656 0217 43030000 		.4byte	0x343
 657 021b 13       		.uleb128 0x13
 658 021c A0000000 		.4byte	.LVL23
 659 0220 4E030000 		.4byte	0x34e
 660 0224 00       		.byte	0
 661 0225 14       		.uleb128 0x14
 662 0226 01       		.byte	0x1
 663 0227 14010000 		.4byte	.LASF43
 664 022b 01       		.byte	0x1
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 19


 665 022c FC       		.byte	0xfc
 666 022d 01       		.byte	0x1
 667 022e B4000000 		.4byte	.LFB6
 668 0232 F4000000 		.4byte	.LFE6
 669 0236 6C010000 		.4byte	.LLST10
 670 023a 01       		.byte	0x1
 671 023b AD020000 		.4byte	0x2ad
 672 023f 15       		.uleb128 0x15
 673 0240 707600   		.ascii	"pv\000"
 674 0243 01       		.byte	0x1
 675 0244 FC       		.byte	0xfc
 676 0245 9E000000 		.4byte	0x9e
 677 0249 A4010000 		.4byte	.LLST11
 678 024d 16       		.uleb128 0x16
 679 024e 70756300 		.ascii	"puc\000"
 680 0252 01       		.byte	0x1
 681 0253 FE       		.byte	0xfe
 682 0254 D3000000 		.4byte	0xd3
 683 0258 DB010000 		.4byte	.LLST12
 684 025c 0D       		.uleb128 0xd
 685 025d 72000000 		.4byte	.LASF31
 686 0261 01       		.byte	0x1
 687 0262 FF       		.byte	0xff
 688 0263 3A010000 		.4byte	0x13a
 689 0267 14020000 		.4byte	.LLST13
 690 026b 12       		.uleb128 0x12
 691 026c C2000000 		.4byte	.LBB10
 692 0270 DA000000 		.4byte	.LBE10
 693 0274 99020000 		.4byte	0x299
 694 0278 17       		.uleb128 0x17
 695 0279 B0020000 		.4byte	.LASF29
 696 027d 01       		.byte	0x1
 697 027e 0E01     		.2byte	0x10e
 698 0280 3A010000 		.4byte	0x13a
 699 0284 37020000 		.4byte	.LLST14
 700 0288 17       		.uleb128 0x17
 701 0289 AC000000 		.4byte	.LASF20
 702 028d 01       		.byte	0x1
 703 028e 0E01     		.2byte	0x10e
 704 0290 25000000 		.4byte	0x25
 705 0294 65020000 		.4byte	.LLST15
 706 0298 00       		.byte	0
 707 0299 13       		.uleb128 0x13
 708 029a C2000000 		.4byte	.LVL27
 709 029e 43030000 		.4byte	0x343
 710 02a2 18       		.uleb128 0x18
 711 02a3 EA000000 		.4byte	.LVL35
 712 02a7 01       		.byte	0x1
 713 02a8 4E030000 		.4byte	0x34e
 714 02ac 00       		.byte	0
 715 02ad 19       		.uleb128 0x19
 716 02ae 01       		.byte	0x1
 717 02af 21000000 		.4byte	.LASF44
 718 02b3 01       		.byte	0x1
 719 02b4 1701     		.2byte	0x117
 720 02b6 01       		.byte	0x1
 721 02b7 25000000 		.4byte	0x25
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 20


 722 02bb F4000000 		.4byte	.LFB7
 723 02bf 00010000 		.4byte	.LFE7
 724 02c3 02       		.byte	0x2
 725 02c4 7D       		.byte	0x7d
 726 02c5 00       		.sleb128 0
 727 02c6 01       		.byte	0x1
 728 02c7 1A       		.uleb128 0x1a
 729 02c8 01       		.byte	0x1
 730 02c9 F7010000 		.4byte	.LASF45
 731 02cd 01       		.byte	0x1
 732 02ce 1D01     		.2byte	0x11d
 733 02d0 01       		.byte	0x1
 734 02d1 00010000 		.4byte	.LFB8
 735 02d5 02010000 		.4byte	.LFE8
 736 02d9 02       		.byte	0x2
 737 02da 7D       		.byte	0x7d
 738 02db 00       		.sleb128 0
 739 02dc 01       		.byte	0x1
 740 02dd 1B       		.uleb128 0x1b
 741 02de A7000000 		.4byte	0xa7
 742 02e2 EE020000 		.4byte	0x2ee
 743 02e6 1C       		.uleb128 0x1c
 744 02e7 97000000 		.4byte	0x97
 745 02eb FF43     		.2byte	0x43ff
 746 02ed 00       		.byte	0
 747 02ee 0E       		.uleb128 0xe
 748 02ef 97000000 		.4byte	.LASF32
 749 02f3 01       		.byte	0x1
 750 02f4 6D       		.byte	0x6d
 751 02f5 DD020000 		.4byte	0x2dd
 752 02f9 05       		.byte	0x5
 753 02fa 03       		.byte	0x3
 754 02fb 0C000000 		.4byte	ucHeap
 755 02ff 1D       		.uleb128 0x1d
 756 0300 E0010000 		.4byte	.LASF33
 757 0304 01       		.byte	0x1
 758 0305 7A       		.byte	0x7a
 759 0306 0B030000 		.4byte	0x30b
 760 030a 08       		.byte	0x8
 761 030b 1E       		.uleb128 0x1e
 762 030c B2000000 		.4byte	0xb2
 763 0310 0E       		.uleb128 0xe
 764 0311 F0010000 		.4byte	.LASF34
 765 0315 01       		.byte	0x1
 766 0316 7E       		.byte	0x7e
 767 0317 08010000 		.4byte	0x108
 768 031b 05       		.byte	0x5
 769 031c 03       		.byte	0x3
 770 031d 00000000 		.4byte	xStart
 771 0321 0E       		.uleb128 0xe
 772 0322 F4000000 		.4byte	.LASF35
 773 0326 01       		.byte	0x1
 774 0327 7E       		.byte	0x7e
 775 0328 08010000 		.4byte	0x108
 776 032c 05       		.byte	0x5
 777 032d 03       		.byte	0x3
 778 032e 0C440000 		.4byte	xEnd
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 21


 779 0332 0E       		.uleb128 0xe
 780 0333 CE020000 		.4byte	.LASF36
 781 0337 01       		.byte	0x1
 782 0338 82       		.byte	0x82
 783 0339 25000000 		.4byte	0x25
 784 033d 05       		.byte	0x5
 785 033e 03       		.byte	0x3
 786 033f 00000000 		.4byte	xFreeBytesRemaining
 787 0343 1F       		.uleb128 0x1f
 788 0344 01       		.byte	0x1
 789 0345 11000000 		.4byte	.LASF46
 790 0349 06       		.byte	0x6
 791 034a C304     		.2byte	0x4c3
 792 034c 01       		.byte	0x1
 793 034d 01       		.byte	0x1
 794 034e 20       		.uleb128 0x20
 795 034f 01       		.byte	0x1
 796 0350 4F000000 		.4byte	.LASF47
 797 0354 06       		.byte	0x6
 798 0355 F904     		.2byte	0x4f9
 799 0357 01       		.byte	0x1
 800 0358 C8000000 		.4byte	0xc8
 801 035c 01       		.byte	0x1
 802 035d 00       		.byte	0
 803              		.section	.debug_abbrev,"",%progbits
 804              	.Ldebug_abbrev0:
 805 0000 01       		.uleb128 0x1
 806 0001 11       		.uleb128 0x11
 807 0002 01       		.byte	0x1
 808 0003 25       		.uleb128 0x25
 809 0004 0E       		.uleb128 0xe
 810 0005 13       		.uleb128 0x13
 811 0006 0B       		.uleb128 0xb
 812 0007 03       		.uleb128 0x3
 813 0008 0E       		.uleb128 0xe
 814 0009 1B       		.uleb128 0x1b
 815 000a 0E       		.uleb128 0xe
 816 000b 11       		.uleb128 0x11
 817 000c 01       		.uleb128 0x1
 818 000d 12       		.uleb128 0x12
 819 000e 01       		.uleb128 0x1
 820 000f 10       		.uleb128 0x10
 821 0010 06       		.uleb128 0x6
 822 0011 00       		.byte	0
 823 0012 00       		.byte	0
 824 0013 02       		.uleb128 0x2
 825 0014 16       		.uleb128 0x16
 826 0015 00       		.byte	0
 827 0016 03       		.uleb128 0x3
 828 0017 0E       		.uleb128 0xe
 829 0018 3A       		.uleb128 0x3a
 830 0019 0B       		.uleb128 0xb
 831 001a 3B       		.uleb128 0x3b
 832 001b 0B       		.uleb128 0xb
 833 001c 49       		.uleb128 0x49
 834 001d 13       		.uleb128 0x13
 835 001e 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 22


 836 001f 00       		.byte	0
 837 0020 03       		.uleb128 0x3
 838 0021 24       		.uleb128 0x24
 839 0022 00       		.byte	0
 840 0023 0B       		.uleb128 0xb
 841 0024 0B       		.uleb128 0xb
 842 0025 3E       		.uleb128 0x3e
 843 0026 0B       		.uleb128 0xb
 844 0027 03       		.uleb128 0x3
 845 0028 0E       		.uleb128 0xe
 846 0029 00       		.byte	0
 847 002a 00       		.byte	0
 848 002b 04       		.uleb128 0x4
 849 002c 24       		.uleb128 0x24
 850 002d 00       		.byte	0
 851 002e 0B       		.uleb128 0xb
 852 002f 0B       		.uleb128 0xb
 853 0030 3E       		.uleb128 0x3e
 854 0031 0B       		.uleb128 0xb
 855 0032 03       		.uleb128 0x3
 856 0033 08       		.uleb128 0x8
 857 0034 00       		.byte	0
 858 0035 00       		.byte	0
 859 0036 05       		.uleb128 0x5
 860 0037 0F       		.uleb128 0xf
 861 0038 00       		.byte	0
 862 0039 0B       		.uleb128 0xb
 863 003a 0B       		.uleb128 0xb
 864 003b 00       		.byte	0
 865 003c 00       		.byte	0
 866 003d 06       		.uleb128 0x6
 867 003e 0F       		.uleb128 0xf
 868 003f 00       		.byte	0
 869 0040 0B       		.uleb128 0xb
 870 0041 0B       		.uleb128 0xb
 871 0042 49       		.uleb128 0x49
 872 0043 13       		.uleb128 0x13
 873 0044 00       		.byte	0
 874 0045 00       		.byte	0
 875 0046 07       		.uleb128 0x7
 876 0047 13       		.uleb128 0x13
 877 0048 01       		.byte	0x1
 878 0049 03       		.uleb128 0x3
 879 004a 0E       		.uleb128 0xe
 880 004b 0B       		.uleb128 0xb
 881 004c 0B       		.uleb128 0xb
 882 004d 3A       		.uleb128 0x3a
 883 004e 0B       		.uleb128 0xb
 884 004f 3B       		.uleb128 0x3b
 885 0050 0B       		.uleb128 0xb
 886 0051 01       		.uleb128 0x1
 887 0052 13       		.uleb128 0x13
 888 0053 00       		.byte	0
 889 0054 00       		.byte	0
 890 0055 08       		.uleb128 0x8
 891 0056 0D       		.uleb128 0xd
 892 0057 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 23


 893 0058 03       		.uleb128 0x3
 894 0059 0E       		.uleb128 0xe
 895 005a 3A       		.uleb128 0x3a
 896 005b 0B       		.uleb128 0xb
 897 005c 3B       		.uleb128 0x3b
 898 005d 0B       		.uleb128 0xb
 899 005e 49       		.uleb128 0x49
 900 005f 13       		.uleb128 0x13
 901 0060 38       		.uleb128 0x38
 902 0061 0A       		.uleb128 0xa
 903 0062 00       		.byte	0
 904 0063 00       		.byte	0
 905 0064 09       		.uleb128 0x9
 906 0065 2E       		.uleb128 0x2e
 907 0066 01       		.byte	0x1
 908 0067 03       		.uleb128 0x3
 909 0068 0E       		.uleb128 0xe
 910 0069 3A       		.uleb128 0x3a
 911 006a 0B       		.uleb128 0xb
 912 006b 3B       		.uleb128 0x3b
 913 006c 05       		.uleb128 0x5
 914 006d 27       		.uleb128 0x27
 915 006e 0C       		.uleb128 0xc
 916 006f 20       		.uleb128 0x20
 917 0070 0B       		.uleb128 0xb
 918 0071 01       		.uleb128 0x1
 919 0072 13       		.uleb128 0x13
 920 0073 00       		.byte	0
 921 0074 00       		.byte	0
 922 0075 0A       		.uleb128 0xa
 923 0076 34       		.uleb128 0x34
 924 0077 00       		.byte	0
 925 0078 03       		.uleb128 0x3
 926 0079 0E       		.uleb128 0xe
 927 007a 3A       		.uleb128 0x3a
 928 007b 0B       		.uleb128 0xb
 929 007c 3B       		.uleb128 0x3b
 930 007d 05       		.uleb128 0x5
 931 007e 49       		.uleb128 0x49
 932 007f 13       		.uleb128 0x13
 933 0080 00       		.byte	0
 934 0081 00       		.byte	0
 935 0082 0B       		.uleb128 0xb
 936 0083 2E       		.uleb128 0x2e
 937 0084 01       		.byte	0x1
 938 0085 3F       		.uleb128 0x3f
 939 0086 0C       		.uleb128 0xc
 940 0087 03       		.uleb128 0x3
 941 0088 0E       		.uleb128 0xe
 942 0089 3A       		.uleb128 0x3a
 943 008a 0B       		.uleb128 0xb
 944 008b 3B       		.uleb128 0x3b
 945 008c 0B       		.uleb128 0xb
 946 008d 27       		.uleb128 0x27
 947 008e 0C       		.uleb128 0xc
 948 008f 49       		.uleb128 0x49
 949 0090 13       		.uleb128 0x13
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 24


 950 0091 11       		.uleb128 0x11
 951 0092 01       		.uleb128 0x1
 952 0093 12       		.uleb128 0x12
 953 0094 01       		.uleb128 0x1
 954 0095 40       		.uleb128 0x40
 955 0096 06       		.uleb128 0x6
 956 0097 9742     		.uleb128 0x2117
 957 0099 0C       		.uleb128 0xc
 958 009a 01       		.uleb128 0x1
 959 009b 13       		.uleb128 0x13
 960 009c 00       		.byte	0
 961 009d 00       		.byte	0
 962 009e 0C       		.uleb128 0xc
 963 009f 05       		.uleb128 0x5
 964 00a0 00       		.byte	0
 965 00a1 03       		.uleb128 0x3
 966 00a2 0E       		.uleb128 0xe
 967 00a3 3A       		.uleb128 0x3a
 968 00a4 0B       		.uleb128 0xb
 969 00a5 3B       		.uleb128 0x3b
 970 00a6 0B       		.uleb128 0xb
 971 00a7 49       		.uleb128 0x49
 972 00a8 13       		.uleb128 0x13
 973 00a9 02       		.uleb128 0x2
 974 00aa 06       		.uleb128 0x6
 975 00ab 00       		.byte	0
 976 00ac 00       		.byte	0
 977 00ad 0D       		.uleb128 0xd
 978 00ae 34       		.uleb128 0x34
 979 00af 00       		.byte	0
 980 00b0 03       		.uleb128 0x3
 981 00b1 0E       		.uleb128 0xe
 982 00b2 3A       		.uleb128 0x3a
 983 00b3 0B       		.uleb128 0xb
 984 00b4 3B       		.uleb128 0x3b
 985 00b5 0B       		.uleb128 0xb
 986 00b6 49       		.uleb128 0x49
 987 00b7 13       		.uleb128 0x13
 988 00b8 02       		.uleb128 0x2
 989 00b9 06       		.uleb128 0x6
 990 00ba 00       		.byte	0
 991 00bb 00       		.byte	0
 992 00bc 0E       		.uleb128 0xe
 993 00bd 34       		.uleb128 0x34
 994 00be 00       		.byte	0
 995 00bf 03       		.uleb128 0x3
 996 00c0 0E       		.uleb128 0xe
 997 00c1 3A       		.uleb128 0x3a
 998 00c2 0B       		.uleb128 0xb
 999 00c3 3B       		.uleb128 0x3b
 1000 00c4 0B       		.uleb128 0xb
 1001 00c5 49       		.uleb128 0x49
 1002 00c6 13       		.uleb128 0x13
 1003 00c7 02       		.uleb128 0x2
 1004 00c8 0A       		.uleb128 0xa
 1005 00c9 00       		.byte	0
 1006 00ca 00       		.byte	0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 25


 1007 00cb 0F       		.uleb128 0xf
 1008 00cc 1D       		.uleb128 0x1d
 1009 00cd 01       		.byte	0x1
 1010 00ce 31       		.uleb128 0x31
 1011 00cf 13       		.uleb128 0x13
 1012 00d0 52       		.uleb128 0x52
 1013 00d1 01       		.uleb128 0x1
 1014 00d2 55       		.uleb128 0x55
 1015 00d3 06       		.uleb128 0x6
 1016 00d4 58       		.uleb128 0x58
 1017 00d5 0B       		.uleb128 0xb
 1018 00d6 59       		.uleb128 0x59
 1019 00d7 0B       		.uleb128 0xb
 1020 00d8 01       		.uleb128 0x1
 1021 00d9 13       		.uleb128 0x13
 1022 00da 00       		.byte	0
 1023 00db 00       		.byte	0
 1024 00dc 10       		.uleb128 0x10
 1025 00dd 0B       		.uleb128 0xb
 1026 00de 01       		.byte	0x1
 1027 00df 55       		.uleb128 0x55
 1028 00e0 06       		.uleb128 0x6
 1029 00e1 00       		.byte	0
 1030 00e2 00       		.byte	0
 1031 00e3 11       		.uleb128 0x11
 1032 00e4 34       		.uleb128 0x34
 1033 00e5 00       		.byte	0
 1034 00e6 31       		.uleb128 0x31
 1035 00e7 13       		.uleb128 0x13
 1036 00e8 02       		.uleb128 0x2
 1037 00e9 06       		.uleb128 0x6
 1038 00ea 00       		.byte	0
 1039 00eb 00       		.byte	0
 1040 00ec 12       		.uleb128 0x12
 1041 00ed 0B       		.uleb128 0xb
 1042 00ee 01       		.byte	0x1
 1043 00ef 11       		.uleb128 0x11
 1044 00f0 01       		.uleb128 0x1
 1045 00f1 12       		.uleb128 0x12
 1046 00f2 01       		.uleb128 0x1
 1047 00f3 01       		.uleb128 0x1
 1048 00f4 13       		.uleb128 0x13
 1049 00f5 00       		.byte	0
 1050 00f6 00       		.byte	0
 1051 00f7 13       		.uleb128 0x13
 1052 00f8 898201   		.uleb128 0x4109
 1053 00fb 00       		.byte	0
 1054 00fc 11       		.uleb128 0x11
 1055 00fd 01       		.uleb128 0x1
 1056 00fe 31       		.uleb128 0x31
 1057 00ff 13       		.uleb128 0x13
 1058 0100 00       		.byte	0
 1059 0101 00       		.byte	0
 1060 0102 14       		.uleb128 0x14
 1061 0103 2E       		.uleb128 0x2e
 1062 0104 01       		.byte	0x1
 1063 0105 3F       		.uleb128 0x3f
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 26


 1064 0106 0C       		.uleb128 0xc
 1065 0107 03       		.uleb128 0x3
 1066 0108 0E       		.uleb128 0xe
 1067 0109 3A       		.uleb128 0x3a
 1068 010a 0B       		.uleb128 0xb
 1069 010b 3B       		.uleb128 0x3b
 1070 010c 0B       		.uleb128 0xb
 1071 010d 27       		.uleb128 0x27
 1072 010e 0C       		.uleb128 0xc
 1073 010f 11       		.uleb128 0x11
 1074 0110 01       		.uleb128 0x1
 1075 0111 12       		.uleb128 0x12
 1076 0112 01       		.uleb128 0x1
 1077 0113 40       		.uleb128 0x40
 1078 0114 06       		.uleb128 0x6
 1079 0115 9742     		.uleb128 0x2117
 1080 0117 0C       		.uleb128 0xc
 1081 0118 01       		.uleb128 0x1
 1082 0119 13       		.uleb128 0x13
 1083 011a 00       		.byte	0
 1084 011b 00       		.byte	0
 1085 011c 15       		.uleb128 0x15
 1086 011d 05       		.uleb128 0x5
 1087 011e 00       		.byte	0
 1088 011f 03       		.uleb128 0x3
 1089 0120 08       		.uleb128 0x8
 1090 0121 3A       		.uleb128 0x3a
 1091 0122 0B       		.uleb128 0xb
 1092 0123 3B       		.uleb128 0x3b
 1093 0124 0B       		.uleb128 0xb
 1094 0125 49       		.uleb128 0x49
 1095 0126 13       		.uleb128 0x13
 1096 0127 02       		.uleb128 0x2
 1097 0128 06       		.uleb128 0x6
 1098 0129 00       		.byte	0
 1099 012a 00       		.byte	0
 1100 012b 16       		.uleb128 0x16
 1101 012c 34       		.uleb128 0x34
 1102 012d 00       		.byte	0
 1103 012e 03       		.uleb128 0x3
 1104 012f 08       		.uleb128 0x8
 1105 0130 3A       		.uleb128 0x3a
 1106 0131 0B       		.uleb128 0xb
 1107 0132 3B       		.uleb128 0x3b
 1108 0133 0B       		.uleb128 0xb
 1109 0134 49       		.uleb128 0x49
 1110 0135 13       		.uleb128 0x13
 1111 0136 02       		.uleb128 0x2
 1112 0137 06       		.uleb128 0x6
 1113 0138 00       		.byte	0
 1114 0139 00       		.byte	0
 1115 013a 17       		.uleb128 0x17
 1116 013b 34       		.uleb128 0x34
 1117 013c 00       		.byte	0
 1118 013d 03       		.uleb128 0x3
 1119 013e 0E       		.uleb128 0xe
 1120 013f 3A       		.uleb128 0x3a
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 27


 1121 0140 0B       		.uleb128 0xb
 1122 0141 3B       		.uleb128 0x3b
 1123 0142 05       		.uleb128 0x5
 1124 0143 49       		.uleb128 0x49
 1125 0144 13       		.uleb128 0x13
 1126 0145 02       		.uleb128 0x2
 1127 0146 06       		.uleb128 0x6
 1128 0147 00       		.byte	0
 1129 0148 00       		.byte	0
 1130 0149 18       		.uleb128 0x18
 1131 014a 898201   		.uleb128 0x4109
 1132 014d 00       		.byte	0
 1133 014e 11       		.uleb128 0x11
 1134 014f 01       		.uleb128 0x1
 1135 0150 9542     		.uleb128 0x2115
 1136 0152 0C       		.uleb128 0xc
 1137 0153 31       		.uleb128 0x31
 1138 0154 13       		.uleb128 0x13
 1139 0155 00       		.byte	0
 1140 0156 00       		.byte	0
 1141 0157 19       		.uleb128 0x19
 1142 0158 2E       		.uleb128 0x2e
 1143 0159 00       		.byte	0
 1144 015a 3F       		.uleb128 0x3f
 1145 015b 0C       		.uleb128 0xc
 1146 015c 03       		.uleb128 0x3
 1147 015d 0E       		.uleb128 0xe
 1148 015e 3A       		.uleb128 0x3a
 1149 015f 0B       		.uleb128 0xb
 1150 0160 3B       		.uleb128 0x3b
 1151 0161 05       		.uleb128 0x5
 1152 0162 27       		.uleb128 0x27
 1153 0163 0C       		.uleb128 0xc
 1154 0164 49       		.uleb128 0x49
 1155 0165 13       		.uleb128 0x13
 1156 0166 11       		.uleb128 0x11
 1157 0167 01       		.uleb128 0x1
 1158 0168 12       		.uleb128 0x12
 1159 0169 01       		.uleb128 0x1
 1160 016a 40       		.uleb128 0x40
 1161 016b 0A       		.uleb128 0xa
 1162 016c 9742     		.uleb128 0x2117
 1163 016e 0C       		.uleb128 0xc
 1164 016f 00       		.byte	0
 1165 0170 00       		.byte	0
 1166 0171 1A       		.uleb128 0x1a
 1167 0172 2E       		.uleb128 0x2e
 1168 0173 00       		.byte	0
 1169 0174 3F       		.uleb128 0x3f
 1170 0175 0C       		.uleb128 0xc
 1171 0176 03       		.uleb128 0x3
 1172 0177 0E       		.uleb128 0xe
 1173 0178 3A       		.uleb128 0x3a
 1174 0179 0B       		.uleb128 0xb
 1175 017a 3B       		.uleb128 0x3b
 1176 017b 05       		.uleb128 0x5
 1177 017c 27       		.uleb128 0x27
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 28


 1178 017d 0C       		.uleb128 0xc
 1179 017e 11       		.uleb128 0x11
 1180 017f 01       		.uleb128 0x1
 1181 0180 12       		.uleb128 0x12
 1182 0181 01       		.uleb128 0x1
 1183 0182 40       		.uleb128 0x40
 1184 0183 0A       		.uleb128 0xa
 1185 0184 9742     		.uleb128 0x2117
 1186 0186 0C       		.uleb128 0xc
 1187 0187 00       		.byte	0
 1188 0188 00       		.byte	0
 1189 0189 1B       		.uleb128 0x1b
 1190 018a 01       		.uleb128 0x1
 1191 018b 01       		.byte	0x1
 1192 018c 49       		.uleb128 0x49
 1193 018d 13       		.uleb128 0x13
 1194 018e 01       		.uleb128 0x1
 1195 018f 13       		.uleb128 0x13
 1196 0190 00       		.byte	0
 1197 0191 00       		.byte	0
 1198 0192 1C       		.uleb128 0x1c
 1199 0193 21       		.uleb128 0x21
 1200 0194 00       		.byte	0
 1201 0195 49       		.uleb128 0x49
 1202 0196 13       		.uleb128 0x13
 1203 0197 2F       		.uleb128 0x2f
 1204 0198 05       		.uleb128 0x5
 1205 0199 00       		.byte	0
 1206 019a 00       		.byte	0
 1207 019b 1D       		.uleb128 0x1d
 1208 019c 34       		.uleb128 0x34
 1209 019d 00       		.byte	0
 1210 019e 03       		.uleb128 0x3
 1211 019f 0E       		.uleb128 0xe
 1212 01a0 3A       		.uleb128 0x3a
 1213 01a1 0B       		.uleb128 0xb
 1214 01a2 3B       		.uleb128 0x3b
 1215 01a3 0B       		.uleb128 0xb
 1216 01a4 49       		.uleb128 0x49
 1217 01a5 13       		.uleb128 0x13
 1218 01a6 1C       		.uleb128 0x1c
 1219 01a7 0B       		.uleb128 0xb
 1220 01a8 00       		.byte	0
 1221 01a9 00       		.byte	0
 1222 01aa 1E       		.uleb128 0x1e
 1223 01ab 26       		.uleb128 0x26
 1224 01ac 00       		.byte	0
 1225 01ad 49       		.uleb128 0x49
 1226 01ae 13       		.uleb128 0x13
 1227 01af 00       		.byte	0
 1228 01b0 00       		.byte	0
 1229 01b1 1F       		.uleb128 0x1f
 1230 01b2 2E       		.uleb128 0x2e
 1231 01b3 00       		.byte	0
 1232 01b4 3F       		.uleb128 0x3f
 1233 01b5 0C       		.uleb128 0xc
 1234 01b6 03       		.uleb128 0x3
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 29


 1235 01b7 0E       		.uleb128 0xe
 1236 01b8 3A       		.uleb128 0x3a
 1237 01b9 0B       		.uleb128 0xb
 1238 01ba 3B       		.uleb128 0x3b
 1239 01bb 05       		.uleb128 0x5
 1240 01bc 27       		.uleb128 0x27
 1241 01bd 0C       		.uleb128 0xc
 1242 01be 3C       		.uleb128 0x3c
 1243 01bf 0C       		.uleb128 0xc
 1244 01c0 00       		.byte	0
 1245 01c1 00       		.byte	0
 1246 01c2 20       		.uleb128 0x20
 1247 01c3 2E       		.uleb128 0x2e
 1248 01c4 00       		.byte	0
 1249 01c5 3F       		.uleb128 0x3f
 1250 01c6 0C       		.uleb128 0xc
 1251 01c7 03       		.uleb128 0x3
 1252 01c8 0E       		.uleb128 0xe
 1253 01c9 3A       		.uleb128 0x3a
 1254 01ca 0B       		.uleb128 0xb
 1255 01cb 3B       		.uleb128 0x3b
 1256 01cc 05       		.uleb128 0x5
 1257 01cd 27       		.uleb128 0x27
 1258 01ce 0C       		.uleb128 0xc
 1259 01cf 49       		.uleb128 0x49
 1260 01d0 13       		.uleb128 0x13
 1261 01d1 3C       		.uleb128 0x3c
 1262 01d2 0C       		.uleb128 0xc
 1263 01d3 00       		.byte	0
 1264 01d4 00       		.byte	0
 1265 01d5 00       		.byte	0
 1266              		.section	.debug_loc,"",%progbits
 1267              	.Ldebug_loc0:
 1268              	.LLST0:
 1269 0000 00000000 		.4byte	.LFB5-.Ltext0
 1270 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1271 0008 0200     		.2byte	0x2
 1272 000a 7D       		.byte	0x7d
 1273 000b 00       		.sleb128 0
 1274 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1275 0010 B4000000 		.4byte	.LFE5-.Ltext0
 1276 0014 0200     		.2byte	0x2
 1277 0016 7D       		.byte	0x7d
 1278 0017 10       		.sleb128 16
 1279 0018 00000000 		.4byte	0
 1280 001c 00000000 		.4byte	0
 1281              	.LLST1:
 1282 0020 00000000 		.4byte	.LVL0-.Ltext0
 1283 0024 07000000 		.4byte	.LVL1-1-.Ltext0
 1284 0028 0100     		.2byte	0x1
 1285 002a 50       		.byte	0x50
 1286 002b 07000000 		.4byte	.LVL1-1-.Ltext0
 1287 002f 3A000000 		.4byte	.LVL6-.Ltext0
 1288 0033 0100     		.2byte	0x1
 1289 0035 54       		.byte	0x54
 1290 0036 3A000000 		.4byte	.LVL6-.Ltext0
 1291 003a 3C000000 		.4byte	.LVL7-.Ltext0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 30


 1292 003e 0600     		.2byte	0x6
 1293 0040 F3       		.byte	0xf3
 1294 0041 01       		.uleb128 0x1
 1295 0042 50       		.byte	0x50
 1296 0043 23       		.byte	0x23
 1297 0044 08       		.uleb128 0x8
 1298 0045 9F       		.byte	0x9f
 1299 0046 3C000000 		.4byte	.LVL7-.Ltext0
 1300 004a 7C000000 		.4byte	.LVL15-.Ltext0
 1301 004e 0100     		.2byte	0x1
 1302 0050 54       		.byte	0x54
 1303 0051 7C000000 		.4byte	.LVL15-.Ltext0
 1304 0055 8E000000 		.4byte	.LVL19-.Ltext0
 1305 0059 0200     		.2byte	0x2
 1306 005b 73       		.byte	0x73
 1307 005c 04       		.sleb128 4
 1308 005d 9A000000 		.4byte	.LVL21-.Ltext0
 1309 0061 9C000000 		.4byte	.LVL22-.Ltext0
 1310 0065 0100     		.2byte	0x1
 1311 0067 54       		.byte	0x54
 1312 0068 00000000 		.4byte	0
 1313 006c 00000000 		.4byte	0
 1314              	.LLST2:
 1315 0070 48000000 		.4byte	.LVL9-.Ltext0
 1316 0074 62000000 		.4byte	.LVL11-.Ltext0
 1317 0078 0100     		.2byte	0x1
 1318 007a 53       		.byte	0x53
 1319 007b 62000000 		.4byte	.LVL11-.Ltext0
 1320 007f 64000000 		.4byte	.LVL12-.Ltext0
 1321 0083 0100     		.2byte	0x1
 1322 0085 51       		.byte	0x51
 1323 0086 64000000 		.4byte	.LVL12-.Ltext0
 1324 008a 92000000 		.4byte	.LVL20-.Ltext0
 1325 008e 0100     		.2byte	0x1
 1326 0090 53       		.byte	0x53
 1327 0091 00000000 		.4byte	0
 1328 0095 00000000 		.4byte	0
 1329              	.LLST3:
 1330 0099 46000000 		.4byte	.LVL8-.Ltext0
 1331 009d 4A000000 		.4byte	.LVL10-.Ltext0
 1332 00a1 0600     		.2byte	0x6
 1333 00a3 03       		.byte	0x3
 1334 00a4 00000000 		.4byte	xStart
 1335 00a8 9F       		.byte	0x9f
 1336 00a9 00000000 		.4byte	0
 1337 00ad 00000000 		.4byte	0
 1338              	.LLST4:
 1339 00b1 76000000 		.4byte	.LVL14-.Ltext0
 1340 00b5 8E000000 		.4byte	.LVL19-.Ltext0
 1341 00b9 0100     		.2byte	0x1
 1342 00bb 51       		.byte	0x51
 1343 00bc 00000000 		.4byte	0
 1344 00c0 00000000 		.4byte	0
 1345              	.LLST5:
 1346 00c4 00000000 		.4byte	.LVL0-.Ltext0
 1347 00c8 70000000 		.4byte	.LVL13-.Ltext0
 1348 00cc 0200     		.2byte	0x2
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 31


 1349 00ce 30       		.byte	0x30
 1350 00cf 9F       		.byte	0x9f
 1351 00d0 70000000 		.4byte	.LVL13-.Ltext0
 1352 00d4 9A000000 		.4byte	.LVL21-.Ltext0
 1353 00d8 0100     		.2byte	0x1
 1354 00da 55       		.byte	0x55
 1355 00db 9A000000 		.4byte	.LVL21-.Ltext0
 1356 00df 9C000000 		.4byte	.LVL22-.Ltext0
 1357 00e3 0200     		.2byte	0x2
 1358 00e5 30       		.byte	0x30
 1359 00e6 9F       		.byte	0x9f
 1360 00e7 9C000000 		.4byte	.LVL22-.Ltext0
 1361 00eb A4000000 		.4byte	.LVL24-.Ltext0
 1362 00ef 0100     		.2byte	0x1
 1363 00f1 55       		.byte	0x55
 1364 00f2 A4000000 		.4byte	.LVL24-.Ltext0
 1365 00f6 B4000000 		.4byte	.LFE5-.Ltext0
 1366 00fa 0100     		.2byte	0x1
 1367 00fc 50       		.byte	0x50
 1368 00fd 00000000 		.4byte	0
 1369 0101 00000000 		.4byte	0
 1370              	.LLST6:
 1371 0105 22000000 		.4byte	.LVL3-.Ltext0
 1372 0109 2E000000 		.4byte	.LVL4-.Ltext0
 1373 010d 0100     		.2byte	0x1
 1374 010f 51       		.byte	0x51
 1375 0110 00000000 		.4byte	0
 1376 0114 00000000 		.4byte	0
 1377              	.LLST7:
 1378 0118 1C000000 		.4byte	.LVL2-.Ltext0
 1379 011c 2E000000 		.4byte	.LVL4-.Ltext0
 1380 0120 0100     		.2byte	0x1
 1381 0122 51       		.byte	0x51
 1382 0123 00000000 		.4byte	0
 1383 0127 00000000 		.4byte	0
 1384              	.LLST8:
 1385 012b 7C000000 		.4byte	.LVL15-.Ltext0
 1386 012f 7E000000 		.4byte	.LVL16-.Ltext0
 1387 0133 0600     		.2byte	0x6
 1388 0135 03       		.byte	0x3
 1389 0136 00000000 		.4byte	xStart
 1390 013a 9F       		.byte	0x9f
 1391 013b 7E000000 		.4byte	.LVL16-.Ltext0
 1392 013f 88000000 		.4byte	.LVL17-.Ltext0
 1393 0143 0100     		.2byte	0x1
 1394 0145 52       		.byte	0x52
 1395 0146 8A000000 		.4byte	.LVL18-.Ltext0
 1396 014a 8E000000 		.4byte	.LVL19-.Ltext0
 1397 014e 0100     		.2byte	0x1
 1398 0150 52       		.byte	0x52
 1399 0151 00000000 		.4byte	0
 1400 0155 00000000 		.4byte	0
 1401              	.LLST9:
 1402 0159 7C000000 		.4byte	.LVL15-.Ltext0
 1403 015d 8E000000 		.4byte	.LVL19-.Ltext0
 1404 0161 0100     		.2byte	0x1
 1405 0163 54       		.byte	0x54
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 32


 1406 0164 00000000 		.4byte	0
 1407 0168 00000000 		.4byte	0
 1408              	.LLST10:
 1409 016c B4000000 		.4byte	.LFB6-.Ltext0
 1410 0170 B6000000 		.4byte	.LCFI1-.Ltext0
 1411 0174 0200     		.2byte	0x2
 1412 0176 7D       		.byte	0x7d
 1413 0177 00       		.sleb128 0
 1414 0178 B6000000 		.4byte	.LCFI1-.Ltext0
 1415 017c E6000000 		.4byte	.LCFI2-.Ltext0
 1416 0180 0200     		.2byte	0x2
 1417 0182 7D       		.byte	0x7d
 1418 0183 10       		.sleb128 16
 1419 0184 E6000000 		.4byte	.LCFI2-.Ltext0
 1420 0188 EA000000 		.4byte	.LCFI3-.Ltext0
 1421 018c 0200     		.2byte	0x2
 1422 018e 7D       		.byte	0x7d
 1423 018f 00       		.sleb128 0
 1424 0190 EA000000 		.4byte	.LCFI3-.Ltext0
 1425 0194 F4000000 		.4byte	.LFE6-.Ltext0
 1426 0198 0200     		.2byte	0x2
 1427 019a 7D       		.byte	0x7d
 1428 019b 10       		.sleb128 16
 1429 019c 00000000 		.4byte	0
 1430 01a0 00000000 		.4byte	0
 1431              	.LLST11:
 1432 01a4 B4000000 		.4byte	.LVL25-.Ltext0
 1433 01a8 C1000000 		.4byte	.LVL27-1-.Ltext0
 1434 01ac 0100     		.2byte	0x1
 1435 01ae 50       		.byte	0x50
 1436 01af C1000000 		.4byte	.LVL27-1-.Ltext0
 1437 01b3 E6000000 		.4byte	.LVL34-.Ltext0
 1438 01b7 0100     		.2byte	0x1
 1439 01b9 54       		.byte	0x54
 1440 01ba E6000000 		.4byte	.LVL34-.Ltext0
 1441 01be EA000000 		.4byte	.LVL35-.Ltext0
 1442 01c2 0400     		.2byte	0x4
 1443 01c4 F3       		.byte	0xf3
 1444 01c5 01       		.uleb128 0x1
 1445 01c6 50       		.byte	0x50
 1446 01c7 9F       		.byte	0x9f
 1447 01c8 EA000000 		.4byte	.LVL35-.Ltext0
 1448 01cc F4000000 		.4byte	.LFE6-.Ltext0
 1449 01d0 0100     		.2byte	0x1
 1450 01d2 50       		.byte	0x50
 1451 01d3 00000000 		.4byte	0
 1452 01d7 00000000 		.4byte	0
 1453              	.LLST12:
 1454 01db B4000000 		.4byte	.LVL25-.Ltext0
 1455 01df BE000000 		.4byte	.LVL26-.Ltext0
 1456 01e3 0100     		.2byte	0x1
 1457 01e5 50       		.byte	0x50
 1458 01e6 BE000000 		.4byte	.LVL26-.Ltext0
 1459 01ea E6000000 		.4byte	.LVL34-.Ltext0
 1460 01ee 0100     		.2byte	0x1
 1461 01f0 55       		.byte	0x55
 1462 01f1 E6000000 		.4byte	.LVL34-.Ltext0
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 33


 1463 01f5 EA000000 		.4byte	.LVL35-.Ltext0
 1464 01f9 0600     		.2byte	0x6
 1465 01fb F3       		.byte	0xf3
 1466 01fc 01       		.uleb128 0x1
 1467 01fd 50       		.byte	0x50
 1468 01fe 38       		.byte	0x38
 1469 01ff 1C       		.byte	0x1c
 1470 0200 9F       		.byte	0x9f
 1471 0201 EA000000 		.4byte	.LVL35-.Ltext0
 1472 0205 F4000000 		.4byte	.LFE6-.Ltext0
 1473 0209 0100     		.2byte	0x1
 1474 020b 50       		.byte	0x50
 1475 020c 00000000 		.4byte	0
 1476 0210 00000000 		.4byte	0
 1477              	.LLST13:
 1478 0214 BE000000 		.4byte	.LVL26-.Ltext0
 1479 0218 E6000000 		.4byte	.LVL34-.Ltext0
 1480 021c 0100     		.2byte	0x1
 1481 021e 55       		.byte	0x55
 1482 021f E6000000 		.4byte	.LVL34-.Ltext0
 1483 0223 EA000000 		.4byte	.LVL35-.Ltext0
 1484 0227 0600     		.2byte	0x6
 1485 0229 F3       		.byte	0xf3
 1486 022a 01       		.uleb128 0x1
 1487 022b 50       		.byte	0x50
 1488 022c 38       		.byte	0x38
 1489 022d 1C       		.byte	0x1c
 1490 022e 9F       		.byte	0x9f
 1491 022f 00000000 		.4byte	0
 1492 0233 00000000 		.4byte	0
 1493              	.LLST14:
 1494 0237 C6000000 		.4byte	.LVL28-.Ltext0
 1495 023b C8000000 		.4byte	.LVL29-.Ltext0
 1496 023f 0600     		.2byte	0x6
 1497 0241 03       		.byte	0x3
 1498 0242 00000000 		.4byte	xStart
 1499 0246 9F       		.byte	0x9f
 1500 0247 C8000000 		.4byte	.LVL29-.Ltext0
 1501 024b D2000000 		.4byte	.LVL30-.Ltext0
 1502 024f 0100     		.2byte	0x1
 1503 0251 52       		.byte	0x52
 1504 0252 D4000000 		.4byte	.LVL31-.Ltext0
 1505 0256 DC000000 		.4byte	.LVL32-.Ltext0
 1506 025a 0100     		.2byte	0x1
 1507 025c 52       		.byte	0x52
 1508 025d 00000000 		.4byte	0
 1509 0261 00000000 		.4byte	0
 1510              	.LLST15:
 1511 0265 C6000000 		.4byte	.LVL28-.Ltext0
 1512 0269 E0000000 		.4byte	.LVL33-.Ltext0
 1513 026d 0100     		.2byte	0x1
 1514 026f 53       		.byte	0x53
 1515 0270 E0000000 		.4byte	.LVL33-.Ltext0
 1516 0274 E6000000 		.4byte	.LVL34-.Ltext0
 1517 0278 0200     		.2byte	0x2
 1518 027a 74       		.byte	0x74
 1519 027b 7C       		.sleb128 -4
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 34


 1520 027c E6000000 		.4byte	.LVL34-.Ltext0
 1521 0280 E9000000 		.4byte	.LVL35-1-.Ltext0
 1522 0284 0500     		.2byte	0x5
 1523 0286 F3       		.byte	0xf3
 1524 0287 01       		.uleb128 0x1
 1525 0288 50       		.byte	0x50
 1526 0289 34       		.byte	0x34
 1527 028a 1C       		.byte	0x1c
 1528 028b 00000000 		.4byte	0
 1529 028f 00000000 		.4byte	0
 1530              		.section	.debug_aranges,"",%progbits
 1531 0000 1C000000 		.4byte	0x1c
 1532 0004 0200     		.2byte	0x2
 1533 0006 00000000 		.4byte	.Ldebug_info0
 1534 000a 04       		.byte	0x4
 1535 000b 00       		.byte	0
 1536 000c 0000     		.2byte	0
 1537 000e 0000     		.2byte	0
 1538 0010 00000000 		.4byte	.Ltext0
 1539 0014 02010000 		.4byte	.Letext0-.Ltext0
 1540 0018 00000000 		.4byte	0
 1541 001c 00000000 		.4byte	0
 1542              		.section	.debug_ranges,"",%progbits
 1543              	.Ldebug_ranges0:
 1544 0000 0E000000 		.4byte	.LBB5-.Ltext0
 1545 0004 26000000 		.4byte	.LBE5-.Ltext0
 1546 0008 28000000 		.4byte	.LBB8-.Ltext0
 1547 000c 2C000000 		.4byte	.LBE8-.Ltext0
 1548 0010 00000000 		.4byte	0
 1549 0014 00000000 		.4byte	0
 1550              		.section	.debug_line,"",%progbits
 1551              	.Ldebug_line0:
 1552 0000 34020000 		.section	.debug_str,"MS",%progbits,1
 1552      0200BF01 
 1552      00000201 
 1552      FB0E0D00 
 1552      01010101 
 1553              	.LASF3:
 1554 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1554      6E74385F 
 1554      7400
 1555              	.LASF2:
 1556 000a 73697A65 		.ascii	"size_t\000"
 1556      5F7400
 1557              	.LASF46:
 1558 0011 76546173 		.ascii	"vTaskSuspendAll\000"
 1558      6B537573 
 1558      70656E64 
 1558      416C6C00 
 1559              	.LASF44:
 1560 0021 78506F72 		.ascii	"xPortGetFreeHeapSize\000"
 1560      74476574 
 1560      46726565 
 1560      48656170 
 1560      53697A65 
 1561              	.LASF40:
 1562 0036 415F424C 		.ascii	"A_BLOCK_LINK\000"
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 35


 1562      4F434B5F 
 1562      4C494E4B 
 1562      00
 1563              	.LASF41:
 1564 0043 70727648 		.ascii	"prvHeapInit\000"
 1564      65617049 
 1564      6E697400 
 1565              	.LASF47:
 1566 004f 78546173 		.ascii	"xTaskResumeAll\000"
 1566      6B526573 
 1566      756D6541 
 1566      6C6C00
 1567              	.LASF21:
 1568 005e 426C6F63 		.ascii	"BlockLink_t\000"
 1568      6B4C696E 
 1568      6B5F7400 
 1569              	.LASF24:
 1570 006a 7078426C 		.ascii	"pxBlock\000"
 1570      6F636B00 
 1571              	.LASF31:
 1572 0072 70784C69 		.ascii	"pxLink\000"
 1572      6E6B00
 1573              	.LASF42:
 1574 0079 7076506F 		.ascii	"pvPortMalloc\000"
 1574      72744D61 
 1574      6C6C6F63 
 1574      00
 1575              	.LASF22:
 1576 0086 70784669 		.ascii	"pxFirstFreeBlock\000"
 1576      72737446 
 1576      72656542 
 1576      6C6F636B 
 1576      00
 1577              	.LASF32:
 1578 0097 75634865 		.ascii	"ucHeap\000"
 1578      617000
 1579              	.LASF4:
 1580 009e 756E7369 		.ascii	"unsigned char\000"
 1580      676E6564 
 1580      20636861 
 1580      7200
 1581              	.LASF20:
 1582 00ac 78426C6F 		.ascii	"xBlockSize\000"
 1582      636B5369 
 1582      7A6500
 1583              	.LASF10:
 1584 00b7 6C6F6E67 		.ascii	"long unsigned int\000"
 1584      20756E73 
 1584      69676E65 
 1584      6420696E 
 1584      7400
 1585              	.LASF7:
 1586 00c9 73686F72 		.ascii	"short unsigned int\000"
 1586      7420756E 
 1586      7369676E 
 1586      65642069 
 1586      6E7400
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 36


 1587              	.LASF27:
 1588 00dc 78486561 		.ascii	"xHeapHasBeenInitialised\000"
 1588      70486173 
 1588      4265656E 
 1588      496E6974 
 1588      69616C69 
 1589              	.LASF35:
 1590 00f4 78456E64 		.ascii	"xEnd\000"
 1590      00
 1591              	.LASF6:
 1592 00f9 5F5F7569 		.ascii	"__uint16_t\000"
 1592      6E743136 
 1592      5F7400
 1593              	.LASF25:
 1594 0104 70785072 		.ascii	"pxPreviousBlock\000"
 1594      6576696F 
 1594      7573426C 
 1594      6F636B00 
 1595              	.LASF43:
 1596 0114 76506F72 		.ascii	"vPortFree\000"
 1596      74467265 
 1596      6500
 1597              	.LASF9:
 1598 011e 5F5F7569 		.ascii	"__uint32_t\000"
 1598      6E743332 
 1598      5F7400
 1599              	.LASF37:
 1600 0129 474E5520 		.ascii	"GNU C 4.9.3 20150529 (release) [ARM/embedded-4_9-br"
 1600      4320342E 
 1600      392E3320 
 1600      32303135 
 1600      30353239 
 1601 015c 616E6368 		.ascii	"anch revision 227977] -mcpu=cortex-m3 -mthumb -gdwa"
 1601      20726576 
 1601      6973696F 
 1601      6E203232 
 1601      37393737 
 1602 018f 72662D32 		.ascii	"rf-2 -Os -fomit-frame-pointer\000"
 1602      202D4F73 
 1602      202D666F 
 1602      6D69742D 
 1602      6672616D 
 1603              	.LASF28:
 1604 01ad 70765265 		.ascii	"pvReturn\000"
 1604      7475726E 
 1604      00
 1605              	.LASF38:
 1606 01b6 46726565 		.ascii	"FreeRTOS/Source/portable/MemMang/heap_2.c\000"
 1606      52544F53 
 1606      2F536F75 
 1606      7263652F 
 1606      706F7274 
 1607              	.LASF33:
 1608 01e0 68656170 		.ascii	"heapSTRUCT_SIZE\000"
 1608      53545255 
 1608      43545F53 
 1608      495A4500 
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 37


 1609              	.LASF34:
 1610 01f0 78537461 		.ascii	"xStart\000"
 1610      727400
 1611              	.LASF45:
 1612 01f7 76506F72 		.ascii	"vPortInitialiseBlocks\000"
 1612      74496E69 
 1612      7469616C 
 1612      69736542 
 1612      6C6F636B 
 1613              	.LASF0:
 1614 020d 756E7369 		.ascii	"unsigned int\000"
 1614      676E6564 
 1614      20696E74 
 1614      00
 1615              	.LASF39:
 1616 021a 2F557365 		.ascii	"/Users/ingamedeo/Downloads/STM32F103ZET6FreeRTOS\000"
 1616      72732F69 
 1616      6E67616D 
 1616      6564656F 
 1616      2F446F77 
 1617              	.LASF12:
 1618 024b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1618      206C6F6E 
 1618      6720756E 
 1618      7369676E 
 1618      65642069 
 1619              	.LASF15:
 1620 0262 75696E74 		.ascii	"uint8_t\000"
 1620      385F7400 
 1621              	.LASF26:
 1622 026a 70784E65 		.ascii	"pxNewBlockLink\000"
 1622      77426C6F 
 1622      636B4C69 
 1622      6E6B00
 1623              	.LASF13:
 1624 0279 73697A65 		.ascii	"sizetype\000"
 1624      74797065 
 1624      00
 1625              	.LASF11:
 1626 0282 6C6F6E67 		.ascii	"long long int\000"
 1626      206C6F6E 
 1626      6720696E 
 1626      7400
 1627              	.LASF30:
 1628 0290 7857616E 		.ascii	"xWantedSize\000"
 1628      74656453 
 1628      697A6500 
 1629              	.LASF14:
 1630 029c 63686172 		.ascii	"char\000"
 1630      00
 1631              	.LASF23:
 1632 02a1 70756341 		.ascii	"pucAlignedHeap\000"
 1632      6C69676E 
 1632      65644865 
 1632      617000
 1633              	.LASF29:
 1634 02b0 70784974 		.ascii	"pxIterator\000"
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 38


 1634      65726174 
 1634      6F7200
 1635              	.LASF5:
 1636 02bb 73686F72 		.ascii	"short int\000"
 1636      7420696E 
 1636      7400
 1637              	.LASF16:
 1638 02c5 75696E74 		.ascii	"uint16_t\000"
 1638      31365F74 
 1638      00
 1639              	.LASF36:
 1640 02ce 78467265 		.ascii	"xFreeBytesRemaining\000"
 1640      65427974 
 1640      65735265 
 1640      6D61696E 
 1640      696E6700 
 1641              	.LASF17:
 1642 02e2 75696E74 		.ascii	"uint32_t\000"
 1642      33325F74 
 1642      00
 1643              	.LASF8:
 1644 02eb 6C6F6E67 		.ascii	"long int\000"
 1644      20696E74 
 1644      00
 1645              	.LASF1:
 1646 02f4 7369676E 		.ascii	"signed char\000"
 1646      65642063 
 1646      68617200 
 1647              	.LASF19:
 1648 0300 70784E65 		.ascii	"pxNextFreeBlock\000"
 1648      78744672 
 1648      6565426C 
 1648      6F636B00 
 1649              	.LASF18:
 1650 0310 42617365 		.ascii	"BaseType_t\000"
 1650      54797065 
 1650      5F7400
 1651              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150529 (release) [ARM/embedded-4_9-br
ARM GAS  /var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 heap_2.c
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:73     .text:0000000000000000 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:78     .text:0000000000000000 pvPortMalloc
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:250    .text:00000000000000a4 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:257    .text:00000000000000b4 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:262    .text:00000000000000b4 vPortFree
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:333    .text:00000000000000ec $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:338    .text:00000000000000f4 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:343    .text:00000000000000f4 xPortGetFreeHeapSize
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:357    .text:00000000000000fc $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:361    .text:0000000000000100 $t
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:366    .text:0000000000000100 vPortInitialiseBlocks
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:378    .data:0000000000000000 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:382    .data:0000000000000000 xFreeBytesRemaining
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:385    .bss:0000000000000000 $d
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:390    .bss:0000000000000000 xStart
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:394    .bss:0000000000000008 xHeapHasBeenInitialised.5042
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:398    .bss:000000000000000c ucHeap
/var/folders/yt/6z6x8bjn5sjf5fbb45bk5m4c0000gn/T//ccx9pb5l.s:402    .bss:000000000000440c xEnd
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
